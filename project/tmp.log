prepare to parse dex file!
memPtr address is 0x7fbd0aa98000this is from parseDexFile
addr addr is 0x7fbd0aa98000sizeof(u2) is 2
sizeof(u4) is 4
sizeof(unsigned long int) is 8
stringIdsOff is 70
typeIdsOff is 480
fieldIdsOff is 6b8
methodIdsOff is 840
protoIdsOff  is 550
classDefsOff is cc0
pHeader->classDefsOff is 3264>>>>>>class 0
header.staticFieldsSize is 0,header.instanceFieldsSize is 0,header.directMethodsSize is 0,header.virtualMethodsSize is 7
virtualMethods[0] codeoff is 0
virtualMethods[1] codeoff is 0
virtualMethods[2] codeoff is 0
virtualMethods[3] codeoff is 0
virtualMethods[4] codeoff is 0
virtualMethods[5] codeoff is 0
virtualMethods[6] codeoff is 0
  Direct methods    -
  Virtual methods   -
##======##0codeoff is 0
##======##1codeoff is 0
##======##2codeoff is 0
##======##3codeoff is 0
##======##4codeoff is 0
##======##5codeoff is 0
##======##6codeoff is 0
>>>>>>class 1
header.staticFieldsSize is 0,header.instanceFieldsSize is 0,header.directMethodsSize is 0,header.virtualMethodsSize is 1
virtualMethods[0] codeoff is 0
  Direct methods    -
  Virtual methods   -
##======##0codeoff is 0
>>>>>>class 2
header.staticFieldsSize is 1,header.instanceFieldsSize is 4,header.directMethodsSize is 2,header.virtualMethodsSize is 7
directMethods[0] codeoff is f78
directMethods[1] codeoff is f94
virtualMethods[0] codeoff is fc4
virtualMethods[1] codeoff is 1008
virtualMethods[2] codeoff is 1080
virtualMethods[3] codeoff is 109c
virtualMethods[4] codeoff is 10b8
virtualMethods[5] codeoff is 1130
virtualMethods[6] codeoff is 1150
  Direct methods    -
##======##0codeoff is f78
baseAddr is 0x7fbd0aa98000,codeoff is 3960
pCode is 0x7fbd0aa98f78
      registers     : 1
      ins           : 0
      outs          : 0
      insns size    : 5 16-bit code units
##======##1codeoff is f94
baseAddr is 0x7fbd0aa98000,codeoff is 3988
pCode is 0x7fbd0aa98f94
      registers     : 3
      ins           : 2
      outs          : 1
      insns size    : 16 16-bit code units
  Virtual methods   -
##======##0codeoff is fc4
baseAddr is 0x7fbd0aa98000,codeoff is 4036
pCode is 0x7fbd0aa98fc4
      registers     : 5
      ins           : 1
      outs          : 2
      insns size    : 25 16-bit code units
##======##1codeoff is 1008
baseAddr is 0x7fbd0aa98000,codeoff is 4104
pCode is 0x7fbd0aa99008
      registers     : 7
      ins           : 1
      outs          : 2
      insns size    : 52 16-bit code units
##======##2codeoff is 1080
baseAddr is 0x7fbd0aa98000,codeoff is 4224
pCode is 0x7fbd0aa99080
      registers     : 2
      ins           : 1
      outs          : 1
      insns size    : 6 16-bit code units
##======##3codeoff is 109c
baseAddr is 0x7fbd0aa98000,codeoff is 4252
pCode is 0x7fbd0aa9909c
      registers     : 2
      ins           : 1
      outs          : 1
      insns size    : 6 16-bit code units
##======##4codeoff is 10b8
baseAddr is 0x7fbd0aa98000,codeoff is 4280
pCode is 0x7fbd0aa990b8
      registers     : 7
      ins           : 2
      outs          : 2
      insns size    : 52 16-bit code units
##======##5codeoff is 1130
baseAddr is 0x7fbd0aa98000,codeoff is 4400
pCode is 0x7fbd0aa99130
      registers     : 2
      ins           : 1
      outs          : 1
      insns size    : 7 16-bit code units
##======##6codeoff is 1150
baseAddr is 0x7fbd0aa98000,codeoff is 4432
pCode is 0x7fbd0aa99150
      registers     : 5
      ins           : 1
      outs          : 2
      insns size    : 27 16-bit code units
>>>>>>class 3
header.staticFieldsSize is 0,header.instanceFieldsSize is 0,header.directMethodsSize is 1,header.virtualMethodsSize is 2
directMethods[0] codeoff is 1198
virtualMethods[0] codeoff is 11b0
virtualMethods[1] codeoff is 11c4
  Direct methods    -
##======##0codeoff is 1198
baseAddr is 0x7fbd0aa98000,codeoff is 4504
pCode is 0x7fbd0aa99198
      registers     : 1
      ins           : 1
      outs          : 1
      insns size    : 4 16-bit code units
  Virtual methods   -
##======##0codeoff is 11b0
baseAddr is 0x7fbd0aa98000,codeoff is 4528
pCode is 0x7fbd0aa991b0
      registers     : 2
      ins           : 2
      outs          : 0
      insns size    : 1 16-bit code units
##======##1codeoff is 11c4
baseAddr is 0x7fbd0aa98000,codeoff is 4548
pCode is 0x7fbd0aa991c4
      registers     : 7
      ins           : 2
      outs          : 2
      insns size    : 116 16-bit code units
>>>>>>class 4
header.staticFieldsSize is 13,header.instanceFieldsSize is 0,header.directMethodsSize is 13,header.virtualMethodsSize is 1
directMethods[0] codeoff is 12bc
directMethods[1] codeoff is 12ec
directMethods[2] codeoff is 1304
directMethods[3] codeoff is 13b0
directMethods[4] codeoff is 1530
directMethods[5] codeoff is 155c
directMethods[6] codeoff is 1598
directMethods[7] codeoff is 15d4
directMethods[8] codeoff is 1614
directMethods[9] codeoff is 1654
directMethods[10] codeoff is 1694
directMethods[11] codeoff is 16d4
directMethods[12] codeoff is 16ec
virtualMethods[0] codeoff is 1748
  Direct methods    -
##======##0codeoff is 12bc
baseAddr is 0x7fbd0aa98000,codeoff is 4796
pCode is 0x7fbd0aa992bc
      registers     : 1
      ins           : 0
      outs          : 1
      insns size    : 15 16-bit code units
##======##1codeoff is 12ec
baseAddr is 0x7fbd0aa98000,codeoff is 4844
pCode is 0x7fbd0aa992ec
      registers     : 1
      ins           : 1
      outs          : 1
      insns size    : 4 16-bit code units
##======##2codeoff is 1304
baseAddr is 0x7fbd0aa98000,codeoff is 4868
pCode is 0x7fbd0aa99304
      registers     : 9
      ins           : 0
      outs          : 3
      insns size    : 77 16-bit code units
##======##3codeoff is 13b0
baseAddr is 0x7fbd0aa98000,codeoff is 5040
pCode is 0x7fbd0aa993b0
      registers     : 5
      ins           : 1
      outs          : 2
      insns size    : 184 16-bit code units
##======##4codeoff is 1530
baseAddr is 0x7fbd0aa98000,codeoff is 5424
pCode is 0x7fbd0aa99530
      registers     : 1
      ins           : 0
      outs          : 1
      insns size    : 14 16-bit code units
##======##5codeoff is 155c
baseAddr is 0x7fbd0aa98000,codeoff is 5468
pCode is 0x7fbd0aa9955c
      registers     : 4
      ins           : 0
      outs          : 1
      insns size    : 21 16-bit code units
##======##6codeoff is 1598
baseAddr is 0x7fbd0aa98000,codeoff is 5528
pCode is 0x7fbd0aa99598
      registers     : 3
      ins           : 1
      outs          : 2
      insns size    : 21 16-bit code units
##======##7codeoff is 15d4
baseAddr is 0x7fbd0aa98000,codeoff is 5588
pCode is 0x7fbd0aa995d4
      registers     : 3
      ins           : 1
      outs          : 2
      insns size    : 24 16-bit code units
##======##8codeoff is 1614
baseAddr is 0x7fbd0aa98000,codeoff is 5652
pCode is 0x7fbd0aa99614
      registers     : 3
      ins           : 1
      outs          : 2
      insns size    : 23 16-bit code units
##======##9codeoff is 1654
baseAddr is 0x7fbd0aa98000,codeoff is 5716
pCode is 0x7fbd0aa99654
      registers     : 3
      ins           : 0
      outs          : 2
      insns size    : 24 16-bit code units
##======##10codeoff is 1694
baseAddr is 0x7fbd0aa98000,codeoff is 5780
pCode is 0x7fbd0aa99694
      registers     : 3
      ins           : 0
      outs          : 2
      insns size    : 24 16-bit code units
##======##11codeoff is 16d4
baseAddr is 0x7fbd0aa98000,codeoff is 5844
pCode is 0x7fbd0aa996d4
      registers     : 2
      ins           : 1
      outs          : 0
      insns size    : 4 16-bit code units
##======##12codeoff is 16ec
baseAddr is 0x7fbd0aa98000,codeoff is 5868
pCode is 0x7fbd0aa996ec
      registers     : 2
      ins           : 0
      outs          : 1
      insns size    : 37 16-bit code units
  Virtual methods   -
##======##0codeoff is 1748
baseAddr is 0x7fbd0aa98000,codeoff is 5960
pCode is 0x7fbd0aa99748
      registers     : 6
      ins           : 1
      outs          : 3
      insns size    : 88 16-bit code units
>>>>>>class 5
header.staticFieldsSize is 0,header.instanceFieldsSize is 1,header.directMethodsSize is 2,header.virtualMethodsSize is 4
directMethods[0] codeoff is 1808
directMethods[1] codeoff is 1828
virtualMethods[0] codeoff is 1844
virtualMethods[1] codeoff is 1884
virtualMethods[2] codeoff is 189c
virtualMethods[3] codeoff is 18c4
  Direct methods    -
##======##0codeoff is 1808
baseAddr is 0x7fbd0aa98000,codeoff is 6152
pCode is 0x7fbd0aa99808
      registers     : 3
      ins           : 1
      outs          : 3
      insns size    : 8 16-bit code units
##======##1codeoff is 1828
baseAddr is 0x7fbd0aa98000,codeoff is 6184
pCode is 0x7fbd0aa99828
      registers     : 3
      ins           : 3
      outs          : 1
      insns size    : 6 16-bit code units
  Virtual methods   -
##======##0codeoff is 1844
baseAddr is 0x7fbd0aa98000,codeoff is 6212
pCode is 0x7fbd0aa99844
      registers     : 6
      ins           : 2
      outs          : 1
      insns size    : 24 16-bit code units
##======##1codeoff is 1884
baseAddr is 0x7fbd0aa98000,codeoff is 6276
pCode is 0x7fbd0aa99884
      registers     : 3
      ins           : 1
      outs          : 0
      insns size    : 3 16-bit code units
##======##2codeoff is 189c
baseAddr is 0x7fbd0aa98000,codeoff is 6300
pCode is 0x7fbd0aa9989c
      registers     : 6
      ins           : 1
      outs          : 1
      insns size    : 12 16-bit code units
##======##3codeoff is 18c4
baseAddr is 0x7fbd0aa98000,codeoff is 6340
pCode is 0x7fbd0aa998c4
      registers     : 3
      ins           : 3
      outs          : 0
      insns size    : 3 16-bit code units
>>>>>>class 6
header.staticFieldsSize is 0,header.instanceFieldsSize is 1,header.directMethodsSize is 2,header.virtualMethodsSize is 0
directMethods[0] codeoff is 18dc
directMethods[1] codeoff is 18f4
  Direct methods    -
##======##0codeoff is 18dc
baseAddr is 0x7fbd0aa98000,codeoff is 6364
pCode is 0x7fbd0aa998dc
      registers     : 1
      ins           : 1
      outs          : 1
      insns size    : 4 16-bit code units
##======##1codeoff is 18f4
baseAddr is 0x7fbd0aa98000,codeoff is 6388
pCode is 0x7fbd0aa998f4
      registers     : 8
      ins           : 1
      outs          : 3
      insns size    : 79 16-bit code units
  Virtual methods   -
>>>>>>class 7
header.staticFieldsSize is 0,header.instanceFieldsSize is 0,header.directMethodsSize is 2,header.virtualMethodsSize is 0
directMethods[0] codeoff is 19a4
directMethods[1] codeoff is 19bc
  Direct methods    -
##======##0codeoff is 19a4
baseAddr is 0x7fbd0aa98000,codeoff is 6564
pCode is 0x7fbd0aa999a4
      registers     : 1
      ins           : 1
      outs          : 1
      insns size    : 4 16-bit code units
##======##1codeoff is 19bc
baseAddr is 0x7fbd0aa98000,codeoff is 6588
pCode is 0x7fbd0aa999bc
      registers     : 11
      ins           : 1
      outs          : 3
      insns size    : 108 16-bit code units
  Virtual methods   -
>>>>>>class 8
header.staticFieldsSize is 0,header.instanceFieldsSize is 6,header.directMethodsSize is 1,header.virtualMethodsSize is 7
directMethods[0] codeoff is 1aa4
virtualMethods[0] codeoff is 1acc
virtualMethods[1] codeoff is 1ae0
virtualMethods[2] codeoff is 1af8
virtualMethods[3] codeoff is 1cec
virtualMethods[4] codeoff is 1da8
virtualMethods[5] codeoff is 1dbc
virtualMethods[6] codeoff is 1dd0
  Direct methods    -
##======##0codeoff is 1aa4
baseAddr is 0x7fbd0aa98000,codeoff is 6820
pCode is 0x7fbd0aa99aa4
      registers     : 2
      ins           : 1
      outs          : 1
      insns size    : 12 16-bit code units
  Virtual methods   -
##======##0codeoff is 1acc
baseAddr is 0x7fbd0aa98000,codeoff is 6860
pCode is 0x7fbd0aa99acc
      registers     : 2
      ins           : 1
      outs          : 0
      insns size    : 2 16-bit code units
##======##1codeoff is 1ae0
baseAddr is 0x7fbd0aa98000,codeoff is 6880
pCode is 0x7fbd0aa99ae0
      registers     : 2
      ins           : 1
      outs          : 0
      insns size    : 3 16-bit code units
##======##2codeoff is 1af8
baseAddr is 0x7fbd0aa98000,codeoff is 6904
pCode is 0x7fbd0aa99af8
      registers     : 19
      ins           : 1
      outs          : 2
      insns size    : 241 16-bit code units
##======##3codeoff is 1cec
baseAddr is 0x7fbd0aa98000,codeoff is 7404
pCode is 0x7fbd0aa99cec
      registers     : 10
      ins           : 2
      outs          : 2
      insns size    : 86 16-bit code units
##======##4codeoff is 1da8
baseAddr is 0x7fbd0aa98000,codeoff is 7592
pCode is 0x7fbd0aa99da8
      registers     : 1
      ins           : 1
      outs          : 0
      insns size    : 1 16-bit code units
##======##5codeoff is 1dbc
baseAddr is 0x7fbd0aa98000,codeoff is 7612
pCode is 0x7fbd0aa99dbc
      registers     : 1
      ins           : 1
      outs          : 0
      insns size    : 1 16-bit code units
##======##6codeoff is 1dd0
baseAddr is 0x7fbd0aa98000,codeoff is 7632
pCode is 0x7fbd0aa99dd0
      registers     : 3
      ins           : 1
      outs          : 2
      insns size    : 8 16-bit code units
>>>>>>class 9
header.staticFieldsSize is 0,header.instanceFieldsSize is 1,header.directMethodsSize is 1,header.virtualMethodsSize is 7
directMethods[0] codeoff is 1df0
virtualMethods[0] codeoff is 1e10
virtualMethods[1] codeoff is 1e24
virtualMethods[2] codeoff is 1e3c
virtualMethods[3] codeoff is 2224
virtualMethods[4] codeoff is 2240
virtualMethods[5] codeoff is 2254
virtualMethods[6] codeoff is 2268
  Direct methods    -
##======##0codeoff is 1df0
baseAddr is 0x7fbd0aa98000,codeoff is 7664
pCode is 0x7fbd0aa99df0
      registers     : 2
      ins           : 1
      outs          : 1
      insns size    : 8 16-bit code units
  Virtual methods   -
##======##0codeoff is 1e10
baseAddr is 0x7fbd0aa98000,codeoff is 7696
pCode is 0x7fbd0aa99e10
      registers     : 2
      ins           : 1
      outs          : 0
      insns size    : 2 16-bit code units
##======##1codeoff is 1e24
baseAddr is 0x7fbd0aa98000,codeoff is 7716
pCode is 0x7fbd0aa99e24
      registers     : 2
      ins           : 1
      outs          : 0
      insns size    : 3 16-bit code units
##======##2codeoff is 1e3c
baseAddr is 0x7fbd0aa98000,codeoff is 7740
pCode is 0x7fbd0aa99e3c
      registers     : 19
      ins           : 1
      outs          : 0
      insns size    : 492 16-bit code units
##======##3codeoff is 2224
baseAddr is 0x7fbd0aa98000,codeoff is 8740
pCode is 0x7fbd0aa9a224
      registers     : 3
      ins           : 2
      outs          : 0
      insns size    : 6 16-bit code units
##======##4codeoff is 2240
baseAddr is 0x7fbd0aa98000,codeoff is 8768
pCode is 0x7fbd0aa9a240
      registers     : 1
      ins           : 1
      outs          : 0
      insns size    : 1 16-bit code units
##======##5codeoff is 2254
baseAddr is 0x7fbd0aa98000,codeoff is 8788
pCode is 0x7fbd0aa9a254
      registers     : 1
      ins           : 1
      outs          : 0
      insns size    : 1 16-bit code units
##======##6codeoff is 2268
baseAddr is 0x7fbd0aa98000,codeoff is 8808
pCode is 0x7fbd0aa9a268
      registers     : 3
      ins           : 1
      outs          : 2
      insns size    : 8 16-bit code units
>>>>>>class 10
header.staticFieldsSize is 0,header.instanceFieldsSize is 5,header.directMethodsSize is 1,header.virtualMethodsSize is 7
directMethods[0] codeoff is 2288
virtualMethods[0] codeoff is 22b0
virtualMethods[1] codeoff is 22c4
virtualMethods[2] codeoff is 22dc
virtualMethods[3] codeoff is 23a8
virtualMethods[4] codeoff is 23d0
virtualMethods[5] codeoff is 23e4
virtualMethods[6] codeoff is 23f8
  Direct methods    -
##======##0codeoff is 2288
baseAddr is 0x7fbd0aa98000,codeoff is 8840
pCode is 0x7fbd0aa9a288
      registers     : 2
      ins           : 1
      outs          : 1
      insns size    : 12 16-bit code units
  Virtual methods   -
##======##0codeoff is 22b0
baseAddr is 0x7fbd0aa98000,codeoff is 8880
pCode is 0x7fbd0aa9a2b0
      registers     : 2
      ins           : 1
      outs          : 0
      insns size    : 2 16-bit code units
##======##1codeoff is 22c4
baseAddr is 0x7fbd0aa98000,codeoff is 8900
pCode is 0x7fbd0aa9a2c4
      registers     : 2
      ins           : 1
      outs          : 0
      insns size    : 3 16-bit code units
##======##2codeoff is 22dc
baseAddr is 0x7fbd0aa98000,codeoff is 8924
pCode is 0x7fbd0aa9a2dc
      registers     : 13
      ins           : 1
      outs          : 0
      insns size    : 93 16-bit code units
##======##3codeoff is 23a8
baseAddr is 0x7fbd0aa98000,codeoff is 9128
pCode is 0x7fbd0aa9a3a8
      registers     : 3
      ins           : 2
      outs          : 0
      insns size    : 12 16-bit code units
##======##4codeoff is 23d0
baseAddr is 0x7fbd0aa98000,codeoff is 9168
pCode is 0x7fbd0aa9a3d0
      registers     : 1
      ins           : 1
      outs          : 0
      insns size    : 1 16-bit code units
##======##5codeoff is 23e4
baseAddr is 0x7fbd0aa98000,codeoff is 9188
pCode is 0x7fbd0aa9a3e4
      registers     : 1
      ins           : 1
      outs          : 0
      insns size    : 1 16-bit code units
##======##6codeoff is 23f8
baseAddr is 0x7fbd0aa98000,codeoff is 9208
pCode is 0x7fbd0aa9a3f8
      registers     : 3
      ins           : 1
      outs          : 2
      insns size    : 8 16-bit code units
>>>>>>class 11
header.staticFieldsSize is 0,header.instanceFieldsSize is 2,header.directMethodsSize is 1,header.virtualMethodsSize is 9
directMethods[0] codeoff is 2418
virtualMethods[0] codeoff is 2438
virtualMethods[1] codeoff is 2464
virtualMethods[2] codeoff is 2478
virtualMethods[3] codeoff is 2490
virtualMethods[4] codeoff is 24d0
virtualMethods[5] codeoff is 24ec
virtualMethods[6] codeoff is 2544
virtualMethods[7] codeoff is 2558
virtualMethods[8] codeoff is 256c
  Direct methods    -
##======##0codeoff is 2418
baseAddr is 0x7fbd0aa98000,codeoff is 9240
pCode is 0x7fbd0aa9a418
      registers     : 2
      ins           : 1
      outs          : 1
      insns size    : 8 16-bit code units
  Virtual methods   -
##======##0codeoff is 2438
baseAddr is 0x7fbd0aa98000,codeoff is 9272
pCode is 0x7fbd0aa9a438
      registers     : 3
      ins           : 2
      outs          : 2
      insns size    : 13 16-bit code units
##======##1codeoff is 2464
baseAddr is 0x7fbd0aa98000,codeoff is 9316
pCode is 0x7fbd0aa9a464
      registers     : 2
      ins           : 1
      outs          : 0
      insns size    : 2 16-bit code units
##======##2codeoff is 2478
baseAddr is 0x7fbd0aa98000,codeoff is 9336
pCode is 0x7fbd0aa9a478
      registers     : 2
      ins           : 1
      outs          : 0
      insns size    : 3 16-bit code units
##======##3codeoff is 2490
baseAddr is 0x7fbd0aa98000,codeoff is 9360
pCode is 0x7fbd0aa9a490
      registers     : 6
      ins           : 1
      outs          : 2
      insns size    : 23 16-bit code units
##======##4codeoff is 24d0
baseAddr is 0x7fbd0aa98000,codeoff is 9424
pCode is 0x7fbd0aa9a4d0
      registers     : 3
      ins           : 2
      outs          : 0
      insns size    : 6 16-bit code units
##======##5codeoff is 24ec
baseAddr is 0x7fbd0aa98000,codeoff is 9452
pCode is 0x7fbd0aa9a4ec
      registers     : 6
      ins           : 2
      outs          : 2
      insns size    : 35 16-bit code units
##======##6codeoff is 2544
baseAddr is 0x7fbd0aa98000,codeoff is 9540
pCode is 0x7fbd0aa9a544
      registers     : 1
      ins           : 1
      outs          : 0
      insns size    : 1 16-bit code units
##======##7codeoff is 2558
baseAddr is 0x7fbd0aa98000,codeoff is 9560
pCode is 0x7fbd0aa9a558
      registers     : 1
      ins           : 1
      outs          : 0
      insns size    : 1 16-bit code units
##======##8codeoff is 256c
baseAddr is 0x7fbd0aa98000,codeoff is 9580
pCode is 0x7fbd0aa9a56c
      registers     : 3
      ins           : 1
      outs          : 2
      insns size    : 8 16-bit code units
>>>>>>class 12
header.staticFieldsSize is 0,header.instanceFieldsSize is 0,header.directMethodsSize is 1,header.virtualMethodsSize is 0
directMethods[0] codeoff is 258c
  Direct methods    -
##======##0codeoff is 258c
baseAddr is 0x7fbd0aa98000,codeoff is 9612
pCode is 0x7fbd0aa9a58c
      registers     : 1
      ins           : 1
      outs          : 1
      insns size    : 4 16-bit code units
  Virtual methods   -
>>>>>>class 13
header.staticFieldsSize is 1,header.instanceFieldsSize is 0,header.directMethodsSize is 1,header.virtualMethodsSize is 0
directMethods[0] codeoff is 25a4
  Direct methods    -
##======##0codeoff is 25a4
baseAddr is 0x7fbd0aa98000,codeoff is 9636
pCode is 0x7fbd0aa9a5a4
      registers     : 1
      ins           : 1
      outs          : 1
      insns size    : 4 16-bit code units
  Virtual methods   -
>>>>>>class 14
header.staticFieldsSize is 1,header.instanceFieldsSize is 0,header.directMethodsSize is 1,header.virtualMethodsSize is 0
directMethods[0] codeoff is 25bc
  Direct methods    -
##======##0codeoff is 25bc
baseAddr is 0x7fbd0aa98000,codeoff is 9660
pCode is 0x7fbd0aa9a5bc
      registers     : 1
      ins           : 1
      outs          : 1
      insns size    : 4 16-bit code units
  Virtual methods   -
>>>>>>class 15
header.staticFieldsSize is 2,header.instanceFieldsSize is 0,header.directMethodsSize is 1,header.virtualMethodsSize is 0
directMethods[0] codeoff is 25d4
  Direct methods    -
##======##0codeoff is 25d4
baseAddr is 0x7fbd0aa98000,codeoff is 9684
pCode is 0x7fbd0aa9a5d4
      registers     : 1
      ins           : 1
      outs          : 1
      insns size    : 4 16-bit code units
  Virtual methods   -
>>>>>>class 16
header.staticFieldsSize is 0,header.instanceFieldsSize is 0,header.directMethodsSize is 1,header.virtualMethodsSize is 0
directMethods[0] codeoff is 25ec
  Direct methods    -
##======##0codeoff is 25ec
baseAddr is 0x7fbd0aa98000,codeoff is 9708
pCode is 0x7fbd0aa9a5ec
      registers     : 1
      ins           : 1
      outs          : 1
      insns size    : 4 16-bit code units
  Virtual methods   -
>>>>>>class 17
header.staticFieldsSize is 0,header.instanceFieldsSize is 2,header.directMethodsSize is 1,header.virtualMethodsSize is 7
directMethods[0] codeoff is 2604
virtualMethods[0] codeoff is 2624
virtualMethods[1] codeoff is 2638
virtualMethods[2] codeoff is 2650
virtualMethods[3] codeoff is 26e4
virtualMethods[4] codeoff is 270c
virtualMethods[5] codeoff is 2720
virtualMethods[6] codeoff is 2734
  Direct methods    -
##======##0codeoff is 2604
baseAddr is 0x7fbd0aa98000,codeoff is 9732
pCode is 0x7fbd0aa9a604
      registers     : 2
      ins           : 1
      outs          : 1
      insns size    : 8 16-bit code units
  Virtual methods   -
##======##0codeoff is 2624
baseAddr is 0x7fbd0aa98000,codeoff is 9764
pCode is 0x7fbd0aa9a624
      registers     : 2
      ins           : 1
      outs          : 0
      insns size    : 2 16-bit code units
##======##1codeoff is 2638
baseAddr is 0x7fbd0aa98000,codeoff is 9784
pCode is 0x7fbd0aa9a638
      registers     : 2
      ins           : 1
      outs          : 0
      insns size    : 3 16-bit code units
##======##2codeoff is 2650
baseAddr is 0x7fbd0aa98000,codeoff is 9808
pCode is 0x7fbd0aa9a650
      registers     : 9
      ins           : 1
      outs          : 0
      insns size    : 65 16-bit code units
##======##3codeoff is 26e4
baseAddr is 0x7fbd0aa98000,codeoff is 9956
pCode is 0x7fbd0aa9a6e4
      registers     : 3
      ins           : 2
      outs          : 0
      insns size    : 12 16-bit code units
##======##4codeoff is 270c
baseAddr is 0x7fbd0aa98000,codeoff is 9996
pCode is 0x7fbd0aa9a70c
      registers     : 1
      ins           : 1
      outs          : 0
      insns size    : 1 16-bit code units
##======##5codeoff is 2720
baseAddr is 0x7fbd0aa98000,codeoff is 10016
pCode is 0x7fbd0aa9a720
      registers     : 1
      ins           : 1
      outs          : 0
      insns size    : 1 16-bit code units
##======##6codeoff is 2734
baseAddr is 0x7fbd0aa98000,codeoff is 10036
pCode is 0x7fbd0aa9a734
      registers     : 3
      ins           : 1
      outs          : 2
      insns size    : 8 16-bit code units
>>>>>>class 18
header.staticFieldsSize is 0,header.instanceFieldsSize is 3,header.directMethodsSize is 1,header.virtualMethodsSize is 4
directMethods[0] codeoff is 2754
virtualMethods[0] codeoff is 2780
virtualMethods[1] codeoff is 27a0
virtualMethods[2] codeoff is 27dc
virtualMethods[3] codeoff is 281c
  Direct methods    -
##======##0codeoff is 2754
baseAddr is 0x7fbd0aa98000,codeoff is 10068
pCode is 0x7fbd0aa9a754
      registers     : 3
      ins           : 1
      outs          : 1
      insns size    : 13 16-bit code units
  Virtual methods   -
##======##0codeoff is 2780
baseAddr is 0x7fbd0aa98000,codeoff is 10112
pCode is 0x7fbd0aa9a780
      registers     : 3
      ins           : 1
      outs          : 1
      insns size    : 8 16-bit code units
##======##1codeoff is 27a0
baseAddr is 0x7fbd0aa98000,codeoff is 10144
pCode is 0x7fbd0aa9a7a0
      registers     : 6
      ins           : 1
      outs          : 1
      insns size    : 21 16-bit code units
##======##2codeoff is 27dc
baseAddr is 0x7fbd0aa98000,codeoff is 10204
pCode is 0x7fbd0aa9a7dc
      registers     : 4
      ins           : 1
      outs          : 1
      insns size    : 23 16-bit code units
##======##3codeoff is 281c
baseAddr is 0x7fbd0aa98000,codeoff is 10268
pCode is 0x7fbd0aa9a81c
      registers     : 4
      ins           : 1
      outs          : 1
      insns size    : 19 16-bit code units
>>>>>>class 19
header.staticFieldsSize is 0,header.instanceFieldsSize is 4,header.directMethodsSize is 1,header.virtualMethodsSize is 7
directMethods[0] codeoff is 2854
virtualMethods[0] codeoff is 2874
virtualMethods[1] codeoff is 2888
virtualMethods[2] codeoff is 28a0
virtualMethods[3] codeoff is 2930
virtualMethods[4] codeoff is 2964
virtualMethods[5] codeoff is 2978
virtualMethods[6] codeoff is 298c
  Direct methods    -
##======##0codeoff is 2854
baseAddr is 0x7fbd0aa98000,codeoff is 10324
pCode is 0x7fbd0aa9a854
      registers     : 2
      ins           : 1
      outs          : 1
      insns size    : 8 16-bit code units
  Virtual methods   -
##======##0codeoff is 2874
baseAddr is 0x7fbd0aa98000,codeoff is 10356
pCode is 0x7fbd0aa9a874
      registers     : 2
      ins           : 1
      outs          : 0
      insns size    : 2 16-bit code units
##======##1codeoff is 2888
baseAddr is 0x7fbd0aa98000,codeoff is 10376
pCode is 0x7fbd0aa9a888
      registers     : 2
      ins           : 1
      outs          : 0
      insns size    : 3 16-bit code units
##======##2codeoff is 28a0
baseAddr is 0x7fbd0aa98000,codeoff is 10400
pCode is 0x7fbd0aa9a8a0
      registers     : 7
      ins           : 1
      outs          : 3
      insns size    : 63 16-bit code units
##======##3codeoff is 2930
baseAddr is 0x7fbd0aa98000,codeoff is 10544
pCode is 0x7fbd0aa9a930
      registers     : 3
      ins           : 2
      outs          : 0
      insns size    : 18 16-bit code units
##======##4codeoff is 2964
baseAddr is 0x7fbd0aa98000,codeoff is 10596
pCode is 0x7fbd0aa9a964
      registers     : 1
      ins           : 1
      outs          : 0
      insns size    : 1 16-bit code units
##======##5codeoff is 2978
baseAddr is 0x7fbd0aa98000,codeoff is 10616
pCode is 0x7fbd0aa9a978
      registers     : 1
      ins           : 1
      outs          : 0
      insns size    : 1 16-bit code units
##======##6codeoff is 298c
baseAddr is 0x7fbd0aa98000,codeoff is 10636
pCode is 0x7fbd0aa9a98c
      registers     : 3
      ins           : 1
      outs          : 2
      insns size    : 8 16-bit code units
[[[[[[[[[[ code 0 ]]]]]]]]]]
~~~~~~codeoffset=0xf78; insns off=0xf88;registers is 1;insns size is 5~~~~~~~~
000f88: 1300 e803                              |0000: const/16 v0, #int 1000 // #3e8
000f8c: 6700 0400                              |0002: sput v0,field@0004
000f90: 0e00                                   |0004: return-void
[[[[[[[[[[ code 1 ]]]]]]]]]]
~~~~~~codeoffset=0xf94; insns off=0xfa4;registers is 3;insns size is 16~~~~~~~~
000fa4: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
mark pos is 6 : 3 ==
000faa: 1300 e803                              |0003: const/16 v0, #int 1000 // #3e8
000fae: 5910 0200                              |0005: iput v0, v1,field@0002
000fb2: 5b12 0300                              |0007: iput-object v2, v1,field@0003
000fb6: 7210 0600 0200                         |0009: invoke-interface {v2}, method@0006
mark pos is 18 : c ==
000fbc: 0a00                                   |000c: move-result v0
000fbe: 5910 0200                              |000d: iput v0, v1,field@0002
000fc2: 0e00                                   |000f: return-void
[[[[[[[[[[ code 2 ]]]]]]]]]]
~~~~~~codeoffset=0xfc4; insns off=0xfd4;registers is 5;insns size is 25~~~~~~~~
000fd4: 6e10 1000 0400                         |0000: invoke-virtual {v4}, method@0010
mark pos is 6 : 3 ==
000fda: 0a00                                   |0003: move-result v0
000fdc: 3900 0300                              |0004: if-nez v0, 0007 // +0003
mark pos is e : 7 ==
mark pos is c : 6 ==
000fe0: 0e00                                   |0006: return-void
mark pos is e : 7 ==
000fe2: 6e20 1300 0400                         |0007: invoke-virtual {v4, v0}, method@0013
mark pos is 14 : a ==
000fe8: 0a01                                   |000a: move-result v1
000fea: 3801 0a00                              |000b: if-eqz v1, 0015 // +000a
mark pos is 2a : 15 ==
mark pos is 1a : d ==
000fee: da02 0164                              |000d: mul-int/lit8 v2, v1, #int 100 // #64
000ff2: da03 0003                              |000f: mul-int/lit8 v3, v0, #int 3 // #03
000ff6: b332                                   |0011: div-int/2addr v2, v3
000ff8: 5942 0200                              |0012: iput v2, v4,field@0002
000ffc: 28f2                                   |0014: goto 0006 // -000e
mark pos is c : 6 ==
mark pos is 2a : 15 ==
000ffe: 1202                                   |0015: const/4 v2, #int 0 // #0
001000: 5942 0200                              |0016: iput v2, v4,field@0002
001004: 28ee                                   |0018: goto 0006 // -0012
mark pos is c : 6 ==
[[[[[[[[[[ code 3 ]]]]]]]]]]
~~~~~~codeoffset=0x1008; insns off=0x1018;registers is 7;insns size is 52~~~~~~~~
001018: 1203                                   |0000: const/4 v3, #int 0 // #0
00101a: 1200                                   |0001: const/4 v0, #int 0 // #0
00101c: 2201 1b00                              |0002: new-instance v1,class@001b
001020: 7010 6100 0100                         |0004: invoke-direct {v1}, method@0061
mark pos is e : 7 ==
001026: 5462 0300                              |0007: iget-object v2, v6,field@0003
00102a: 7220 0800 3200                         |0009: invoke-interface {v2, v3}, method@0008
mark pos is 18 : c ==
001030: 0a02                                   |000c: move-result v2
001032: 3902 0400                              |000d: if-nez v2, 0011 // +0004
mark pos is 22 : 11 ==
mark pos is 1e : f ==
001036: 0132                                   |000f: move v2, v3
001038: 0f02                                   |0010: return v2
mark pos is 22 : 11 ==
00103a: 6e10 6400 0100                         |0011: invoke-virtual {v1}, method@0064
mark pos is 28 : 14 ==
001040: 6e10 6300 0100                         |0014: invoke-virtual {v1}, method@0063
mark pos is 2e : 17 ==
001046: 0b02                                   |0017: move-result-wide v2
001048: 6004 0400                              |0018: sget v4,field@0004
00104c: 8144                                   |001a: int-to-long v4, v4
00104e: 3102 0204                              |001b: cmp-long v2, v2, v4
001052: 3a02 0c00                              |001d: if-ltz v2, 0029 // +000c
mark pos is 52 : 29 ==
mark pos is 3e : 1f ==
001056: 6e10 6500 0100                         |001f: invoke-virtual {v1}, method@0065
mark pos is 44 : 22 ==
00105c: 5462 0300                              |0022: iget-object v2, v6,field@0003
001060: 7210 0500 0200                         |0024: invoke-interface {v2}, method@0005
mark pos is 4e : 27 ==
001066: 0102                                   |0027: move v2, v0
001068: 28e8                                   |0028: goto 0010 // -0018
mark pos is 20 : 10 ==
mark pos is 52 : 29 ==
00106a: d800 0001                              |0029: add-int/lit8 v0, v0, #int 1 // #01
00106e: 5462 0300                              |002b: iget-object v2, v6,field@0003
001072: 7210 0700 0200                         |002d: invoke-interface {v2}, method@0007
mark pos is 60 : 30 ==
001078: 0a02                                   |0030: move-result v2
00107a: 5962 0000                              |0031: iput v2, v6,field@0000
00107e: 28e1                                   |0033: goto 0014 // -001f
mark pos is 28 : 14 ==
[[[[[[[[[[ code 4 ]]]]]]]]]]
~~~~~~codeoffset=0x1080; insns off=0x1090;registers is 2;insns size is 6~~~~~~~~
001090: 5410 0300                              |0000: iget-object v0, v1,field@0003
001094: 7210 0900 0000                         |0002: invoke-interface {v0}, method@0009
mark pos is a : 5 ==
00109a: 0e00                                   |0005: return-void
[[[[[[[[[[ code 5 ]]]]]]]]]]
~~~~~~codeoffset=0x109c; insns off=0x10ac;registers is 2;insns size is 6~~~~~~~~
0010ac: 5410 0300                              |0000: iget-object v0, v1,field@0003
0010b0: 7210 0a00 0000                         |0002: invoke-interface {v0}, method@000a
mark pos is a : 5 ==
0010b6: 0e00                                   |0005: return-void
[[[[[[[[[[ code 6 ]]]]]]]]]]
~~~~~~codeoffset=0x10b8; insns off=0x10c8;registers is 7;insns size is 52~~~~~~~~
0010c8: 1204                                   |0000: const/4 v4, #int 0 // #0
0010ca: 1200                                   |0001: const/4 v0, #int 0 // #0
0010cc: 5453 0300                              |0002: iget-object v3, v5,field@0003
0010d0: 7220 0800 4300                         |0004: invoke-interface {v3, v4}, method@0008
mark pos is e : 7 ==
0010d6: 0a03                                   |0007: move-result v3
0010d8: 3903 0400                              |0008: if-nez v3, 000c // +0004
mark pos is 18 : c ==
mark pos is 14 : a ==
0010dc: 0143                                   |000a: move v3, v4
0010de: 0f03                                   |000b: return v3
mark pos is 18 : c ==
0010e0: 2202 1b00                              |000c: new-instance v2,class@001b
0010e4: 7010 6100 0200                         |000e: invoke-direct {v2}, method@0061
mark pos is 22 : 11 ==
0010ea: 6e10 6400 0200                         |0011: invoke-virtual {v2}, method@0064
mark pos is 28 : 14 ==
0010f0: da01 0603                              |0014: mul-int/lit8 v1, v6, #int 3 // #03
0010f4: 1200                                   |0016: const/4 v0, #int 0 // #0
0010f6: 3c01 1000                              |0017: if-gtz v1, 0027 // +0010
mark pos is 4e : 27 ==
mark pos is 32 : 19 ==
0010fa: 6e10 6500 0200                         |0019: invoke-virtual {v2}, method@0065
mark pos is 38 : 1c ==
001100: 5453 0300                              |001c: iget-object v3, v5,field@0003
001104: 7210 0500 0300                         |001e: invoke-interface {v3}, method@0005
mark pos is 42 : 21 ==
00110a: 6e10 6300 0200                         |0021: invoke-virtual {v2}, method@0063
mark pos is 48 : 24 ==
001110: 0b03                                   |0024: move-result-wide v3
001112: 8433                                   |0025: long-to-int v3, v3
001114: 28e5                                   |0026: goto 000b // -001b
mark pos is 16 : b ==
mark pos is 4e : 27 ==
001116: d801 01ff                              |0027: add-int/lit8 v1, v1, #int -1 // #ff
00111a: d800 0001                              |0029: add-int/lit8 v0, v0, #int 1 // #01
00111e: 5453 0300                              |002b: iget-object v3, v5,field@0003
001122: 7210 0700 0300                         |002d: invoke-interface {v3}, method@0007
mark pos is 60 : 30 ==
001128: 0a03                                   |0030: move-result v3
00112a: 5953 0000                              |0031: iput v3, v5,field@0000
00112e: 28e4                                   |0033: goto 0017 // -001c
mark pos is 2e : 17 ==
[[[[[[[[[[ code 7 ]]]]]]]]]]
~~~~~~codeoffset=0x1130; insns off=0x1140;registers is 2;insns size is 7~~~~~~~~
001140: 5410 0300                              |0000: iget-object v0, v1,field@0003
001144: 7210 0b00 0000                         |0002: invoke-interface {v0}, method@000b
mark pos is a : 5 ==
00114a: 0c00                                   |0005: move-result-object v0
00114c: 1100                                   |0006: return-object v0
[[[[[[[[[[ code 8 ]]]]]]]]]]
~~~~~~codeoffset=0x1150; insns off=0x1160;registers is 5;insns size is 27~~~~~~~~
001160: 1202                                   |0000: const/4 v2, #int 0 // #0
001162: 6e10 1000 0400                         |0001: invoke-virtual {v4}, method@0010
mark pos is 8 : 4 ==
001168: 0a00                                   |0004: move-result v0
00116a: 3900 0500                              |0005: if-nez v0, 000a // +0005
mark pos is 14 : a ==
mark pos is e : 7 ==
00116e: 5942 0100                              |0007: iput v2, v4,field@0001
001172: 0f02                                   |0009: return v2
mark pos is 14 : a ==
001174: 6e20 1300 0400                         |000a: invoke-virtual {v4, v0}, method@0013
mark pos is 1a : d ==
00117a: 0a01                                   |000d: move-result v1
00117c: 3801 0900                              |000e: if-eqz v1, 0017 // +0009
mark pos is 2e : 17 ==
mark pos is 20 : 10 ==
001180: 5242 0200                              |0010: iget v2, v4,field@0002
001184: da03 0003                              |0012: mul-int/lit8 v3, v0, #int 3 // #03
001188: b232                                   |0014: mul-int/2addr v2, v3
00118a: 9301 0201                              |0015: div-int v1, v2, v1
00118e: 5941 0100                              |0017: iput v1, v4,field@0001
001192: 0112                                   |0019: move v2, v1
001194: 28ef                                   |001a: goto 0009 // -0011
mark pos is 12 : 9 ==
[[[[[[[[[[ code 9 ]]]]]]]]]]
~~~~~~codeoffset=0x1198; insns off=0x11a8;registers is 1;insns size is 4~~~~~~~~
0011a8: 7010 0000 0000                         |0000: invoke-direct {v0}, method@0000
mark pos is 6 : 3 ==
0011ae: 0e00                                   |0003: return-void
[[[[[[[[[[ code 10 ]]]]]]]]]]
~~~~~~codeoffset=0x11b0; insns off=0x11c0;registers is 2;insns size is 1~~~~~~~~
0011c0: 0e00                                   |0000: return-void
[[[[[[[[[[ code 11 ]]]]]]]]]]
~~~~~~codeoffset=0x11c4; insns off=0x11d4;registers is 7;insns size is 116~~~~~~~~
0011d4: 6f20 0100 6500                         |0000: invoke-super {v5, v6}, method@0001
mark pos is 6 : 3 ==
0011da: 2202 0800                              |0003: new-instance v2,class@0008
0011de: 7020 0200 5200                         |0005: invoke-direct {v2, v5}, method@0002
mark pos is 10 : 8 ==
0011e4: 1a03 0b00                              |0008: const-string v3, string@000b
0011e8: 6e20 0400 3200                         |000a: invoke-virtual {v2, v3}, method@0004
mark pos is 1a : d ==
0011ee: 2200 0d00                              |000d: new-instance v0,class@000d
0011f2: 7010 1b00 0000                         |000f: invoke-direct {v0}, method@001b
mark pos is 24 : 12 ==
0011f8: 7100 2700 0000                         |0012: invoke-static {}, method@0027
mark pos is 2a : 15 ==
0011fe: 7100 2400 0000                         |0015: invoke-static {}, method@0024
mark pos is 30 : 18 ==
001204: 6e10 2300 0000                         |0018: invoke-virtual {v0}, method@0023
mark pos is 36 : 1b ==
00120a: 1201                                   |001b: const/4 v1, #int 0 // #0
00120c: 7110 2100 0100                         |001c: invoke-static {v1}, method@0021
mark pos is 3e : 1f ==
001212: 0c03                                   |001f: move-result-object v3
001214: 6e20 0300 3200                         |0020: invoke-virtual {v2, v3}, method@0003
mark pos is 46 : 23 ==
00121a: 2203 2900                              |0023: new-instance v3,class@0029
00121e: 1a04 0200                              |0025: const-string v4, string@0002
001222: 7020 7f00 4300                         |0027: invoke-direct {v3, v4}, method@007f
mark pos is 54 : 2a ==
001228: 7110 2200 0100                         |002a: invoke-static {v1}, method@0022
mark pos is 5a : 2d ==
00122e: 0a04                                   |002d: move-result v4
001230: 6e20 8000 4300                         |002e: invoke-virtual {v3, v4}, method@0080
mark pos is 62 : 31 ==
001236: 0c03                                   |0031: move-result-object v3
001238: 6e10 8300 0300                         |0032: invoke-virtual {v3}, method@0083
mark pos is 6a : 35 ==
00123e: 0c03                                   |0035: move-result-object v3
001240: 6e20 0300 3200                         |0036: invoke-virtual {v2, v3}, method@0003
mark pos is 72 : 39 ==
001246: 2203 2900                              |0039: new-instance v3,class@0029
00124a: 1a04 0100                              |003b: const-string v4, string@0001
00124e: 7020 7f00 4300                         |003d: invoke-direct {v3, v4}, method@007f
mark pos is 80 : 40 ==
001254: 7110 2000 0100                         |0040: invoke-static {v1}, method@0020
mark pos is 86 : 43 ==
00125a: 0a04                                   |0043: move-result v4
00125c: 6e20 8000 4300                         |0044: invoke-virtual {v3, v4}, method@0080
mark pos is 8e : 47 ==
001262: 0c03                                   |0047: move-result-object v3
001264: 1a04 0300                              |0048: const-string v4, string@0003
001268: 6e20 8200 4300                         |004a: invoke-virtual {v3, v4}, method@0082
mark pos is 9a : 4d ==
00126e: 0c03                                   |004d: move-result-object v3
001270: 6e10 8300 0300                         |004e: invoke-virtual {v3}, method@0083
mark pos is a2 : 51 ==
001276: 0c03                                   |0051: move-result-object v3
001278: 6e20 0300 3200                         |0052: invoke-virtual {v2, v3}, method@0003
mark pos is aa : 55 ==
00127e: d801 0101                              |0055: add-int/lit8 v1, v1, #int 1 // #01
001282: 1253                                   |0057: const/4 v3, #int 5 // #5
001284: 3731 c4ff                              |0058: if-le v1, v3, 001c // -003c
mark pos is 38 : 1c ==
mark pos is b4 : 5a ==
001288: 2203 2900                              |005a: new-instance v3,class@0029
00128c: 1a04 0000                              |005c: const-string v4, string@0000
001290: 7020 7f00 4300                         |005e: invoke-direct {v3, v4}, method@007f
mark pos is c2 : 61 ==
001296: 7100 1c00 0000                         |0061: invoke-static {}, method@001c
mark pos is c8 : 64 ==
00129c: 0a04                                   |0064: move-result v4
00129e: 6e20 8000 4300                         |0065: invoke-virtual {v3, v4}, method@0080
mark pos is d0 : 68 ==
0012a4: 0c03                                   |0068: move-result-object v3
0012a6: 6e10 8300 0300                         |0069: invoke-virtual {v3}, method@0083
mark pos is d8 : 6c ==
0012ac: 0c03                                   |006c: move-result-object v3
0012ae: 6e20 0300 3200                         |006d: invoke-virtual {v2, v3}, method@0003
mark pos is e0 : 70 ==
0012b4: 6e20 1900 2500                         |0070: invoke-virtual {v5, v2}, method@0019
mark pos is e6 : 73 ==
0012ba: 0e00                                   |0073: return-void
[[[[[[[[[[ code 12 ]]]]]]]]]]
~~~~~~codeoffset=0x12bc; insns off=0x12cc;registers is 1;insns size is 15~~~~~~~~
0012cc: 2200 2e00                              |0000: new-instance v0,class@002e
0012d0: 7010 8a00 0000                         |0002: invoke-direct {v0}, method@008a
mark pos is a : 5 ==
0012d6: 6900 1100                              |0005: sput-object v0,field@0011
0012da: 2200 2e00                              |0007: new-instance v0,class@002e
0012de: 7010 8a00 0000                         |0009: invoke-direct {v0}, method@008a
mark pos is 18 : c ==
0012e4: 6900 1000                              |000c: sput-object v0,field@0010
0012e8: 0e00                                   |000e: return-void
[[[[[[[[[[ code 13 ]]]]]]]]]]
~~~~~~codeoffset=0x12ec; insns off=0x12fc;registers is 1;insns size is 4~~~~~~~~
0012fc: 7010 8500 0000                         |0000: invoke-direct {v0}, method@0085
mark pos is 6 : 3 ==
001302: 0e00                                   |0003: return-void
[[[[[[[[[[ code 14 ]]]]]]]]]]
~~~~~~codeoffset=0x1304; insns off=0x1314;registers is 9;insns size is 77~~~~~~~~
001314: 1208                                   |0000: const/4 v8, #int 0 // #0
001316: 1600 0000                              |0001: const-wide/16 v0, #int 0 // #0
00131a: 1602 0000                              |0003: const-wide/16 v2, #int 0 // #0
00131e: 6306 0b00                              |0005: sget-boolean v6,field@000b
001322: 3806 4400                              |0007: if-eqz v6, 004b // +0044
mark pos is 96 : 4b ==
mark pos is 12 : 9 ==
001326: 6306 0e00                              |0009: sget-boolean v6,field@000e
00132a: 3906 0600                              |000b: if-nez v6, 0011 // +0006
mark pos is 22 : 11 ==
mark pos is 1a : d ==
00132e: 6306 0c00                              |000d: sget-boolean v6,field@000c
001332: 3806 3c00                              |000f: if-eqz v6, 004b // +003c
mark pos is 96 : 4b ==
mark pos is 22 : 11 ==
001336: 1204                                   |0011: const/4 v4, #int 0 // #0
001338: 6206 1000                              |0012: sget-object v6,field@0010
00133c: 6e20 8c00 4600                         |0014: invoke-virtual {v6, v4}, method@008c
mark pos is 2e : 17 ==
001342: 0c05                                   |0017: move-result-object v5
001344: 1f05 2400                              |0018: check-cast v5,class@0024
001348: 6e10 7300 0500                         |001a: invoke-virtual {v5}, method@0073
mark pos is 3a : 1d ==
00134e: 0a06                                   |001d: move-result v6
001350: 3806 2900                              |001e: if-eqz v6, 0047 // +0029
mark pos is 8e : 47 ==
mark pos is 40 : 20 ==
001354: 1906 f03f                              |0020: const-wide/high16 v6, #long 4607182418800017408 // #3ff0
001358: cb62                                   |0022: add-double/2addr v2, v6
00135a: 6e10 7200 0500                         |0023: invoke-virtual {v5}, method@0072
mark pos is 4c : 26 ==
001360: 0a06                                   |0026: move-result v6
001362: 8966                                   |0027: float-to-double v6, v6
001364: 7120 7600 7600                         |0028: invoke-static {v6, v7}, method@0076
mark pos is 56 : 2b ==
00136a: 0b06                                   |002b: move-result-wide v6
00136c: cb60                                   |002c: add-double/2addr v0, v6
00136e: d804 0401                              |002d: add-int/lit8 v4, v4, #int 1 // #01
001372: 1256                                   |002f: const/4 v6, #int 5 // #5
001374: 3764 e2ff                              |0030: if-le v4, v6, 0012 // -001e
mark pos is 24 : 12 ==
mark pos is 64 : 32 ==
001378: 1906 e03f                              |0032: const-wide/high16 v6, #long 4602678819172646912 // #3fe0
00137c: 2f06 0206                              |0034: cmpl-double v6, v2, v6
001380: 3d06 1300                              |0036: if-lez v6, 0049 // +0013
mark pos is 92 : 49 ==
mark pos is 70 : 38 ==
001384: ce20                                   |0038: div-double/2addr v0, v2
001386: 2206 2300                              |0039: new-instance v6,class@0023
00138a: 7120 7500 1000                         |003b: invoke-static {v0, v1}, method@0075
mark pos is 7c : 3e ==
001390: 0b07                                   |003e: move-result-wide v7
001392: 7030 6f00 7608                         |003f: invoke-direct {v6, v7, v8}, method@006f
mark pos is 84 : 42 ==
001398: 6e10 7000 0600                         |0042: invoke-virtual {v6}, method@0070
mark pos is 8a : 45 ==
00139e: 0a06                                   |0045: move-result v6
0013a0: 0f06                                   |0046: return v6
mark pos is 8e : 47 ==
0013a2: 0186                                   |0047: move v6, v8
0013a4: 28fe                                   |0048: goto 0046 // -0002
mark pos is 8c : 46 ==
mark pos is 92 : 49 ==
0013a6: 0186                                   |0049: move v6, v8
0013a8: 28fc                                   |004a: goto 0046 // -0004
mark pos is 8c : 46 ==
mark pos is 96 : 4b ==
0013aa: 0186                                   |004b: move v6, v8
0013ac: 28fa                                   |004c: goto 0046 // -0006
mark pos is 8c : 46 ==
[[[[[[[[[[ code 15 ]]]]]]]]]]
~~~~~~codeoffset=0x13b0; insns off=0x13c0;registers is 5;insns size is 184~~~~~~~~
0013c0: 1203                                   |0000: const/4 v3, #int 0 // #0
0013c2: 6a03 0e00                              |0001: sput-boolean v3,field@000e
0013c6: 6a03 0b00                              |0003: sput-boolean v3,field@000b
0013ca: 2b04 a300 0000                         |0005: packed-switch v4, 000000a8(insnIdx+vB) //vB= +000000a3
entries[0] is 4mark pos is 12 : 9 ==
entries[1] is 1emark pos is 46 : 23 ==
entries[2] is 38mark pos is 7a : 3d ==
entries[3] is 52mark pos is ae : 57 ==
entries[4] is 6cmark pos is e2 : 71 ==
entries[5] is 87mark pos is 118 : 8c ==
mark pos is 10 : 8 ==
0013d0: 0e00                                   |0008: return-void
mark pos is 12 : 9 ==
0013d2: 6200 1100                              |0009: sget-object v0,field@0011
0013d6: 2201 0b00                              |000b: new-instance v1,class@000b
0013da: 2202 1a00                              |000d: new-instance v2,class@001a
0013de: 7010 5900 0200                         |000f: invoke-direct {v2}, method@0059
mark pos is 24 : 12 ==
0013e4: 7020 0e00 2100                         |0012: invoke-direct {v1, v2}, method@000e
mark pos is 2a : 15 ==
0013ea: 6e20 8b00 1000                         |0015: invoke-virtual {v0, v1}, method@008b
mark pos is 30 : 18 ==
0013f0: 6200 1000                              |0018: sget-object v0,field@0010
0013f4: 2201 2400                              |001a: new-instance v1,class@0024
0013f8: 7020 7100 3100                         |001c: invoke-direct {v1, v3}, method@0071
mark pos is 3e : 1f ==
0013fe: 6e20 8b00 1000                         |001f: invoke-virtual {v0, v1}, method@008b
mark pos is 44 : 22 ==
001404: 28e6                                   |0022: goto 0008 // -001a
mark pos is 10 : 8 ==
mark pos is 46 : 23 ==
001406: 6200 1100                              |0023: sget-object v0,field@0011
00140a: 2201 0b00                              |0025: new-instance v1,class@000b
00140e: 2202 1300                              |0027: new-instance v2,class@0013
001412: 7010 4200 0200                         |0029: invoke-direct {v2}, method@0042
mark pos is 58 : 2c ==
001418: 7020 0e00 2100                         |002c: invoke-direct {v1, v2}, method@000e
mark pos is 5e : 2f ==
00141e: 6e20 8b00 1000                         |002f: invoke-virtual {v0, v1}, method@008b
mark pos is 64 : 32 ==
001424: 6200 1000                              |0032: sget-object v0,field@0010
001428: 2201 2400                              |0034: new-instance v1,class@0024
00142c: 7020 7100 3100                         |0036: invoke-direct {v1, v3}, method@0071
mark pos is 72 : 39 ==
001432: 6e20 8b00 1000                         |0039: invoke-virtual {v0, v1}, method@008b
mark pos is 78 : 3c ==
001438: 28cc                                   |003c: goto 0008 // -0034
mark pos is 10 : 8 ==
mark pos is 7a : 3d ==
00143a: 6200 1100                              |003d: sget-object v0,field@0011
00143e: 2201 0b00                              |003f: new-instance v1,class@000b
001442: 2202 1200                              |0041: new-instance v2,class@0012
001446: 7010 3a00 0200                         |0043: invoke-direct {v2}, method@003a
mark pos is 8c : 46 ==
00144c: 7020 0e00 2100                         |0046: invoke-direct {v1, v2}, method@000e
mark pos is 92 : 49 ==
001452: 6e20 8b00 1000                         |0049: invoke-virtual {v0, v1}, method@008b
mark pos is 98 : 4c ==
001458: 6200 1000                              |004c: sget-object v0,field@0010
00145c: 2201 2400                              |004e: new-instance v1,class@0024
001460: 7020 7100 3100                         |0050: invoke-direct {v1, v3}, method@0071
mark pos is a6 : 53 ==
001466: 6e20 8b00 1000                         |0053: invoke-virtual {v0, v1}, method@008b
mark pos is ac : 56 ==
00146c: 28b2                                   |0056: goto 0008 // -004e
mark pos is 10 : 8 ==
mark pos is ae : 57 ==
00146e: 6200 1100                              |0057: sget-object v0,field@0011
001472: 2201 0b00                              |0059: new-instance v1,class@000b
001476: 2202 1c00                              |005b: new-instance v2,class@001c
00147a: 7010 6600 0200                         |005d: invoke-direct {v2}, method@0066
mark pos is c0 : 60 ==
001480: 7020 0e00 2100                         |0060: invoke-direct {v1, v2}, method@000e
mark pos is c6 : 63 ==
001486: 6e20 8b00 1000                         |0063: invoke-virtual {v0, v1}, method@008b
mark pos is cc : 66 ==
00148c: 6200 1000                              |0066: sget-object v0,field@0010
001490: 2201 2400                              |0068: new-instance v1,class@0024
001494: 7020 7100 3100                         |006a: invoke-direct {v1, v3}, method@0071
mark pos is da : 6d ==
00149a: 6e20 8b00 1000                         |006d: invoke-virtual {v0, v1}, method@008b
mark pos is e0 : 70 ==
0014a0: 2898                                   |0070: goto 0008 // -0068
mark pos is 10 : 8 ==
mark pos is e2 : 71 ==
0014a2: 6200 1100                              |0071: sget-object v0,field@0011
0014a6: 2201 0b00                              |0073: new-instance v1,class@000b
0014aa: 2202 1100                              |0075: new-instance v2,class@0011
0014ae: 7010 3200 0200                         |0077: invoke-direct {v2}, method@0032
mark pos is f4 : 7a ==
0014b4: 7020 0e00 2100                         |007a: invoke-direct {v1, v2}, method@000e
mark pos is fa : 7d ==
0014ba: 6e20 8b00 1000                         |007d: invoke-virtual {v0, v1}, method@008b
mark pos is 100 : 80 ==
0014c0: 6200 1000                              |0080: sget-object v0,field@0010
0014c4: 2201 2400                              |0082: new-instance v1,class@0024
0014c8: 7020 7100 3100                         |0084: invoke-direct {v1, v3}, method@0071
mark pos is 10e : 87 ==
0014ce: 6e20 8b00 1000                         |0087: invoke-virtual {v0, v1}, method@008b
mark pos is 114 : 8a ==
0014d4: 2900 7eff                              |008a: goto/16 0008 // -0082
mark pos is 10 : 8 ==
mark pos is 118 : 8c ==
0014d8: 6200 1100                              |008c: sget-object v0,field@0011
0014dc: 2201 0b00                              |008e: new-instance v1,class@000b
0014e0: 2202 1400                              |0090: new-instance v2,class@0014
0014e4: 7010 4a00 0200                         |0092: invoke-direct {v2}, method@004a
mark pos is 12a : 95 ==
0014ea: 7020 0e00 2100                         |0095: invoke-direct {v1, v2}, method@000e
mark pos is 130 : 98 ==
0014f0: 6e20 8b00 1000                         |0098: invoke-virtual {v0, v1}, method@008b
mark pos is 136 : 9b ==
0014f6: 6200 1000                              |009b: sget-object v0,field@0010
0014fa: 2201 2400                              |009d: new-instance v1,class@0024
0014fe: 7020 7100 3100                         |009f: invoke-direct {v1, v3}, method@0071
mark pos is 144 : a2 ==
001504: 6e20 8b00 1000                         |00a2: invoke-virtual {v0, v1}, method@008b
mark pos is 14a : a5 ==
00150a: 2900 63ff                              |00a5: goto/16 0008 // -009d
mark pos is 10 : 8 ==
mark pos is 14e : a7 ==
00150e: 0000                                   |00a7: nop // spacer
[[[[[[[[[[ code 16 ]]]]]]]]]]
~~~~~~codeoffset=0x1530; insns off=0x1540;registers is 1;insns size is 14~~~~~~~~
001540: 1200                                   |0000: const/4 v0, #int 0 // #0
001542: 6a00 0e00                              |0001: sput-boolean v0,field@000e
001546: 6200 1100                              |0003: sget-object v0,field@0011
00154a: 6e10 8d00 0000                         |0005: invoke-virtual {v0}, method@008d
mark pos is 10 : 8 ==
001550: 6200 1000                              |0008: sget-object v0,field@0010
001554: 6e10 8d00 0000                         |000a: invoke-virtual {v0}, method@008d
mark pos is 1a : d ==
00155a: 0e00                                   |000d: return-void
[[[[[[[[[[ code 17 ]]]]]]]]]]
~~~~~~codeoffset=0x155c; insns off=0x156c;registers is 4;insns size is 21~~~~~~~~
00156c: 1200                                   |0000: const/4 v0, #int 0 // #0
00156e: 1201                                   |0001: const/4 v1, #int 0 // #0
001570: 6203 1000                              |0002: sget-object v3,field@0010
001574: 6e10 8f00 0300                         |0004: invoke-virtual {v3}, method@008f
mark pos is e : 7 ==
00157a: 0a03                                   |0007: move-result v3
00157c: 3431 0300                              |0008: if-lt v1, v3, 000b // +0003
mark pos is 16 : b ==
mark pos is 14 : a ==
001580: 0f00                                   |000a: return v0
mark pos is 16 : b ==
001582: 7110 2200 0100                         |000b: invoke-static {v1}, method@0022
mark pos is 1c : e ==
001588: 0a02                                   |000e: move-result v2
00158a: 3702 0300                              |000f: if-le v2, v0, 0012 // +0003
mark pos is 24 : 12 ==
mark pos is 22 : 11 ==
00158e: 0120                                   |0011: move v0, v2
001590: d801 0101                              |0012: add-int/lit8 v1, v1, #int 1 // #01
001594: 28ee                                   |0014: goto 0002 // -0012
mark pos is 4 : 2 ==
[[[[[[[[[[ code 18 ]]]]]]]]]]
~~~~~~codeoffset=0x1598; insns off=0x15a8;registers is 3;insns size is 21~~~~~~~~
0015a8: 6201 1000                              |0000: sget-object v1,field@0010
0015ac: 6e10 8f00 0100                         |0002: invoke-virtual {v1}, method@008f
mark pos is a : 5 ==
0015b2: 0a01                                   |0005: move-result v1
0015b4: 3412 0400                              |0006: if-lt v2, v1, 000a // +0004
mark pos is 14 : a ==
mark pos is 10 : 8 ==
0015b8: 1201                                   |0008: const/4 v1, #int 0 // #0
0015ba: 0f01                                   |0009: return v1
mark pos is 14 : a ==
0015bc: 6201 1100                              |000a: sget-object v1,field@0011
0015c0: 6e20 8c00 2100                         |000c: invoke-virtual {v1, v2}, method@008c
mark pos is 1e : f ==
0015c6: 0c00                                   |000f: move-result-object v0
0015c8: 1f00 0b00                              |0010: check-cast v0,class@000b
0015cc: 5201 0000                              |0012: iget v1, v0,field@0000
0015d0: 28f5                                   |0014: goto 0009 // -000b
mark pos is 12 : 9 ==
[[[[[[[[[[ code 19 ]]]]]]]]]]
~~~~~~codeoffset=0x15d4; insns off=0x15e4;registers is 3;insns size is 24~~~~~~~~
0015e4: 6201 1100                              |0000: sget-object v1,field@0011
0015e8: 6e10 8f00 0100                         |0002: invoke-virtual {v1}, method@008f
mark pos is a : 5 ==
0015ee: 0a01                                   |0005: move-result v1
0015f0: 3412 0500                              |0006: if-lt v2, v1, 000b // +0005
mark pos is 16 : b ==
mark pos is 10 : 8 ==
0015f4: 1a01 2200                              |0008: const-string v1, string@0022
0015f8: 1101                                   |000a: return-object v1
mark pos is 16 : b ==
0015fa: 6201 1100                              |000b: sget-object v1,field@0011
0015fe: 6e20 8c00 2100                         |000d: invoke-virtual {v1, v2}, method@008c
mark pos is 20 : 10 ==
001604: 0c00                                   |0010: move-result-object v0
001606: 1f00 0b00                              |0011: check-cast v0,class@000b
00160a: 6e10 1400 0000                         |0013: invoke-virtual {v0}, method@0014
mark pos is 2c : 16 ==
001610: 0c01                                   |0016: move-result-object v1
001612: 28f3                                   |0017: goto 000a // -000d
mark pos is 14 : a ==
[[[[[[[[[[ code 20 ]]]]]]]]]]
~~~~~~codeoffset=0x1614; insns off=0x1624;registers is 3;insns size is 23~~~~~~~~
001624: 6201 1000                              |0000: sget-object v1,field@0010
001628: 6e10 8f00 0100                         |0002: invoke-virtual {v1}, method@008f
mark pos is a : 5 ==
00162e: 0a01                                   |0005: move-result v1
001630: 3412 0400                              |0006: if-lt v2, v1, 000a // +0004
mark pos is 14 : a ==
mark pos is 10 : 8 ==
001634: 1201                                   |0008: const/4 v1, #int 0 // #0
001636: 0f01                                   |0009: return v1
mark pos is 14 : a ==
001638: 6201 1000                              |000a: sget-object v1,field@0010
00163c: 6e20 8c00 2100                         |000c: invoke-virtual {v1, v2}, method@008c
mark pos is 1e : f ==
001642: 0c00                                   |000f: move-result-object v0
001644: 1f00 2400                              |0010: check-cast v0,class@0024
001648: 6e10 7300 0000                         |0012: invoke-virtual {v0}, method@0073
mark pos is 2a : 15 ==
00164e: 0a01                                   |0015: move-result v1
001650: 28f3                                   |0016: goto 0009 // -000d
mark pos is 12 : 9 ==
[[[[[[[[[[ code 21 ]]]]]]]]]]
~~~~~~codeoffset=0x1654; insns off=0x1664;registers is 3;insns size is 24~~~~~~~~
001664: 1201                                   |0000: const/4 v1, #int 0 // #0
001666: 6202 1100                              |0001: sget-object v2,field@0011
00166a: 6e10 8f00 0200                         |0003: invoke-virtual {v2}, method@008f
mark pos is c : 6 ==
001670: 0a02                                   |0006: move-result v2
001672: 3421 0300                              |0007: if-lt v1, v2, 000a // +0003
mark pos is 14 : a ==
mark pos is 12 : 9 ==
001676: 0e00                                   |0009: return-void
mark pos is 14 : a ==
001678: 6202 1100                              |000a: sget-object v2,field@0011
00167c: 6e20 8c00 1200                         |000c: invoke-virtual {v2, v1}, method@008c
mark pos is 1e : f ==
001682: 0c00                                   |000f: move-result-object v0
001684: 1f00 0b00                              |0010: check-cast v0,class@000b
001688: 6e10 1100 0000                         |0012: invoke-virtual {v0}, method@0011
mark pos is 2a : 15 ==
00168e: d801 0101                              |0015: add-int/lit8 v1, v1, #int 1 // #01
001692: 28ea                                   |0017: goto 0001 // -0016
mark pos is 2 : 1 ==
[[[[[[[[[[ code 22 ]]]]]]]]]]
~~~~~~codeoffset=0x1694; insns off=0x16a4;registers is 3;insns size is 24~~~~~~~~
0016a4: 1201                                   |0000: const/4 v1, #int 0 // #0
0016a6: 6202 1100                              |0001: sget-object v2,field@0011
0016aa: 6e10 8f00 0200                         |0003: invoke-virtual {v2}, method@008f
mark pos is c : 6 ==
0016b0: 0a02                                   |0006: move-result v2
0016b2: 3421 0300                              |0007: if-lt v1, v2, 000a // +0003
mark pos is 14 : a ==
mark pos is 12 : 9 ==
0016b6: 0e00                                   |0009: return-void
mark pos is 14 : a ==
0016b8: 6202 1100                              |000a: sget-object v2,field@0011
0016bc: 6e20 8c00 1200                         |000c: invoke-virtual {v2, v1}, method@008c
mark pos is 1e : f ==
0016c2: 0c00                                   |000f: move-result-object v0
0016c4: 1f00 0b00                              |0010: check-cast v0,class@000b
0016c8: 6e10 1200 0000                         |0012: invoke-virtual {v0}, method@0012
mark pos is 2a : 15 ==
0016ce: d801 0101                              |0015: add-int/lit8 v1, v1, #int 1 // #01
0016d2: 28ea                                   |0017: goto 0001 // -0016
mark pos is 2 : 1 ==
[[[[[[[[[[ code 23 ]]]]]]]]]]
~~~~~~codeoffset=0x16d4; insns off=0x16e4;registers is 2;insns size is 4~~~~~~~~
0016e4: 1210                                   |0000: const/4 v0, #int 1 // #1
0016e6: 6a00 0d00                              |0001: sput-boolean v0,field@000d
0016ea: 0e00                                   |0003: return-void
[[[[[[[[[[ code 24 ]]]]]]]]]]
~~~~~~codeoffset=0x16ec; insns off=0x16fc;registers is 2;insns size is 37~~~~~~~~
0016fc: 1211                                   |0000: const/4 v1, #int 1 // #1
0016fe: 6200 1100                              |0001: sget-object v0,field@0011
001702: 6e10 8d00 0000                         |0003: invoke-virtual {v0}, method@008d
mark pos is c : 6 ==
001708: 6200 1000                              |0006: sget-object v0,field@0010
00170c: 6e10 8d00 0000                         |0008: invoke-virtual {v0}, method@008d
mark pos is 16 : b ==
001712: 1200                                   |000b: const/4 v0, #int 0 // #0
001714: 7110 1d00 0000                         |000c: invoke-static {v0}, method@001d
mark pos is 1e : f ==
00171a: 7110 1d00 0100                         |000f: invoke-static {v1}, method@001d
mark pos is 24 : 12 ==
001720: 1220                                   |0012: const/4 v0, #int 2 // #2
001722: 7110 1d00 0000                         |0013: invoke-static {v0}, method@001d
mark pos is 2c : 16 ==
001728: 1230                                   |0016: const/4 v0, #int 3 // #3
00172a: 7110 1d00 0000                         |0017: invoke-static {v0}, method@001d
mark pos is 34 : 1a ==
001730: 1240                                   |001a: const/4 v0, #int 4 // #4
001732: 7110 1d00 0000                         |001b: invoke-static {v0}, method@001d
mark pos is 3c : 1e ==
001738: 1250                                   |001e: const/4 v0, #int 5 // #5
00173a: 7110 1d00 0000                         |001f: invoke-static {v0}, method@001d
mark pos is 44 : 22 ==
001740: 6a01 0e00                              |0022: sput-boolean v1,field@000e
001744: 0e00                                   |0024: return-void
[[[[[[[[[[ code 25 ]]]]]]]]]]
~~~~~~codeoffset=0x1748; insns off=0x1758;registers is 6;insns size is 88~~~~~~~~
001758: 1201                                   |0000: const/4 v1, #int 0 // #0
00175a: 6202 1100                              |0001: sget-object v2,field@0011
00175e: 6e10 8f00 0200                         |0003: invoke-virtual {v2}, method@008f
mark pos is c : 6 ==
001764: 0a02                                   |0006: move-result v2
001766: 3421 1900                              |0007: if-lt v1, v2, 0020 // +0019
mark pos is 40 : 20 ==
mark pos is 12 : 9 ==
00176a: 6202 0f00                              |0009: sget-object v2,field@000f
00176e: 3802 0d00                              |000b: if-eqz v2, 0018 // +000d
mark pos is 30 : 18 ==
mark pos is 1a : d ==
001772: 6202 0f00                              |000d: sget-object v2,field@000f
001776: 6203 1100                              |000f: sget-object v3,field@0011
00177a: 6e10 8f00 0300                         |0011: invoke-virtual {v3}, method@008f
mark pos is 28 : 14 ==
001780: 0a03                                   |0014: move-result v3
001782: 7230 0c00 1203                         |0015: invoke-interface {v2, v1, v3}, method@000c
mark pos is 30 : 18 ==
001788: 6302 0e00                              |0018: sget-boolean v2,field@000e
00178c: 3802 0500                              |001a: if-eqz v2, 001f // +0005
mark pos is 3e : 1f ==
mark pos is 38 : 1c ==
001790: 1212                                   |001c: const/4 v2, #int 1 // #1
001792: 6a02 0b00                              |001d: sput-boolean v2,field@000b
001796: 0e00                                   |001f: return-void
mark pos is 40 : 20 ==
001798: 6202 0f00                              |0020: sget-object v2,field@000f
00179c: 3802 1300                              |0022: if-eqz v2, 0035 // +0013
mark pos is 6a : 35 ==
mark pos is 48 : 24 ==
0017a0: 7100 8600 0000                         |0024: invoke-static {}, method@0086
mark pos is 4e : 27 ==
0017a6: 6202 0f00                              |0027: sget-object v2,field@000f
0017aa: 6203 1100                              |0029: sget-object v3,field@0011
0017ae: 6e10 8f00 0300                         |002b: invoke-virtual {v3}, method@008f
mark pos is 5c : 2e ==
0017b4: 0a03                                   |002e: move-result v3
0017b6: 7230 0c00 1203                         |002f: invoke-interface {v2, v1, v3}, method@000c
mark pos is 64 : 32 ==
0017bc: 0a02                                   |0032: move-result v2
0017be: 3802 ecff                              |0033: if-eqz v2, 001f // -0014
mark pos is 3e : 1f ==
mark pos is 6a : 35 ==
0017c2: 7100 8600 0000                         |0035: invoke-static {}, method@0086
mark pos is 70 : 38 ==
0017c8: 6202 1100                              |0038: sget-object v2,field@0011
0017cc: 6e20 8c00 1200                         |003a: invoke-virtual {v2, v1}, method@008c
mark pos is 7a : 3d ==
0017d2: 0c00                                   |003d: move-result-object v0
0017d4: 1f00 0b00                              |003e: check-cast v0,class@000b
0017d8: 6302 0d00                              |0040: sget-boolean v2,field@000d
0017dc: 3802 0500                              |0042: if-eqz v2, 0047 // +0005
mark pos is 8e : 47 ==
mark pos is 88 : 44 ==
0017e0: 6e10 1100 0000                         |0044: invoke-virtual {v0}, method@0011
mark pos is 8e : 47 ==
0017e6: 6202 1000                              |0047: sget-object v2,field@0010
0017ea: 2203 2400                              |0049: new-instance v3,class@0024
0017ee: 6e10 1500 0000                         |004b: invoke-virtual {v0}, method@0015
mark pos is 9c : 4e ==
0017f4: 0a04                                   |004e: move-result v4
0017f6: 7020 7100 4300                         |004f: invoke-direct {v3, v4}, method@0071
mark pos is a4 : 52 ==
0017fc: 6e30 8e00 3201                         |0052: invoke-virtual {v2, v3, v1}, method@008e
mark pos is aa : 55 ==
001802: d801 0101                              |0055: add-int/lit8 v1, v1, #int 1 // #01
001806: 28aa                                   |0057: goto 0001 // -0056
mark pos is 2 : 1 ==
[[[[[[[[[[ code 26 ]]]]]]]]]]
~~~~~~codeoffset=0x1808; insns off=0x1818;registers is 3;insns size is 8~~~~~~~~
001818: 7100 8400 0000                         |0000: invoke-static {}, method@0084
mark pos is 6 : 3 ==
00181e: 0b00                                   |0003: move-result-wide v0
001820: 7030 2900 0201                         |0004: invoke-direct {v2, v0, v1}, method@0029
mark pos is e : 7 ==
001826: 0e00                                   |0007: return-void
[[[[[[[[[[ code 27 ]]]]]]]]]]
~~~~~~codeoffset=0x1828; insns off=0x1838;registers is 3;insns size is 6~~~~~~~~
001838: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
mark pos is 6 : 3 ==
00183e: 5a01 1200                              |0003: iput-wide v1, v0,field@0012
001842: 0e00                                   |0005: return-void
[[[[[[[[[[ code 28 ]]]]]]]]]]
~~~~~~codeoffset=0x1844; insns off=0x1854;registers is 6;insns size is 24~~~~~~~~
001854: 3805 1600                              |0000: if-eqz v5, 0016 // +0016
mark pos is 2c : 16 ==
mark pos is 4 : 2 ==
001858: 2050 0e00                              |0002: instance-of v0, v5, class@000e
00185c: 3800 1200                              |0004: if-eqz v0, 0016 // +0012
mark pos is 2c : 16 ==
mark pos is c : 6 ==
001860: 6e10 2b00 0400                         |0006: invoke-virtual {v4}, method@002b
mark pos is 12 : 9 ==
001866: 0b00                                   |0009: move-result-wide v0
001868: 1f05 0e00                              |000a: check-cast v5,class@000e
00186c: 6e10 2b00 0500                         |000c: invoke-virtual {v5}, method@002b
mark pos is 1e : f ==
001872: 0b02                                   |000f: move-result-wide v2
001874: 3100 0002                              |0010: cmp-long v0, v0, v2
001878: 3900 0400                              |0012: if-nez v0, 0016 // +0004
mark pos is 2c : 16 ==
mark pos is 28 : 14 ==
00187c: 1210                                   |0014: const/4 v0, #int 1 // #1
00187e: 0f00                                   |0015: return v0
mark pos is 2c : 16 ==
001880: 1200                                   |0016: const/4 v0, #int 0 // #0
001882: 28fe                                   |0017: goto 0015 // -0002
mark pos is 2a : 15 ==
[[[[[[[[[[ code 29 ]]]]]]]]]]
~~~~~~codeoffset=0x1884; insns off=0x1894;registers is 3;insns size is 3~~~~~~~~
001894: 5320 1200                              |0000: iget-wide v0, v2,field@0012
001898: 1000                                   |0002: return-wide v0
[[[[[[[[[[ code 30 ]]]]]]]]]]
~~~~~~codeoffset=0x189c; insns off=0x18ac;registers is 6;insns size is 12~~~~~~~~
0018ac: 6e10 2b00 0500                         |0000: invoke-virtual {v5}, method@002b
mark pos is 6 : 3 ==
0018b2: 0b00                                   |0003: move-result-wide v0
0018b4: 8402                                   |0004: long-to-int v2, v0
0018b6: 1303 2000                              |0005: const/16 v3, #int 32 // #20
0018ba: a403 0003                              |0007: shr-long v3, v0, v3
0018be: 8433                                   |0009: long-to-int v3, v3
0018c0: b732                                   |000a: xor-int/2addr v2, v3
0018c2: 0f02                                   |000b: return v2
[[[[[[[[[[ code 31 ]]]]]]]]]]
~~~~~~codeoffset=0x18c4; insns off=0x18d4;registers is 3;insns size is 3~~~~~~~~
0018d4: 5a01 1200                              |0000: iput-wide v1, v0,field@0012
0018d8: 0e00                                   |0002: return-void
[[[[[[[[[[ code 32 ]]]]]]]]]]
~~~~~~codeoffset=0x18dc; insns off=0x18ec;registers is 1;insns size is 4~~~~~~~~
0018ec: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
mark pos is 6 : 3 ==
0018f2: 0e00                                   |0003: return-void
[[[[[[[[[[ code 33 ]]]]]]]]]]
~~~~~~codeoffset=0x18f4; insns off=0x1904;registers is 8;insns size is 79~~~~~~~~
001904: 2200 2d00                              |0000: new-instance v0,class@002d
001908: 7010 8800 0000                         |0002: invoke-direct {v0}, method@0088
mark pos is a : 5 ==
00190e: 6203 3000                              |0005: sget-object v3,field@0030
001912: 1a04 0f00                              |0007: const-string v4, string@000f
001916: 6e20 6e00 4300                         |0009: invoke-virtual {v3, v4}, method@006e
mark pos is 18 : c ==
00191c: 1201                                   |000c: const/4 v1, #int 0 // #0
00191e: 1403 4042 0f00                         |000d: const v3, #float 0.000000 // #000f4240
001924: 3431 3900                              |0010: if-lt v1, v3, 0049 // +0039
mark pos is 92 : 49 ==
mark pos is 24 : 12 ==
001928: 6203 3000                              |0012: sget-object v3,field@0030
00192c: 2204 2900                              |0014: new-instance v4,class@0029
001930: 1a05 0700                              |0016: const-string v5, string@0007
001934: 7020 7f00 5400                         |0018: invoke-direct {v4, v5}, method@007f
mark pos is 36 : 1b ==
00193a: 6e10 8900 0000                         |001b: invoke-virtual {v0}, method@0089
mark pos is 3c : 1e ==
001940: 0b05                                   |001e: move-result-wide v5
001942: 6e30 8100 5406                         |001f: invoke-virtual {v4, v5, v6}, method@0081
mark pos is 44 : 22 ==
001948: 0c04                                   |0022: move-result-object v4
00194a: 6e10 8300 0400                         |0023: invoke-virtual {v4}, method@0083
mark pos is 4c : 26 ==
001950: 0c04                                   |0026: move-result-object v4
001952: 6e20 6e00 4300                         |0027: invoke-virtual {v3, v4}, method@006e
mark pos is 54 : 2a ==
001958: 1202                                   |002a: const/4 v2, #int 0 // #0
00195a: 1403 8096 9800                         |002b: const v3, #float 0.000000 // #00989680
001960: 3432 1e00                              |002e: if-lt v2, v3, 004c // +001e
mark pos is 98 : 4c ==
mark pos is 60 : 30 ==
001964: 6203 3000                              |0030: sget-object v3,field@0030
001968: 2204 2900                              |0032: new-instance v4,class@0029
00196c: 1a05 0600                              |0034: const-string v5, string@0006
001970: 7020 7f00 5400                         |0036: invoke-direct {v4, v5}, method@007f
mark pos is 72 : 39 ==
001976: 6e10 8900 0000                         |0039: invoke-virtual {v0}, method@0089
mark pos is 78 : 3c ==
00197c: 0b05                                   |003c: move-result-wide v5
00197e: 6e30 8100 5406                         |003d: invoke-virtual {v4, v5, v6}, method@0081
mark pos is 80 : 40 ==
001984: 0c04                                   |0040: move-result-object v4
001986: 6e10 8300 0400                         |0041: invoke-virtual {v4}, method@0083
mark pos is 88 : 44 ==
00198c: 0c04                                   |0044: move-result-object v4
00198e: 6e20 6e00 4300                         |0045: invoke-virtual {v3, v4}, method@006e
mark pos is 90 : 48 ==
001994: 0e00                                   |0048: return-void
mark pos is 92 : 49 ==
001996: d801 0101                              |0049: add-int/lit8 v1, v1, #int 1 // #01
00199a: 28c2                                   |004b: goto 000d // -003e
mark pos is 1a : d ==
mark pos is 98 : 4c ==
00199c: d802 0201                              |004c: add-int/lit8 v2, v2, #int 1 // #01
0019a0: 28dd                                   |004e: goto 002b // -0023
mark pos is 56 : 2b ==
[[[[[[[[[[ code 34 ]]]]]]]]]]
~~~~~~codeoffset=0x19a4; insns off=0x19b4;registers is 1;insns size is 4~~~~~~~~
0019b4: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
mark pos is 6 : 3 ==
0019ba: 0e00                                   |0003: return-void
[[[[[[[[[[ code 35 ]]]]]]]]]]
~~~~~~codeoffset=0x19bc; insns off=0x19cc;registers is 11;insns size is 108~~~~~~~~
0019cc: 6207 3000                              |0000: sget-object v7,field@0030
0019d0: 1a08 6b00                              |0002: const-string v8, string@006b
0019d4: 6e20 6e00 8700                         |0004: invoke-virtual {v7, v8}, method@006e
mark pos is e : 7 ==
0019da: 7100 8400 0000                         |0007: invoke-static {}, method@0084
mark pos is 14 : a ==
0019e0: 0b05                                   |000a: move-result-wide v5
0019e2: 6207 3000                              |000b: sget-object v7,field@0030
0019e6: 2208 2900                              |000d: new-instance v8,class@0029
0019ea: 1a09 e600                              |000f: const-string v9, string@00e6
0019ee: 7020 7f00 9800                         |0011: invoke-direct {v8, v9}, method@007f
mark pos is 28 : 14 ==
0019f4: 6e30 8100 5806                         |0014: invoke-virtual {v8, v5, v6}, method@0081
mark pos is 2e : 17 ==
0019fa: 0c08                                   |0017: move-result-object v8
0019fc: 6e10 8300 0800                         |0018: invoke-virtual {v8}, method@0083
mark pos is 36 : 1b ==
001a02: 0c08                                   |001b: move-result-object v8
001a04: 6e20 6e00 8700                         |001c: invoke-virtual {v7, v8}, method@006e
mark pos is 3e : 1f ==
001a0a: 1204                                   |001f: const/4 v4, #int 0 // #0
001a0c: 1407 4042 0f00                         |0020: const v7, #float 0.000000 // #000f4240
001a12: 3474 3e00                              |0023: if-lt v4, v7, 0061 // +003e
mark pos is c2 : 61 ==
mark pos is 4a : 25 ==
001a16: 7100 8400 0000                         |0025: invoke-static {}, method@0084
mark pos is 50 : 28 ==
001a1c: 0b02                                   |0028: move-result-wide v2
001a1e: 6207 3000                              |0029: sget-object v7,field@0030
001a22: 2208 2900                              |002b: new-instance v8,class@0029
001a26: 1a09 9500                              |002d: const-string v9, string@0095
001a2a: 7020 7f00 9800                         |002f: invoke-direct {v8, v9}, method@007f
mark pos is 64 : 32 ==
001a30: 6e30 8100 2803                         |0032: invoke-virtual {v8, v2, v3}, method@0081
mark pos is 6a : 35 ==
001a36: 0c08                                   |0035: move-result-object v8
001a38: 6e10 8300 0800                         |0036: invoke-virtual {v8}, method@0083
mark pos is 72 : 39 ==
001a3e: 0c08                                   |0039: move-result-object v8
001a40: 6e20 6e00 8700                         |003a: invoke-virtual {v7, v8}, method@006e
mark pos is 7a : 3d ==
001a46: 9c00 0205                              |003d: sub-long v0, v2, v5
001a4a: 6207 3000                              |003f: sget-object v7,field@0030
001a4e: 2208 2900                              |0041: new-instance v8,class@0029
001a52: 1a09 1700                              |0043: const-string v9, string@0017
001a56: 7020 7f00 9800                         |0045: invoke-direct {v8, v9}, method@007f
mark pos is 90 : 48 ==
001a5c: 6e30 8100 0801                         |0048: invoke-virtual {v8, v0, v1}, method@0081
mark pos is 96 : 4b ==
001a62: 0c08                                   |004b: move-result-object v8
001a64: 6e10 8300 0800                         |004c: invoke-virtual {v8}, method@0083
mark pos is 9e : 4f ==
001a6a: 0c08                                   |004f: move-result-object v8
001a6c: 6e20 6e00 8700                         |0050: invoke-virtual {v7, v8}, method@006e
mark pos is a6 : 53 ==
001a72: 1607 0000                              |0053: const-wide/16 v7, #int 0 // #0
001a76: 3107 0007                              |0055: cmp-long v7, v0, v7
001a7a: 3d07 0d00                              |0057: if-lez v7, 0064 // +000d
mark pos is c8 : 64 ==
mark pos is b2 : 59 ==
001a7e: 6207 3000                              |0059: sget-object v7,field@0030
001a82: 1a08 1600                              |005b: const-string v8, string@0016
001a86: 6e20 6e00 8700                         |005d: invoke-virtual {v7, v8}, method@006e
mark pos is c0 : 60 ==
001a8c: 0e00                                   |0060: return-void
mark pos is c2 : 61 ==
001a8e: d804 0401                              |0061: add-int/lit8 v4, v4, #int 1 // #01
001a92: 28bd                                   |0063: goto 0020 // -0043
mark pos is 40 : 20 ==
mark pos is c8 : 64 ==
001a94: 6207 3000                              |0064: sget-object v7,field@0030
001a98: 1a08 1500                              |0066: const-string v8, string@0015
001a9c: 6e20 6e00 8700                         |0068: invoke-virtual {v7, v8}, method@006e
mark pos is d6 : 6b ==
001aa2: 28f5                                   |006b: goto 0060 // -000b
mark pos is c0 : 60 ==
[[[[[[[[[[ code 36 ]]]]]]]]]]
~~~~~~codeoffset=0x1aa4; insns off=0x1ab4;registers is 2;insns size is 12~~~~~~~~
001ab4: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
mark pos is 6 : 3 ==
001aba: 1300 1400                              |0003: const/16 v0, #int 20 // #14
001abe: 5910 1400                              |0005: iput v0, v1,field@0014
001ac2: 1300 b900                              |0007: const/16 v0, #int 185 // #b9
001ac6: 5910 1700                              |0009: iput v0, v1,field@0017
001aca: 0e00                                   |000b: return-void
[[[[[[[[[[ code 37 ]]]]]]]]]]
~~~~~~codeoffset=0x1acc; insns off=0x1adc;registers is 2;insns size is 2~~~~~~~~
001adc: 1200                                   |0000: const/4 v0, #int 0 // #0
001ade: 0f00                                   |0001: return v0
[[[[[[[[[[ code 38 ]]]]]]]]]]
~~~~~~codeoffset=0x1ae0; insns off=0x1af0;registers is 2;insns size is 3~~~~~~~~
001af0: 1300 6111                              |0000: const/16 v0, #int 4449 // #1161
001af4: 0f00                                   |0002: return v0
[[[[[[[[[[ code 39 ]]]]]]]]]]
~~~~~~codeoffset=0x1af8; insns off=0x1b08;registers is 19;insns size is 241~~~~~~~~
001b08: 1208                                   |0000: const/4 v8, #int 0 // #0
001b0a: 0800 1200                              |0001: move-object/from16 v0, v18
001b0e: 5200 1700                              |0003: iget v0, v0,field@0017
001b12: 010b                                   |0005: move v11, v0
001b14: 34b8 0300                              |0006: if-lt v8, v11, 0009 // +0003
mark pos is 12 : 9 ==
mark pos is 10 : 8 ==
001b18: 0f08                                   |0008: return v8
mark pos is 12 : 9 ==
001b1a: 828b                                   |0009: int-to-float v11, v8
001b1c: 89bb                                   |000a: float-to-double v11, v11
001b1e: 180d 182d 4454 fb21 0940               |000b: const-wide v13, #double 3.141593 // #400921fb54442d18
001b28: cddb                                   |0010: mul-double/2addr v11, v13
001b2a: 180d 0000 0000 0080 6640               |0011: const-wide v13, #double 180.000000 // #4066800000000000
001b34: ae01 0b0d                              |0016: div-double v1, v11, v13
001b38: 7120 7700 2100                         |0018: invoke-static {v1, v2}, method@0077
mark pos is 36 : 1b ==
001b3e: 0b03                                   |001b: move-result-wide v3
001b40: 7120 7400 2100                         |001c: invoke-static {v1, v2}, method@0074
mark pos is 3e : 1f ==
001b46: 0b05                                   |001f: move-result-wide v5
001b48: 0800 1200                              |0020: move-object/from16 v0, v18
001b4c: 5400 1800                              |0022: iget-object v0, v0,field@0018
001b50: 070b                                   |0024: move-object v11, v0
001b52: 120c                                   |0025: const/4 v12, #int 0 // #0
001b54: 460b 0b0c                              |0026: aget-object v11, v11, v12
001b58: 120c                                   |0028: const/4 v12, #int 0 // #0
001b5a: 4c05 0b0c                              |0029: aput-wide v5, v11, v12
001b5e: 0800 1200                              |002b: move-object/from16 v0, v18
001b62: 5400 1800                              |002d: iget-object v0, v0,field@0018
001b66: 070b                                   |002f: move-object v11, v0
001b68: 121c                                   |0030: const/4 v12, #int 1 // #1
001b6a: 460b 0b0c                              |0031: aget-object v11, v11, v12
001b6e: 120c                                   |0033: const/4 v12, #int 0 // #0
001b70: 4c03 0b0c                              |0034: aput-wide v3, v11, v12
001b74: 0800 1200                              |0036: move-object/from16 v0, v18
001b78: 5400 1800                              |0038: iget-object v0, v0,field@0018
001b7c: 070b                                   |003a: move-object v11, v0
001b7e: 122c                                   |003b: const/4 v12, #int 2 // #2
001b80: 460b 0b0c                              |003c: aget-object v11, v11, v12
001b84: 120c                                   |003e: const/4 v12, #int 0 // #0
001b86: 160d 0000                              |003f: const-wide/16 v13, #int 0 // #0
001b8a: 4c0d 0b0c                              |0041: aput-wide v13, v11, v12
001b8e: 0800 1200                              |0043: move-object/from16 v0, v18
001b92: 5400 1800                              |0045: iget-object v0, v0,field@0018
001b96: 070b                                   |0047: move-object v11, v0
001b98: 120c                                   |0048: const/4 v12, #int 0 // #0
001b9a: 460b 0b0c                              |0049: aget-object v11, v11, v12
001b9e: 121c                                   |004b: const/4 v12, #int 1 // #1
001ba0: 803d                                   |004c: neg-double v13, v3
001ba2: 4c0d 0b0c                              |004d: aput-wide v13, v11, v12
001ba6: 0800 1200                              |004f: move-object/from16 v0, v18
001baa: 5400 1800                              |0051: iget-object v0, v0,field@0018
001bae: 070b                                   |0053: move-object v11, v0
001bb0: 121c                                   |0054: const/4 v12, #int 1 // #1
001bb2: 460b 0b0c                              |0055: aget-object v11, v11, v12
001bb6: 121c                                   |0057: const/4 v12, #int 1 // #1
001bb8: 4c05 0b0c                              |0058: aput-wide v5, v11, v12
001bbc: 0800 1200                              |005a: move-object/from16 v0, v18
001bc0: 5400 1800                              |005c: iget-object v0, v0,field@0018
001bc4: 070b                                   |005e: move-object v11, v0
001bc6: 122c                                   |005f: const/4 v12, #int 2 // #2
001bc8: 460b 0b0c                              |0060: aget-object v11, v11, v12
001bcc: 121c                                   |0062: const/4 v12, #int 1 // #1
001bce: 160d 0000                              |0063: const-wide/16 v13, #int 0 // #0
001bd2: 4c0d 0b0c                              |0065: aput-wide v13, v11, v12
001bd6: 0800 1200                              |0067: move-object/from16 v0, v18
001bda: 5400 1800                              |0069: iget-object v0, v0,field@0018
001bde: 070b                                   |006b: move-object v11, v0
001be0: 120c                                   |006c: const/4 v12, #int 0 // #0
001be2: 460b 0b0c                              |006d: aget-object v11, v11, v12
001be6: 122c                                   |006f: const/4 v12, #int 2 // #2
001be8: 160d 0000                              |0070: const-wide/16 v13, #int 0 // #0
001bec: 4c0d 0b0c                              |0072: aput-wide v13, v11, v12
001bf0: 0800 1200                              |0074: move-object/from16 v0, v18
001bf4: 5400 1800                              |0076: iget-object v0, v0,field@0018
001bf8: 070b                                   |0078: move-object v11, v0
001bfa: 121c                                   |0079: const/4 v12, #int 1 // #1
001bfc: 460b 0b0c                              |007a: aget-object v11, v11, v12
001c00: 122c                                   |007c: const/4 v12, #int 2 // #2
001c02: 160d 0000                              |007d: const-wide/16 v13, #int 0 // #0
001c06: 4c0d 0b0c                              |007f: aput-wide v13, v11, v12
001c0a: 0800 1200                              |0081: move-object/from16 v0, v18
001c0e: 5400 1800                              |0083: iget-object v0, v0,field@0018
001c12: 070b                                   |0085: move-object v11, v0
001c14: 122c                                   |0086: const/4 v12, #int 2 // #2
001c16: 460b 0b0c                              |0087: aget-object v11, v11, v12
001c1a: 122c                                   |0089: const/4 v12, #int 2 // #2
001c1c: 190d f03f                              |008a: const-wide/high16 v13, #long 4607182418800017408 // #3ff0
001c20: 4c0d 0b0c                              |008c: aput-wide v13, v11, v12
001c24: 1207                                   |008e: const/4 v7, #int 0 // #0
001c26: 0800 1200                              |008f: move-object/from16 v0, v18
001c2a: 5400 1600                              |0091: iget-object v0, v0,field@0016
001c2e: 070b                                   |0093: move-object v11, v0
001c30: 120c                                   |0094: const/4 v12, #int 0 // #0
001c32: 460b 0b0c                              |0095: aget-object v11, v11, v12
001c36: 160c 0000                              |0097: const-wide/16 v12, #int 0 // #0
001c3a: 4c0c 0b07                              |0099: aput-wide v12, v11, v7
001c3e: 0800 1200                              |009b: move-object/from16 v0, v18
001c42: 5400 1600                              |009d: iget-object v0, v0,field@0016
001c46: 070b                                   |009f: move-object v11, v0
001c48: 121c                                   |00a0: const/4 v12, #int 1 // #1
001c4a: 460b 0b0c                              |00a1: aget-object v11, v11, v12
001c4e: 160c 0000                              |00a3: const-wide/16 v12, #int 0 // #0
001c52: 4c0c 0b07                              |00a5: aput-wide v12, v11, v7
001c56: 0800 1200                              |00a7: move-object/from16 v0, v18
001c5a: 5400 1600                              |00a9: iget-object v0, v0,field@0016
001c5e: 070b                                   |00ab: move-object v11, v0
001c60: 122c                                   |00ac: const/4 v12, #int 2 // #2
001c62: 460b 0b0c                              |00ad: aget-object v11, v11, v12
001c66: 160c 0000                              |00af: const-wide/16 v12, #int 0 // #0
001c6a: 4c0c 0b07                              |00b1: aput-wide v12, v11, v7
001c6e: 120a                                   |00b3: const/4 v10, #int 0 // #0
001c70: 1209                                   |00b4: const/4 v9, #int 0 // #0
001c72: 0800 1200                              |00b5: move-object/from16 v0, v18
001c76: 5400 1600                              |00b7: iget-object v0, v0,field@0016
001c7a: 070b                                   |00b9: move-object v11, v0
001c7c: 460b 0b0a                              |00ba: aget-object v11, v11, v10
001c80: 0800 1200                              |00bc: move-object/from16 v0, v18
001c84: 5400 1600                              |00be: iget-object v0, v0,field@0016
001c88: 070c                                   |00c0: move-object v12, v0
001c8a: 460c 0c0a                              |00c1: aget-object v12, v12, v10
001c8e: 450c 0c07                              |00c3: aget-wide v12, v12, v7
001c92: 0800 1200                              |00c5: move-object/from16 v0, v18
001c96: 5400 1800                              |00c7: iget-object v0, v0,field@0018
001c9a: 070e                                   |00c9: move-object v14, v0
001c9c: 460e 0e09                              |00ca: aget-object v14, v14, v9
001ca0: 450e 0e0a                              |00cc: aget-wide v14, v14, v10
001ca4: 0800 1200                              |00ce: move-object/from16 v0, v18
001ca8: 5400 1600                              |00d0: iget-object v0, v0,field@0016
001cac: 0810 0000                              |00d2: move-object/from16 v16, v0
001cb0: 4610 100a                              |00d4: aget-object v16, v16, v10
001cb4: 4510 1007                              |00d6: aget-wide v16, v16, v7
001cb8: ad0e 0e10                              |00d8: mul-double v14, v14, v16
001cbc: cbec                                   |00da: add-double/2addr v12, v14
001cbe: 4c0c 0b07                              |00db: aput-wide v12, v11, v7
001cc2: d809 0901                              |00dd: add-int/lit8 v9, v9, #int 1 // #01
001cc6: 123b                                   |00df: const/4 v11, #int 3 // #3
001cc8: 34b9 d5ff                              |00e0: if-lt v9, v11, 00b5 // -002b
mark pos is 16a : b5 ==
mark pos is 1c4 : e2 ==
001ccc: d80a 0a01                              |00e2: add-int/lit8 v10, v10, #int 1 // #01
001cd0: 123b                                   |00e4: const/4 v11, #int 3 // #3
001cd2: 34ba cfff                              |00e5: if-lt v10, v11, 00b4 // -0031
mark pos is 168 : b4 ==
mark pos is 1ce : e7 ==
001cd6: d807 0701                              |00e7: add-int/lit8 v7, v7, #int 1 // #01
001cda: 130b 1400                              |00e9: const/16 v11, #int 20 // #14
001cde: 34b7 a4ff                              |00eb: if-lt v7, v11, 008f // -005c
mark pos is 11e : 8f ==
mark pos is 1da : ed ==
001ce2: d808 0805                              |00ed: add-int/lit8 v8, v8, #int 5 // #05
001ce6: 2900 12ff                              |00ef: goto/16 0001 // -00ee
mark pos is 2 : 1 ==
[[[[[[[[[[ code 40 ]]]]]]]]]]
~~~~~~codeoffset=0x1cec; insns off=0x1cfc;registers is 10;insns size is 86~~~~~~~~
001cfc: 1217                                   |0000: const/4 v7, #int 1 // #1
001cfe: 1306 1400                              |0001: const/16 v6, #int 20 // #14
001d02: 1233                                   |0003: const/4 v3, #int 3 // #3
001d04: 3809 0400                              |0004: if-eqz v9, 0008 // +0004
mark pos is 10 : 8 ==
mark pos is c : 6 ==
001d08: 5989 1700                              |0006: iput v9, v8,field@0017
001d0c: 2420 3100 3300                         |0008: filled-new-array {v3, v3}, class@0031
001d12: 0c01                                   |000b: move-result-object v1
001d14: 6202 2f00                              |000c: sget-object v2,field@002f
001d18: 7120 8700 1200                         |000e: invoke-static {v2, v1}, method@0087
mark pos is 22 : 11 ==
001d1e: 0c01                                   |0011: move-result-object v1
001d20: 1f01 3300                              |0012: check-cast v1,class@0033
001d24: 5b81 1800                              |0014: iput-object v1, v8,field@0018
001d28: 2420 3100 6300                         |0016: filled-new-array {v3, v6}, class@0031
001d2e: 0c01                                   |0019: move-result-object v1
001d30: 6202 2f00                              |001a: sget-object v2,field@002f
001d34: 7120 8700 1200                         |001c: invoke-static {v2, v1}, method@0087
mark pos is 3e : 1f ==
001d3a: 0c01                                   |001f: move-result-object v1
001d3c: 1f01 3300                              |0020: check-cast v1,class@0033
001d40: 5b81 1500                              |0022: iput-object v1, v8,field@0015
001d44: 2420 3100 6300                         |0024: filled-new-array {v3, v6}, class@0031
001d4a: 0c01                                   |0027: move-result-object v1
001d4c: 6202 2f00                              |0028: sget-object v2,field@002f
001d50: 7120 8700 1200                         |002a: invoke-static {v2, v1}, method@0087
mark pos is 5a : 2d ==
001d56: 0c01                                   |002d: move-result-object v1
001d58: 1f01 3300                              |002e: check-cast v1,class@0033
001d5c: 5b81 1600                              |0030: iput-object v1, v8,field@0016
001d60: 1200                                   |0032: const/4 v0, #int 0 // #0
001d62: 5481 1500                              |0033: iget-object v1, v8,field@0015
001d66: 1202                                   |0035: const/4 v2, #int 0 // #0
001d68: 4601 0102                              |0036: aget-object v1, v1, v2
001d6c: 8302                                   |0038: int-to-double v2, v0
001d6e: 4c02 0100                              |0039: aput-wide v2, v1, v0
001d72: 5481 1500                              |003b: iget-object v1, v8,field@0015
001d76: 4601 0107                              |003d: aget-object v1, v1, v7
001d7a: 7b02                                   |003f: neg-int v2, v0
001d7c: 8322                                   |0040: int-to-double v2, v2
001d7e: 4c02 0100                              |0041: aput-wide v2, v1, v0
001d82: 5481 1500                              |0043: iget-object v1, v8,field@0015
001d86: 1222                                   |0045: const/4 v2, #int 2 // #2
001d88: 4601 0102                              |0046: aget-object v1, v1, v2
001d8c: 8302                                   |0048: int-to-double v2, v0
001d8e: 1804 182d 4454 fb21 0940               |0049: const-wide v4, #double 3.141593 // #400921fb54442d18
001d98: cd42                                   |004e: mul-double/2addr v2, v4
001d9a: 4c02 0100                              |004f: aput-wide v2, v1, v0
001d9e: d800 0001                              |0051: add-int/lit8 v0, v0, #int 1 // #01
001da2: 3460 e0ff                              |0053: if-lt v0, v6, 0033 // -0020
mark pos is 66 : 33 ==
mark pos is aa : 55 ==
001da6: 0f07                                   |0055: return v7
[[[[[[[[[[ code 41 ]]]]]]]]]]
~~~~~~codeoffset=0x1da8; insns off=0x1db8;registers is 1;insns size is 1~~~~~~~~
001db8: 0e00                                   |0000: return-void
[[[[[[[[[[ code 42 ]]]]]]]]]]
~~~~~~codeoffset=0x1dbc; insns off=0x1dcc;registers is 1;insns size is 1~~~~~~~~
001dcc: 0e00                                   |0000: return-void
[[[[[[[[[[ code 43 ]]]]]]]]]]
~~~~~~codeoffset=0x1dd0; insns off=0x1de0;registers is 3;insns size is 8~~~~~~~~
001de0: 2200 2700                              |0000: new-instance v0,class@0027
001de4: 1a01 1c00                              |0002: const-string v1, string@001c
001de8: 7020 7900 1000                         |0004: invoke-direct {v0, v1}, method@0079
mark pos is e : 7 ==
001dee: 1100                                   |0007: return-object v0
[[[[[[[[[[ code 44 ]]]]]]]]]]
~~~~~~codeoffset=0x1df0; insns off=0x1e00;registers is 2;insns size is 8~~~~~~~~
001e00: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
mark pos is 6 : 3 ==
001e06: 1300 b004                              |0003: const/16 v0, #int 1200 // #4b0
001e0a: 5910 1a00                              |0005: iput v0, v1,field@001a
001e0e: 0e00                                   |0007: return-void
[[[[[[[[[[ code 45 ]]]]]]]]]]
~~~~~~codeoffset=0x1e10; insns off=0x1e20;registers is 2;insns size is 2~~~~~~~~
001e20: 1200                                   |0000: const/4 v0, #int 0 // #0
001e22: 0f00                                   |0001: return v0
[[[[[[[[[[ code 46 ]]]]]]]]]]
~~~~~~codeoffset=0x1e24; insns off=0x1e34;registers is 2;insns size is 3~~~~~~~~
001e34: 1300 e50e                              |0000: const/16 v0, #int 3813 // #ee5
001e38: 0f00                                   |0002: return v0
[[[[[[[[[[ code 47 ]]]]]]]]]]
~~~~~~codeoffset=0x1e3c; insns off=0x1e4c;registers is 19;insns size is 492~~~~~~~~
001e4c: 121c                                   |0000: const/4 v12, #int 1 // #1
001e4e: 121d                                   |0001: const/4 v13, #int 1 // #1
001e50: 121e                                   |0002: const/4 v14, #int 1 // #1
001e52: 1214                                   |0003: const/4 v4, #int 1 // #1
001e54: 1215                                   |0004: const/4 v5, #int 1 // #1
001e56: 1216                                   |0005: const/4 v6, #int 1 // #1
001e58: 121b                                   |0006: const/4 v11, #int 1 // #1
001e5a: 1212                                   |0007: const/4 v2, #int 1 // #1
001e5c: 1213                                   |0008: const/4 v3, #int 1 // #1
001e5e: 1217                                   |0009: const/4 v7, #int 1 // #1
001e60: 1218                                   |000a: const/4 v8, #int 1 // #1
001e62: 1219                                   |000b: const/4 v9, #int 1 // #1
001e64: 121a                                   |000c: const/4 v10, #int 1 // #1
001e66: 121c                                   |000d: const/4 v12, #int 1 // #1
001e68: 121d                                   |000e: const/4 v13, #int 1 // #1
001e6a: 121e                                   |000f: const/4 v14, #int 1 // #1
001e6c: 1214                                   |0010: const/4 v4, #int 1 // #1
001e6e: 1215                                   |0011: const/4 v5, #int 1 // #1
001e70: 1216                                   |0012: const/4 v6, #int 1 // #1
001e72: 120f                                   |0013: const/4 v15, #int 0 // #0
001e74: 0800 1200                              |0014: move-object/from16 v0, v18
001e78: 5200 1a00                              |0016: iget v0, v0,field@001a
001e7c: 0211 0000                              |0018: move/from16 v17, v0
001e80: 01f0                                   |001a: move v0, v15
001e82: 0201 1100                              |001b: move/from16 v1, v17
001e86: 3410 1b00                              |001d: if-lt v0, v1, 0038 // +001b
mark pos is 70 : 38 ==
mark pos is 3e : 1f ==
001e8a: 1212                                   |001f: const/4 v2, #int 1 // #1
001e8c: 1203                                   |0020: const/4 v3, #int 0 // #0
001e8e: 1217                                   |0021: const/4 v7, #int 1 // #1
001e90: 1208                                   |0022: const/4 v8, #int 0 // #0
001e92: 1219                                   |0023: const/4 v9, #int 1 // #1
001e94: 120a                                   |0024: const/4 v10, #int 0 // #0
001e96: 1310 0000                              |0025: const/16 v16, #int 0 // #0
001e9a: 0800 1200                              |0027: move-object/from16 v0, v18
001e9e: 5200 1a00                              |0029: iget v0, v0,field@001a
001ea2: 0211 0000                              |002b: move/from16 v17, v0
001ea6: 0200 1000                              |002d: move/from16 v0, v16
001eaa: 0201 1100                              |002f: move/from16 v1, v17
001eae: 3410 df00                              |0031: if-lt v0, v1, 0110 // +00df
mark pos is 220 : 110 ==
mark pos is 66 : 33 ==
001eb2: 390c b501                              |0033: if-nez v12, 01e8 // +01b5
mark pos is 3d0 : 1e8 ==
mark pos is 6a : 35 ==
001eb6: 1311 0100                              |0035: const/16 v17, #int 1 // #1
001eba: 0f11                                   |0037: return v17
mark pos is 70 : 38 ==
001ebc: 3902 0400                              |0038: if-nez v2, 003c // +0004
mark pos is 78 : 3c ==
mark pos is 74 : 3a ==
001ec0: 3803 7800                              |003a: if-eqz v3, 00b2 // +0078
mark pos is 164 : b2 ==
mark pos is 78 : 3c ==
001ec4: 3907 0400                              |003c: if-nez v7, 0040 // +0004
mark pos is 80 : 40 ==
mark pos is 7c : 3e ==
001ec8: 3808 7400                              |003e: if-eqz v8, 00b2 // +0074
mark pos is 164 : b2 ==
mark pos is 80 : 40 ==
001ecc: 3909 0600                              |0040: if-nez v9, 0046 // +0006
mark pos is 8c : 46 ==
mark pos is 84 : 42 ==
001ed0: 390a 0400                              |0042: if-nez v10, 0046 // +0004
mark pos is 8c : 46 ==
mark pos is 88 : 44 ==
001ed4: 380b 6e00                              |0044: if-eqz v11, 00b2 // +006e
mark pos is 164 : b2 ==
mark pos is 8c : 46 ==
001ed8: 380c 7000                              |0046: if-eqz v12, 00b6 // +0070
mark pos is 16c : b6 ==
mark pos is 90 : 48 ==
001edc: 1311 0000                              |0048: const/16 v17, #int 0 // #0
001ee0: 020c 1100                              |004a: move/from16 v12, v17
001ee4: 380d 6f00                              |004c: if-eqz v13, 00bb // +006f
mark pos is 176 : bb ==
mark pos is 9c : 4e ==
001ee8: 1311 0000                              |004e: const/16 v17, #int 0 // #0
001eec: 020d 1100                              |0050: move/from16 v13, v17
001ef0: 380e 6e00                              |0052: if-eqz v14, 00c0 // +006e
mark pos is 180 : c0 ==
mark pos is a8 : 54 ==
001ef4: 1311 0000                              |0054: const/16 v17, #int 0 // #0
001ef8: 020e 1100                              |0056: move/from16 v14, v17
001efc: 3804 6d00                              |0058: if-eqz v4, 00c5 // +006d
mark pos is 18a : c5 ==
mark pos is b4 : 5a ==
001f00: 1311 0000                              |005a: const/16 v17, #int 0 // #0
001f04: 0204 1100                              |005c: move/from16 v4, v17
001f08: 3805 6c00                              |005e: if-eqz v5, 00ca // +006c
mark pos is 194 : ca ==
mark pos is c0 : 60 ==
001f0c: 1311 0000                              |0060: const/16 v17, #int 0 // #0
001f10: 0205 1100                              |0062: move/from16 v5, v17
001f14: 3806 6b00                              |0064: if-eqz v6, 00cf // +006b
mark pos is 19e : cf ==
mark pos is cc : 66 ==
001f18: 1311 0000                              |0066: const/16 v17, #int 0 // #0
001f1c: 0206 1100                              |0068: move/from16 v6, v17
001f20: 3802 6a00                              |006a: if-eqz v2, 00d4 // +006a
mark pos is 1a8 : d4 ==
mark pos is d8 : 6c ==
001f24: 1311 0000                              |006c: const/16 v17, #int 0 // #0
001f28: 0202 1100                              |006e: move/from16 v2, v17
001f2c: 3803 6900                              |0070: if-eqz v3, 00d9 // +0069
mark pos is 1b2 : d9 ==
mark pos is e4 : 72 ==
001f30: 1311 0000                              |0072: const/16 v17, #int 0 // #0
001f34: 0203 1100                              |0074: move/from16 v3, v17
001f38: 3807 6800                              |0076: if-eqz v7, 00de // +0068
mark pos is 1bc : de ==
mark pos is f0 : 78 ==
001f3c: 1311 0000                              |0078: const/16 v17, #int 0 // #0
001f40: 0207 1100                              |007a: move/from16 v7, v17
001f44: 3808 6700                              |007c: if-eqz v8, 00e3 // +0067
mark pos is 1c6 : e3 ==
mark pos is fc : 7e ==
001f48: 1311 0000                              |007e: const/16 v17, #int 0 // #0
001f4c: 0208 1100                              |0080: move/from16 v8, v17
001f50: 3809 6600                              |0082: if-eqz v9, 00e8 // +0066
mark pos is 1d0 : e8 ==
mark pos is 108 : 84 ==
001f54: 1311 0000                              |0084: const/16 v17, #int 0 // #0
001f58: 0209 1100                              |0086: move/from16 v9, v17
001f5c: 380a 6500                              |0088: if-eqz v10, 00ed // +0065
mark pos is 1da : ed ==
mark pos is 114 : 8a ==
001f60: 1311 0000                              |008a: const/16 v17, #int 0 // #0
001f64: 020a 1100                              |008c: move/from16 v10, v17
001f68: 3802 6400                              |008e: if-eqz v2, 00f2 // +0064
mark pos is 1e4 : f2 ==
mark pos is 120 : 90 ==
001f6c: 1311 0000                              |0090: const/16 v17, #int 0 // #0
001f70: 0202 1100                              |0092: move/from16 v2, v17
001f74: 3803 6300                              |0094: if-eqz v3, 00f7 // +0063
mark pos is 1ee : f7 ==
mark pos is 12c : 96 ==
001f78: 1311 0000                              |0096: const/16 v17, #int 0 // #0
001f7c: 0203 1100                              |0098: move/from16 v3, v17
001f80: 3807 6200                              |009a: if-eqz v7, 00fc // +0062
mark pos is 1f8 : fc ==
mark pos is 138 : 9c ==
001f84: 1311 0000                              |009c: const/16 v17, #int 0 // #0
001f88: 0207 1100                              |009e: move/from16 v7, v17
001f8c: 3808 6100                              |00a0: if-eqz v8, 0101 // +0061
mark pos is 202 : 101 ==
mark pos is 144 : a2 ==
001f90: 1311 0000                              |00a2: const/16 v17, #int 0 // #0
001f94: 0208 1100                              |00a4: move/from16 v8, v17
001f98: 3809 6000                              |00a6: if-eqz v9, 0106 // +0060
mark pos is 20c : 106 ==
mark pos is 150 : a8 ==
001f9c: 1311 0000                              |00a8: const/16 v17, #int 0 // #0
001fa0: 0209 1100                              |00aa: move/from16 v9, v17
001fa4: 380a 5f00                              |00ac: if-eqz v10, 010b // +005f
mark pos is 216 : 10b ==
mark pos is 15c : ae ==
001fa8: 1311 0000                              |00ae: const/16 v17, #int 0 // #0
001fac: 020a 1100                              |00b0: move/from16 v10, v17
001fb0: d80f 0f01                              |00b2: add-int/lit8 v15, v15, #int 1 // #01
001fb4: 2900 60ff                              |00b4: goto/16 0014 // -00a0
mark pos is 28 : 14 ==
mark pos is 16c : b6 ==
001fb8: 1311 0100                              |00b6: const/16 v17, #int 1 // #1
001fbc: 020c 1100                              |00b8: move/from16 v12, v17
001fc0: 2892                                   |00ba: goto 004c // -006e
mark pos is 98 : 4c ==
mark pos is 176 : bb ==
001fc2: 1311 0100                              |00bb: const/16 v17, #int 1 // #1
001fc6: 020d 1100                              |00bd: move/from16 v13, v17
001fca: 2893                                   |00bf: goto 0052 // -006d
mark pos is a4 : 52 ==
mark pos is 180 : c0 ==
001fcc: 1311 0100                              |00c0: const/16 v17, #int 1 // #1
001fd0: 020e 1100                              |00c2: move/from16 v14, v17
001fd4: 2894                                   |00c4: goto 0058 // -006c
mark pos is b0 : 58 ==
mark pos is 18a : c5 ==
001fd6: 1311 0100                              |00c5: const/16 v17, #int 1 // #1
001fda: 0204 1100                              |00c7: move/from16 v4, v17
001fde: 2895                                   |00c9: goto 005e // -006b
mark pos is bc : 5e ==
mark pos is 194 : ca ==
001fe0: 1311 0100                              |00ca: const/16 v17, #int 1 // #1
001fe4: 0205 1100                              |00cc: move/from16 v5, v17
001fe8: 2896                                   |00ce: goto 0064 // -006a
mark pos is c8 : 64 ==
mark pos is 19e : cf ==
001fea: 1311 0100                              |00cf: const/16 v17, #int 1 // #1
001fee: 0206 1100                              |00d1: move/from16 v6, v17
001ff2: 2897                                   |00d3: goto 006a // -0069
mark pos is d4 : 6a ==
mark pos is 1a8 : d4 ==
001ff4: 1311 0100                              |00d4: const/16 v17, #int 1 // #1
001ff8: 0202 1100                              |00d6: move/from16 v2, v17
001ffc: 2898                                   |00d8: goto 0070 // -0068
mark pos is e0 : 70 ==
mark pos is 1b2 : d9 ==
001ffe: 1311 0100                              |00d9: const/16 v17, #int 1 // #1
002002: 0203 1100                              |00db: move/from16 v3, v17
002006: 2899                                   |00dd: goto 0076 // -0067
mark pos is ec : 76 ==
mark pos is 1bc : de ==
002008: 1311 0100                              |00de: const/16 v17, #int 1 // #1
00200c: 0207 1100                              |00e0: move/from16 v7, v17
002010: 289a                                   |00e2: goto 007c // -0066
mark pos is f8 : 7c ==
mark pos is 1c6 : e3 ==
002012: 1311 0100                              |00e3: const/16 v17, #int 1 // #1
002016: 0208 1100                              |00e5: move/from16 v8, v17
00201a: 289b                                   |00e7: goto 0082 // -0065
mark pos is 104 : 82 ==
mark pos is 1d0 : e8 ==
00201c: 1311 0100                              |00e8: const/16 v17, #int 1 // #1
002020: 0209 1100                              |00ea: move/from16 v9, v17
002024: 289c                                   |00ec: goto 0088 // -0064
mark pos is 110 : 88 ==
mark pos is 1da : ed ==
002026: 1311 0100                              |00ed: const/16 v17, #int 1 // #1
00202a: 020a 1100                              |00ef: move/from16 v10, v17
00202e: 289d                                   |00f1: goto 008e // -0063
mark pos is 11c : 8e ==
mark pos is 1e4 : f2 ==
002030: 1311 0100                              |00f2: const/16 v17, #int 1 // #1
002034: 0202 1100                              |00f4: move/from16 v2, v17
002038: 289e                                   |00f6: goto 0094 // -0062
mark pos is 128 : 94 ==
mark pos is 1ee : f7 ==
00203a: 1311 0100                              |00f7: const/16 v17, #int 1 // #1
00203e: 0203 1100                              |00f9: move/from16 v3, v17
002042: 289f                                   |00fb: goto 009a // -0061
mark pos is 134 : 9a ==
mark pos is 1f8 : fc ==
002044: 1311 0100                              |00fc: const/16 v17, #int 1 // #1
002048: 0207 1100                              |00fe: move/from16 v7, v17
00204c: 28a0                                   |0100: goto 00a0 // -0060
mark pos is 140 : a0 ==
mark pos is 202 : 101 ==
00204e: 1311 0100                              |0101: const/16 v17, #int 1 // #1
002052: 0208 1100                              |0103: move/from16 v8, v17
002056: 28a1                                   |0105: goto 00a6 // -005f
mark pos is 14c : a6 ==
mark pos is 20c : 106 ==
002058: 1311 0100                              |0106: const/16 v17, #int 1 // #1
00205c: 0209 1100                              |0108: move/from16 v9, v17
002060: 28a2                                   |010a: goto 00ac // -005e
mark pos is 158 : ac ==
mark pos is 216 : 10b ==
002062: 1311 0100                              |010b: const/16 v17, #int 1 // #1
002066: 020a 1100                              |010d: move/from16 v10, v17
00206a: 28a3                                   |010f: goto 00b2 // -005d
mark pos is 164 : b2 ==
mark pos is 220 : 110 ==
00206c: 3902 0400                              |0110: if-nez v2, 0114 // +0004
mark pos is 228 : 114 ==
mark pos is 224 : 112 ==
002070: 3803 7800                              |0112: if-eqz v3, 018a // +0078
mark pos is 314 : 18a ==
mark pos is 228 : 114 ==
002074: 3907 0400                              |0114: if-nez v7, 0118 // +0004
mark pos is 230 : 118 ==
mark pos is 22c : 116 ==
002078: 3808 7400                              |0116: if-eqz v8, 018a // +0074
mark pos is 314 : 18a ==
mark pos is 230 : 118 ==
00207c: 3909 0600                              |0118: if-nez v9, 011e // +0006
mark pos is 23c : 11e ==
mark pos is 234 : 11a ==
002080: 390a 0400                              |011a: if-nez v10, 011e // +0004
mark pos is 23c : 11e ==
mark pos is 238 : 11c ==
002084: 380b 6e00                              |011c: if-eqz v11, 018a // +006e
mark pos is 314 : 18a ==
mark pos is 23c : 11e ==
002088: 3802 7000                              |011e: if-eqz v2, 018e // +0070
mark pos is 31c : 18e ==
mark pos is 240 : 120 ==
00208c: 1311 0000                              |0120: const/16 v17, #int 0 // #0
002090: 0202 1100                              |0122: move/from16 v2, v17
002094: 3803 6f00                              |0124: if-eqz v3, 0193 // +006f
mark pos is 326 : 193 ==
mark pos is 24c : 126 ==
002098: 1311 0000                              |0126: const/16 v17, #int 0 // #0
00209c: 0203 1100                              |0128: move/from16 v3, v17
0020a0: 3807 6e00                              |012a: if-eqz v7, 0198 // +006e
mark pos is 330 : 198 ==
mark pos is 258 : 12c ==
0020a4: 1311 0000                              |012c: const/16 v17, #int 0 // #0
0020a8: 0207 1100                              |012e: move/from16 v7, v17
0020ac: 3808 6d00                              |0130: if-eqz v8, 019d // +006d
mark pos is 33a : 19d ==
mark pos is 264 : 132 ==
0020b0: 1311 0000                              |0132: const/16 v17, #int 0 // #0
0020b4: 0208 1100                              |0134: move/from16 v8, v17
0020b8: 3809 6c00                              |0136: if-eqz v9, 01a2 // +006c
mark pos is 344 : 1a2 ==
mark pos is 270 : 138 ==
0020bc: 1311 0000                              |0138: const/16 v17, #int 0 // #0
0020c0: 0209 1100                              |013a: move/from16 v9, v17
0020c4: 380a 6b00                              |013c: if-eqz v10, 01a7 // +006b
mark pos is 34e : 1a7 ==
mark pos is 27c : 13e ==
0020c8: 1311 0000                              |013e: const/16 v17, #int 0 // #0
0020cc: 020a 1100                              |0140: move/from16 v10, v17
0020d0: 380c 6a00                              |0142: if-eqz v12, 01ac // +006a
mark pos is 358 : 1ac ==
mark pos is 288 : 144 ==
0020d4: 1311 0000                              |0144: const/16 v17, #int 0 // #0
0020d8: 020c 1100                              |0146: move/from16 v12, v17
0020dc: 380d 6900                              |0148: if-eqz v13, 01b1 // +0069
mark pos is 362 : 1b1 ==
mark pos is 294 : 14a ==
0020e0: 1311 0000                              |014a: const/16 v17, #int 0 // #0
0020e4: 020d 1100                              |014c: move/from16 v13, v17
0020e8: 380e 6800                              |014e: if-eqz v14, 01b6 // +0068
mark pos is 36c : 1b6 ==
mark pos is 2a0 : 150 ==
0020ec: 1311 0000                              |0150: const/16 v17, #int 0 // #0
0020f0: 020e 1100                              |0152: move/from16 v14, v17
0020f4: 3804 6700                              |0154: if-eqz v4, 01bb // +0067
mark pos is 376 : 1bb ==
mark pos is 2ac : 156 ==
0020f8: 1311 0000                              |0156: const/16 v17, #int 0 // #0
0020fc: 0204 1100                              |0158: move/from16 v4, v17
002100: 3805 6600                              |015a: if-eqz v5, 01c0 // +0066
mark pos is 380 : 1c0 ==
mark pos is 2b8 : 15c ==
002104: 1311 0000                              |015c: const/16 v17, #int 0 // #0
002108: 0205 1100                              |015e: move/from16 v5, v17
00210c: 3806 6500                              |0160: if-eqz v6, 01c5 // +0065
mark pos is 38a : 1c5 ==
mark pos is 2c4 : 162 ==
002110: 1311 0000                              |0162: const/16 v17, #int 0 // #0
002114: 0206 1100                              |0164: move/from16 v6, v17
002118: 380c 6400                              |0166: if-eqz v12, 01ca // +0064
mark pos is 394 : 1ca ==
mark pos is 2d0 : 168 ==
00211c: 1311 0000                              |0168: const/16 v17, #int 0 // #0
002120: 020c 1100                              |016a: move/from16 v12, v17
002124: 380d 6300                              |016c: if-eqz v13, 01cf // +0063
mark pos is 39e : 1cf ==
mark pos is 2dc : 16e ==
002128: 1311 0000                              |016e: const/16 v17, #int 0 // #0
00212c: 020d 1100                              |0170: move/from16 v13, v17
002130: 380e 6200                              |0172: if-eqz v14, 01d4 // +0062
mark pos is 3a8 : 1d4 ==
mark pos is 2e8 : 174 ==
002134: 1311 0000                              |0174: const/16 v17, #int 0 // #0
002138: 020e 1100                              |0176: move/from16 v14, v17
00213c: 3804 6100                              |0178: if-eqz v4, 01d9 // +0061
mark pos is 3b2 : 1d9 ==
mark pos is 2f4 : 17a ==
002140: 1311 0000                              |017a: const/16 v17, #int 0 // #0
002144: 0204 1100                              |017c: move/from16 v4, v17
002148: 3805 6000                              |017e: if-eqz v5, 01de // +0060
mark pos is 3bc : 1de ==
mark pos is 300 : 180 ==
00214c: 1311 0000                              |0180: const/16 v17, #int 0 // #0
002150: 0205 1100                              |0182: move/from16 v5, v17
002154: 3806 5f00                              |0184: if-eqz v6, 01e3 // +005f
mark pos is 3c6 : 1e3 ==
mark pos is 30c : 186 ==
002158: 1311 0000                              |0186: const/16 v17, #int 0 // #0
00215c: 0206 1100                              |0188: move/from16 v6, v17
002160: d810 1001                              |018a: add-int/lit8 v16, v16, #int 1 // #01
002164: 2900 9bfe                              |018c: goto/16 0027 // -0165
mark pos is 4e : 27 ==
mark pos is 31c : 18e ==
002168: 1311 0100                              |018e: const/16 v17, #int 1 // #1
00216c: 0202 1100                              |0190: move/from16 v2, v17
002170: 2892                                   |0192: goto 0124 // -006e
mark pos is 248 : 124 ==
mark pos is 326 : 193 ==
002172: 1311 0100                              |0193: const/16 v17, #int 1 // #1
002176: 0203 1100                              |0195: move/from16 v3, v17
00217a: 2893                                   |0197: goto 012a // -006d
mark pos is 254 : 12a ==
mark pos is 330 : 198 ==
00217c: 1311 0100                              |0198: const/16 v17, #int 1 // #1
002180: 0207 1100                              |019a: move/from16 v7, v17
002184: 2894                                   |019c: goto 0130 // -006c
mark pos is 260 : 130 ==
mark pos is 33a : 19d ==
002186: 1311 0100                              |019d: const/16 v17, #int 1 // #1
00218a: 0208 1100                              |019f: move/from16 v8, v17
00218e: 2895                                   |01a1: goto 0136 // -006b
mark pos is 26c : 136 ==
mark pos is 344 : 1a2 ==
002190: 1311 0100                              |01a2: const/16 v17, #int 1 // #1
002194: 0209 1100                              |01a4: move/from16 v9, v17
002198: 2896                                   |01a6: goto 013c // -006a
mark pos is 278 : 13c ==
mark pos is 34e : 1a7 ==
00219a: 1311 0100                              |01a7: const/16 v17, #int 1 // #1
00219e: 020a 1100                              |01a9: move/from16 v10, v17
0021a2: 2897                                   |01ab: goto 0142 // -0069
mark pos is 284 : 142 ==
mark pos is 358 : 1ac ==
0021a4: 1311 0100                              |01ac: const/16 v17, #int 1 // #1
0021a8: 020c 1100                              |01ae: move/from16 v12, v17
0021ac: 2898                                   |01b0: goto 0148 // -0068
mark pos is 290 : 148 ==
mark pos is 362 : 1b1 ==
0021ae: 1311 0100                              |01b1: const/16 v17, #int 1 // #1
0021b2: 020d 1100                              |01b3: move/from16 v13, v17
0021b6: 2899                                   |01b5: goto 014e // -0067
mark pos is 29c : 14e ==
mark pos is 36c : 1b6 ==
0021b8: 1311 0100                              |01b6: const/16 v17, #int 1 // #1
0021bc: 020e 1100                              |01b8: move/from16 v14, v17
0021c0: 289a                                   |01ba: goto 0154 // -0066
mark pos is 2a8 : 154 ==
mark pos is 376 : 1bb ==
0021c2: 1311 0100                              |01bb: const/16 v17, #int 1 // #1
0021c6: 0204 1100                              |01bd: move/from16 v4, v17
0021ca: 289b                                   |01bf: goto 015a // -0065
mark pos is 2b4 : 15a ==
mark pos is 380 : 1c0 ==
0021cc: 1311 0100                              |01c0: const/16 v17, #int 1 // #1
0021d0: 0205 1100                              |01c2: move/from16 v5, v17
0021d4: 289c                                   |01c4: goto 0160 // -0064
mark pos is 2c0 : 160 ==
mark pos is 38a : 1c5 ==
0021d6: 1311 0100                              |01c5: const/16 v17, #int 1 // #1
0021da: 0206 1100                              |01c7: move/from16 v6, v17
0021de: 289d                                   |01c9: goto 0166 // -0063
mark pos is 2cc : 166 ==
mark pos is 394 : 1ca ==
0021e0: 1311 0100                              |01ca: const/16 v17, #int 1 // #1
0021e4: 020c 1100                              |01cc: move/from16 v12, v17
0021e8: 289e                                   |01ce: goto 016c // -0062
mark pos is 2d8 : 16c ==
mark pos is 39e : 1cf ==
0021ea: 1311 0100                              |01cf: const/16 v17, #int 1 // #1
0021ee: 020d 1100                              |01d1: move/from16 v13, v17
0021f2: 289f                                   |01d3: goto 0172 // -0061
mark pos is 2e4 : 172 ==
mark pos is 3a8 : 1d4 ==
0021f4: 1311 0100                              |01d4: const/16 v17, #int 1 // #1
0021f8: 020e 1100                              |01d6: move/from16 v14, v17
0021fc: 28a0                                   |01d8: goto 0178 // -0060
mark pos is 2f0 : 178 ==
mark pos is 3b2 : 1d9 ==
0021fe: 1311 0100                              |01d9: const/16 v17, #int 1 // #1
002202: 0204 1100                              |01db: move/from16 v4, v17
002206: 28a1                                   |01dd: goto 017e // -005f
mark pos is 2fc : 17e ==
mark pos is 3bc : 1de ==
002208: 1311 0100                              |01de: const/16 v17, #int 1 // #1
00220c: 0205 1100                              |01e0: move/from16 v5, v17
002210: 28a2                                   |01e2: goto 0184 // -005e
mark pos is 308 : 184 ==
mark pos is 3c6 : 1e3 ==
002212: 1311 0100                              |01e3: const/16 v17, #int 1 // #1
002216: 0206 1100                              |01e5: move/from16 v6, v17
00221a: 28a3                                   |01e7: goto 018a // -005d
mark pos is 314 : 18a ==
mark pos is 3d0 : 1e8 ==
00221c: 1311 0000                              |01e8: const/16 v17, #int 0 // #0
002220: 2900 4dfe                              |01ea: goto/16 0037 // -01b3
mark pos is 6e : 37 ==
[[[[[[[[[[ code 48 ]]]]]]]]]]
~~~~~~codeoffset=0x2224; insns off=0x2234;registers is 3;insns size is 6~~~~~~~~
002234: 3802 0400                              |0000: if-eqz v2, 0004 // +0004
mark pos is 8 : 4 ==
mark pos is 4 : 2 ==
002238: 5912 1a00                              |0002: iput v2, v1,field@001a
00223c: 1210                                   |0004: const/4 v0, #int 1 // #1
00223e: 0f00                                   |0005: return v0
[[[[[[[[[[ code 49 ]]]]]]]]]]
~~~~~~codeoffset=0x2240; insns off=0x2250;registers is 1;insns size is 1~~~~~~~~
002250: 0e00                                   |0000: return-void
[[[[[[[[[[ code 50 ]]]]]]]]]]
~~~~~~codeoffset=0x2254; insns off=0x2264;registers is 1;insns size is 1~~~~~~~~
002264: 0e00                                   |0000: return-void
[[[[[[[[[[ code 51 ]]]]]]]]]]
~~~~~~codeoffset=0x2268; insns off=0x2278;registers is 3;insns size is 8~~~~~~~~
002278: 2200 2700                              |0000: new-instance v0,class@0027
00227c: 1a01 5400                              |0002: const-string v1, string@0054
002280: 7020 7900 1000                         |0004: invoke-direct {v0, v1}, method@0079
mark pos is e : 7 ==
002286: 1100                                   |0007: return-object v0
[[[[[[[[[[ code 52 ]]]]]]]]]]
~~~~~~codeoffset=0x2288; insns off=0x2298;registers is 2;insns size is 12~~~~~~~~
002298: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
mark pos is 6 : 3 ==
00229e: 1300 0c00                              |0003: const/16 v0, #int 12 // #c
0022a2: 5910 1c00                              |0005: iput v0, v1,field@001c
0022a6: 1300 4000                              |0007: const/16 v0, #int 64 // #40
0022aa: 5910 1b00                              |0009: iput v0, v1,field@001b
0022ae: 0e00                                   |000b: return-void
[[[[[[[[[[ code 53 ]]]]]]]]]]
~~~~~~codeoffset=0x22b0; insns off=0x22c0;registers is 2;insns size is 2~~~~~~~~
0022c0: 1200                                   |0000: const/4 v0, #int 0 // #0
0022c2: 0f00                                   |0001: return v0
[[[[[[[[[[ code 54 ]]]]]]]]]]
~~~~~~codeoffset=0x22c4; insns off=0x22d4;registers is 2;insns size is 3~~~~~~~~
0022d4: 1300 840a                              |0000: const/16 v0, #int 2692 // #a84
0022d8: 0f00                                   |0002: return v0
[[[[[[[[[[ code 55 ]]]]]]]]]]
~~~~~~codeoffset=0x22dc; insns off=0x22ec;registers is 13;insns size is 93~~~~~~~~
0022ec: 120b                                   |0000: const/4 v11, #int 0 // #0
0022ee: 121a                                   |0001: const/4 v10, #int 1 // #1
0022f0: 54c7 1d00                              |0002: iget-object v7, v12,field@001d
0022f4: 4b0a 070b                              |0004: aput v10, v7, v11
0022f8: 1210                                   |0006: const/4 v0, #int 1 // #1
0022fa: 52c7 1b00                              |0007: iget v7, v12,field@001b
0022fe: 3470 1200                              |0009: if-lt v0, v7, 001b // +0012
mark pos is 36 : 1b ==
mark pos is 16 : b ==
002302: 1203                                   |000b: const/4 v3, #int 0 // #0
002304: 1205                                   |000c: const/4 v5, #int 0 // #0
002306: 1202                                   |000d: const/4 v2, #int 0 // #0
002308: 52c7 1b00                              |000e: iget v7, v12,field@001b
00230c: 3472 1900                              |0010: if-lt v2, v7, 0029 // +0019
mark pos is 52 : 29 ==
mark pos is 24 : 12 ==
002310: 59c3 1e00                              |0012: iput v3, v12,field@001e
002314: 59c5 1f00                              |0014: iput v5, v12,field@001f
002318: 54c7 1d00                              |0016: iget-object v7, v12,field@001d
00231c: 4407 070b                              |0018: aget v7, v7, v11
002320: 0f07                                   |001a: return v7
mark pos is 36 : 1b ==
002322: 54c7 1d00                              |001b: iget-object v7, v12,field@001d
002326: 54c8 1d00                              |001d: iget-object v8, v12,field@001d
00232a: 9109 000a                              |001f: sub-int v9, v0, v10
00232e: 4408 0809                              |0021: aget v8, v8, v9
002332: b008                                   |0023: add-int/2addr v8, v0
002334: 4b08 0700                              |0024: aput v8, v7, v0
002338: d800 0001                              |0026: add-int/lit8 v0, v0, #int 1 // #01
00233c: 28df                                   |0028: goto 0007 // -0021
mark pos is e : 7 ==
mark pos is 52 : 29 ==
00233e: 1214                                   |0029: const/4 v4, #int 1 // #1
002340: 52c7 1b00                              |002a: iget v7, v12,field@001b
002344: 3474 0500                              |002c: if-lt v4, v7, 0031 // +0005
mark pos is 62 : 31 ==
mark pos is 5c : 2e ==
002348: d802 0201                              |002e: add-int/lit8 v2, v2, #int 1 // #01
00234c: 28de                                   |0030: goto 000e // -0022
mark pos is 1c : e ==
mark pos is 62 : 31 ==
00234e: 52c7 1b00                              |0031: iget v7, v12,field@001b
002352: 52c8 1c00                              |0033: iget v8, v12,field@001c
002356: 9006 0708                              |0035: add-int v6, v7, v8
00235a: b063                                   |0037: add-int/2addr v3, v6
00235c: d805 0502                              |0038: add-int/lit8 v5, v5, #int 2 // #02
002360: 54c7 1d00                              |003a: iget-object v7, v12,field@001d
002364: 9108 040a                              |003c: sub-int v8, v4, v10
002368: 4407 0708                              |003e: aget v7, v7, v8
00236c: 54c8 1d00                              |0040: iget-object v8, v12,field@001d
002370: 4408 0804                              |0042: aget v8, v8, v4
002374: 3587 1600                              |0044: if-ge v7, v8, 005a // +0016
mark pos is b4 : 5a ==
mark pos is 8c : 46 ==
002378: 54c7 1d00                              |0046: iget-object v7, v12,field@001d
00237c: 9108 040a                              |0048: sub-int v8, v4, v10
002380: 4401 0708                              |004a: aget v1, v7, v8
002384: 54c7 1d00                              |004c: iget-object v7, v12,field@001d
002388: 9108 040a                              |004e: sub-int v8, v4, v10
00238c: 54c9 1d00                              |0050: iget-object v9, v12,field@001d
002390: 4409 0904                              |0052: aget v9, v9, v4
002394: 4b09 0708                              |0054: aput v9, v7, v8
002398: 54c7 1d00                              |0056: iget-object v7, v12,field@001d
00239c: 4b01 0704                              |0058: aput v1, v7, v4
0023a0: d804 0401                              |005a: add-int/lit8 v4, v4, #int 1 // #01
0023a4: 28ce                                   |005c: goto 002a // -0032
mark pos is 54 : 2a ==
[[[[[[[[[[ code 56 ]]]]]]]]]]
~~~~~~codeoffset=0x23a8; insns off=0x23b8;registers is 3;insns size is 12~~~~~~~~
0023b8: 3802 0400                              |0000: if-eqz v2, 0004 // +0004
mark pos is 8 : 4 ==
mark pos is 4 : 2 ==
0023bc: 5912 1b00                              |0002: iput v2, v1,field@001b
0023c0: 5210 1b00                              |0004: iget v0, v1,field@001b
0023c4: 2300 3100                              |0006: new-array v0, v0, class@0031
0023c8: 5b10 1d00                              |0008: iput-object v0, v1,field@001d
0023cc: 1210                                   |000a: const/4 v0, #int 1 // #1
0023ce: 0f00                                   |000b: return v0
[[[[[[[[[[ code 57 ]]]]]]]]]]
~~~~~~codeoffset=0x23d0; insns off=0x23e0;registers is 1;insns size is 1~~~~~~~~
0023e0: 0e00                                   |0000: return-void
[[[[[[[[[[ code 58 ]]]]]]]]]]
~~~~~~codeoffset=0x23e4; insns off=0x23f4;registers is 1;insns size is 1~~~~~~~~
0023f4: 0e00                                   |0000: return-void
[[[[[[[[[[ code 59 ]]]]]]]]]]
~~~~~~codeoffset=0x23f8; insns off=0x2408;registers is 3;insns size is 8~~~~~~~~
002408: 2200 2700                              |0000: new-instance v0,class@0027
00240c: 1a01 5700                              |0002: const-string v1, string@0057
002410: 7020 7900 1000                         |0004: invoke-direct {v0, v1}, method@0079
mark pos is e : 7 ==
002416: 1100                                   |0007: return-object v0
[[[[[[[[[[ code 60 ]]]]]]]]]]
~~~~~~codeoffset=0x2418; insns off=0x2428;registers is 2;insns size is 8~~~~~~~~
002428: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
mark pos is 6 : 3 ==
00242e: 1300 6400                              |0003: const/16 v0, #int 100 // #64
002432: 5910 2100                              |0005: iput v0, v1,field@0021
002436: 0e00                                   |0007: return-void
[[[[[[[[[[ code 61 ]]]]]]]]]]
~~~~~~codeoffset=0x2438; insns off=0x2448;registers is 3;insns size is 13~~~~~~~~
002448: 3902 0400                              |0000: if-nez v2, 0004 // +0004
mark pos is 8 : 4 ==
mark pos is 4 : 2 ==
00244c: 1200                                   |0002: const/4 v0, #int 0 // #0
00244e: 0f00                                   |0003: return v0
mark pos is 8 : 4 ==
002450: 1210                                   |0004: const/4 v0, #int 1 // #1
002452: 9100 0200                              |0005: sub-int v0, v2, v0
002456: 6e20 4b00 0100                         |0007: invoke-virtual {v1, v0}, method@004b
mark pos is 14 : a ==
00245c: 0a00                                   |000a: move-result v0
00245e: b020                                   |000b: add-int/2addr v0, v2
002460: 28f7                                   |000c: goto 0003 // -0009
mark pos is 6 : 3 ==
[[[[[[[[[[ code 62 ]]]]]]]]]]
~~~~~~codeoffset=0x2464; insns off=0x2474;registers is 2;insns size is 2~~~~~~~~
002474: 1200                                   |0000: const/4 v0, #int 0 // #0
002476: 0f00                                   |0001: return v0
[[[[[[[[[[ code 63 ]]]]]]]]]]
~~~~~~codeoffset=0x2478; insns off=0x2488;registers is 2;insns size is 3~~~~~~~~
002488: 1300 900e                              |0000: const/16 v0, #int 3728 // #e90
00248c: 0f00                                   |0002: return v0
[[[[[[[[[[ code 64 ]]]]]]]]]]
~~~~~~codeoffset=0x2490; insns off=0x24a0;registers is 6;insns size is 23~~~~~~~~
0024a0: 1201                                   |0000: const/4 v1, #int 0 // #0
0024a2: 1200                                   |0001: const/4 v0, #int 0 // #0
0024a4: 5254 2100                              |0002: iget v4, v5,field@0021
0024a8: 3440 0300                              |0004: if-lt v0, v4, 0007 // +0003
mark pos is e : 7 ==
mark pos is c : 6 ==
0024ac: 0f01                                   |0006: return v1
mark pos is e : 7 ==
0024ae: 6e20 4b00 0500                         |0007: invoke-virtual {v5, v0}, method@004b
mark pos is 14 : a ==
0024b4: 0a02                                   |000a: move-result v2
0024b6: 6e20 5000 0500                         |000b: invoke-virtual {v5, v0}, method@0050
mark pos is 1c : e ==
0024bc: 0a03                                   |000e: move-result v3
0024be: 3732 0600                              |000f: if-le v2, v3, 0015 // +0006
mark pos is 2a : 15 ==
mark pos is 22 : 11 ==
0024c2: b031                                   |0011: add-int/2addr v1, v3
0024c4: d800 0001                              |0012: add-int/lit8 v0, v0, #int 1 // #01
0024c8: 28ee                                   |0014: goto 0002 // -0012
mark pos is 4 : 2 ==
mark pos is 2a : 15 ==
0024ca: b021                                   |0015: add-int/2addr v1, v2
0024cc: 28fc                                   |0016: goto 0012 // -0004
mark pos is 24 : 12 ==
[[[[[[[[[[ code 65 ]]]]]]]]]]
~~~~~~codeoffset=0x24d0; insns off=0x24e0;registers is 3;insns size is 6~~~~~~~~
0024e0: 3802 0400                              |0000: if-eqz v2, 0004 // +0004
mark pos is 8 : 4 ==
mark pos is 4 : 2 ==
0024e4: 5912 2100                              |0002: iput v2, v1,field@0021
0024e8: 1210                                   |0004: const/4 v0, #int 1 // #1
0024ea: 0f00                                   |0005: return v0
[[[[[[[[[[ code 66 ]]]]]]]]]]
~~~~~~codeoffset=0x24ec; insns off=0x24fc;registers is 6;insns size is 35~~~~~~~~
0024fc: 1213                                   |0000: const/4 v3, #int 1 // #1
0024fe: 0150                                   |0001: move v0, v5
002500: 5242 2000                              |0002: iget v2, v4,field@0020
002504: d802 0201                              |0004: add-int/lit8 v2, v2, #int 1 // #01
002508: 5942 2000                              |0006: iput v2, v4,field@0020
00250c: 3905 0400                              |0008: if-nez v5, 000c // +0004
mark pos is 18 : c ==
mark pos is 14 : a ==
002510: 0101                                   |000a: move v1, v0
002512: 0f01                                   |000b: return v1
mark pos is 18 : c ==
002514: dd02 0001                              |000c: and-int/lit8 v2, v0, #int 1 // #01
002518: 3802 0b00                              |000e: if-eqz v2, 0019 // +000b
mark pos is 32 : 19 ==
mark pos is 20 : 10 ==
00251c: 9102 0503                              |0010: sub-int v2, v5, v3
002520: 6e20 5000 2400                         |0012: invoke-virtual {v4, v2}, method@0050
mark pos is 2a : 15 ==
002526: 0a02                                   |0015: move-result v2
002528: b020                                   |0016: add-int/2addr v0, v2
00252a: 0101                                   |0017: move v1, v0
00252c: 28f3                                   |0018: goto 000b // -000d
mark pos is 16 : b ==
mark pos is 32 : 19 ==
00252e: 9102 0503                              |0019: sub-int v2, v5, v3
002532: 6e20 5000 2400                         |001b: invoke-virtual {v4, v2}, method@0050
mark pos is 3c : 1e ==
002538: 0a02                                   |001e: move-result v2
00253a: d802 0201                              |001f: add-int/lit8 v2, v2, #int 1 // #01
00253e: b020                                   |0021: add-int/2addr v0, v2
002540: 28f5                                   |0022: goto 0017 // -000b
mark pos is 2e : 17 ==
[[[[[[[[[[ code 67 ]]]]]]]]]]
~~~~~~codeoffset=0x2544; insns off=0x2554;registers is 1;insns size is 1~~~~~~~~
002554: 0e00                                   |0000: return-void
[[[[[[[[[[ code 68 ]]]]]]]]]]
~~~~~~codeoffset=0x2558; insns off=0x2568;registers is 1;insns size is 1~~~~~~~~
002568: 0e00                                   |0000: return-void
[[[[[[[[[[ code 69 ]]]]]]]]]]
~~~~~~codeoffset=0x256c; insns off=0x257c;registers is 3;insns size is 8~~~~~~~~
00257c: 2200 2700                              |0000: new-instance v0,class@0027
002580: 1a01 5a00                              |0002: const-string v1, string@005a
002584: 7020 7900 1000                         |0004: invoke-direct {v0, v1}, method@0079
mark pos is e : 7 ==
00258a: 1100                                   |0007: return-object v0
[[[[[[[[[[ code 70 ]]]]]]]]]]
~~~~~~codeoffset=0x258c; insns off=0x259c;registers is 1;insns size is 4~~~~~~~~
00259c: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
mark pos is 6 : 3 ==
0025a2: 0e00                                   |0003: return-void
[[[[[[[[[[ code 71 ]]]]]]]]]]
~~~~~~codeoffset=0x25a4; insns off=0x25b4;registers is 1;insns size is 4~~~~~~~~
0025b4: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
mark pos is 6 : 3 ==
0025ba: 0e00                                   |0003: return-void
[[[[[[[[[[ code 72 ]]]]]]]]]]
~~~~~~codeoffset=0x25bc; insns off=0x25cc;registers is 1;insns size is 4~~~~~~~~
0025cc: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
mark pos is 6 : 3 ==
0025d2: 0e00                                   |0003: return-void
[[[[[[[[[[ code 73 ]]]]]]]]]]
~~~~~~codeoffset=0x25d4; insns off=0x25e4;registers is 1;insns size is 4~~~~~~~~
0025e4: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
mark pos is 6 : 3 ==
0025ea: 0e00                                   |0003: return-void
[[[[[[[[[[ code 74 ]]]]]]]]]]
~~~~~~codeoffset=0x25ec; insns off=0x25fc;registers is 1;insns size is 4~~~~~~~~
0025fc: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
mark pos is 6 : 3 ==
002602: 0e00                                   |0003: return-void
[[[[[[[[[[ code 75 ]]]]]]]]]]
~~~~~~codeoffset=0x2604; insns off=0x2614;registers is 2;insns size is 8~~~~~~~~
002614: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
mark pos is 6 : 3 ==
00261a: 1300 0002                              |0003: const/16 v0, #int 512 // #200
00261e: 5910 2600                              |0005: iput v0, v1,field@0026
002622: 0e00                                   |0007: return-void
[[[[[[[[[[ code 76 ]]]]]]]]]]
~~~~~~codeoffset=0x2624; insns off=0x2634;registers is 2;insns size is 2~~~~~~~~
002634: 1200                                   |0000: const/4 v0, #int 0 // #0
002636: 0f00                                   |0001: return v0
[[[[[[[[[[ code 77 ]]]]]]]]]]
~~~~~~codeoffset=0x2638; insns off=0x2648;registers is 2;insns size is 3~~~~~~~~
002648: 1300 d30a                              |0000: const/16 v0, #int 2771 // #ad3
00264c: 0f00                                   |0002: return v0
[[[[[[[[[[ code 78 ]]]]]]]]]]
~~~~~~codeoffset=0x2650; insns off=0x2660;registers is 9;insns size is 65~~~~~~~~
002660: 1217                                   |0000: const/4 v7, #int 1 // #1
002662: 1213                                   |0001: const/4 v3, #int 1 // #1
002664: 1201                                   |0002: const/4 v1, #int 0 // #0
002666: 5485 2700                              |0003: iget-object v5, v8,field@0027
00266a: 1206                                   |0005: const/4 v6, #int 0 // #0
00266c: 4b07 0506                              |0006: aput v7, v5, v6
002670: 5485 2700                              |0008: iget-object v5, v8,field@0027
002674: 1226                                   |000a: const/4 v6, #int 2 // #2
002676: 4b06 0507                              |000b: aput v6, v5, v7
00267a: 1223                                   |000d: const/4 v3, #int 2 // #2
00267c: 1232                                   |000e: const/4 v2, #int 3 // #3
00267e: 5285 2600                              |000f: iget v5, v8,field@0026
002682: 3452 0300                              |0011: if-lt v2, v5, 0014 // +0003
mark pos is 28 : 14 ==
mark pos is 26 : 13 ==
002686: 0f03                                   |0013: return v3
mark pos is 28 : 14 ==
002688: 1214                                   |0014: const/4 v4, #int 1 // #1
00268a: 1210                                   |0015: const/4 v0, #int 1 // #1
00268c: 3534 0400                              |0016: if-ge v4, v3, 001a // +0004
mark pos is 34 : 1a ==
mark pos is 30 : 18 ==
002690: 3900 0f00                              |0018: if-nez v0, 0027 // +000f
mark pos is 4e : 27 ==
mark pos is 34 : 1a ==
002694: 3800 0a00                              |001a: if-eqz v0, 0024 // +000a
mark pos is 48 : 24 ==
mark pos is 38 : 1c ==
002698: d803 0301                              |001c: add-int/lit8 v3, v3, #int 1 // #01
00269c: 5485 2700                              |001e: iget-object v5, v8,field@0027
0026a0: 9106 0307                              |0020: sub-int v6, v3, v7
0026a4: 4b02 0506                              |0022: aput v2, v5, v6
0026a8: d802 0201                              |0024: add-int/lit8 v2, v2, #int 1 // #01
0026ac: 28e9                                   |0026: goto 000f // -0017
mark pos is 1e : f ==
mark pos is 4e : 27 ==
0026ae: 5485 2700                              |0027: iget-object v5, v8,field@0027
0026b2: 4405 0504                              |0029: aget v5, v5, v4
0026b6: 3d05 1300                              |002b: if-lez v5, 003e // +0013
mark pos is 7c : 3e ==
mark pos is 5a : 2d ==
0026ba: 5485 2700                              |002d: iget-object v5, v8,field@0027
0026be: 4405 0504                              |002f: aget v5, v5, v4
0026c2: db06 0202                              |0031: div-int/lit8 v6, v2, #int 2 // #02
0026c6: 3665 0b00                              |0033: if-gt v5, v6, 003e // +000b
mark pos is 7c : 3e ==
mark pos is 6a : 35 ==
0026ca: 5485 2700                              |0035: iget-object v5, v8,field@0027
0026ce: 4405 0504                              |0037: aget v5, v5, v4
0026d2: 9405 0205                              |0039: rem-int v5, v2, v5
0026d6: 3905 0300                              |003b: if-nez v5, 003e // +0003
mark pos is 7c : 3e ==
mark pos is 7a : 3d ==
0026da: 1200                                   |003d: const/4 v0, #int 0 // #0
0026dc: d804 0401                              |003e: add-int/lit8 v4, v4, #int 1 // #01
0026e0: 28d6                                   |0040: goto 0016 // -002a
mark pos is 2c : 16 ==
[[[[[[[[[[ code 79 ]]]]]]]]]]
~~~~~~codeoffset=0x26e4; insns off=0x26f4;registers is 3;insns size is 12~~~~~~~~
0026f4: 3802 0400                              |0000: if-eqz v2, 0004 // +0004
mark pos is 8 : 4 ==
mark pos is 4 : 2 ==
0026f8: 5912 2600                              |0002: iput v2, v1,field@0026
0026fc: 5210 2600                              |0004: iget v0, v1,field@0026
002700: 2300 3100                              |0006: new-array v0, v0, class@0031
002704: 5b10 2700                              |0008: iput-object v0, v1,field@0027
002708: 1210                                   |000a: const/4 v0, #int 1 // #1
00270a: 0f00                                   |000b: return v0
[[[[[[[[[[ code 80 ]]]]]]]]]]
~~~~~~codeoffset=0x270c; insns off=0x271c;registers is 1;insns size is 1~~~~~~~~
00271c: 0e00                                   |0000: return-void
[[[[[[[[[[ code 81 ]]]]]]]]]]
~~~~~~codeoffset=0x2720; insns off=0x2730;registers is 1;insns size is 1~~~~~~~~
002730: 0e00                                   |0000: return-void
[[[[[[[[[[ code 82 ]]]]]]]]]]
~~~~~~codeoffset=0x2734; insns off=0x2744;registers is 3;insns size is 8~~~~~~~~
002744: 2200 2700                              |0000: new-instance v0,class@0027
002748: 1a01 6000                              |0002: const-string v1, string@0060
00274c: 7020 7900 1000                         |0004: invoke-direct {v0, v1}, method@0079
mark pos is e : 7 ==
002752: 1100                                   |0007: return-object v0
[[[[[[[[[[ code 83 ]]]]]]]]]]
~~~~~~codeoffset=0x2754; insns off=0x2764;registers is 3;insns size is 13~~~~~~~~
002764: 1600 0000                              |0000: const-wide/16 v0, #int 0 // #0
002768: 7010 7800 0200                         |0002: invoke-direct {v2}, method@0078
mark pos is a : 5 ==
00276e: 5a20 2900                              |0005: iput-wide v0, v2,field@0029
002772: 5a20 2a00                              |0007: iput-wide v0, v2,field@002a
002776: 1200                                   |0009: const/4 v0, #int 0 // #0
002778: 5c20 2800                              |000a: iput-boolean v0, v2,field@0028
00277c: 0e00                                   |000c: return-void
[[[[[[[[[[ code 84 ]]]]]]]]]]
~~~~~~codeoffset=0x2780; insns off=0x2790;registers is 3;insns size is 8~~~~~~~~
002790: 6e10 6500 0200                         |0000: invoke-virtual {v2}, method@0065
mark pos is 6 : 3 ==
002796: 5320 2a00                              |0003: iget-wide v0, v2,field@002a
00279a: 5a20 2900                              |0005: iput-wide v0, v2,field@0029
00279e: 0e00                                   |0007: return-void
[[[[[[[[[[ code 85 ]]]]]]]]]]
~~~~~~codeoffset=0x27a0; insns off=0x27b0;registers is 6;insns size is 21~~~~~~~~
0027b0: 5551 2800                              |0000: iget-boolean v1, v5,field@0028
0027b4: 3801 0d00                              |0002: if-eqz v1, 000f // +000d
mark pos is 1e : f ==
mark pos is 8 : 4 ==
0027b8: 2200 2d00                              |0004: new-instance v0,class@002d
0027bc: 7010 8800 0000                         |0006: invoke-direct {v0}, method@0088
mark pos is 12 : 9 ==
0027c2: 6e10 8900 0000                         |0009: invoke-virtual {v0}, method@0089
mark pos is 18 : c ==
0027c8: 0b01                                   |000c: move-result-wide v1
0027ca: 5a51 2a00                              |000d: iput-wide v1, v5,field@002a
0027ce: 5351 2a00                              |000f: iget-wide v1, v5,field@002a
0027d2: 5353 2900                              |0011: iget-wide v3, v5,field@0029
0027d6: bc31                                   |0013: sub-long/2addr v1, v3
0027d8: 1001                                   |0014: return-wide v1
[[[[[[[[[[ code 86 ]]]]]]]]]]
~~~~~~codeoffset=0x27dc; insns off=0x27ec;registers is 4;insns size is 23~~~~~~~~
0027ec: 5531 2800                              |0000: iget-boolean v1, v3,field@0028
0027f0: 3901 1400                              |0002: if-nez v1, 0016 // +0014
mark pos is 2c : 16 ==
mark pos is 8 : 4 ==
0027f4: 1211                                   |0004: const/4 v1, #int 1 // #1
0027f6: 5c31 2800                              |0005: iput-boolean v1, v3,field@0028
0027fa: 2200 2d00                              |0007: new-instance v0,class@002d
0027fe: 7010 8800 0000                         |0009: invoke-direct {v0}, method@0088
mark pos is 18 : c ==
002804: 6e10 8900 0000                         |000c: invoke-virtual {v0}, method@0089
mark pos is 1e : f ==
00280a: 0b01                                   |000f: move-result-wide v1
00280c: 5a31 2900                              |0010: iput-wide v1, v3,field@0029
002810: 5331 2900                              |0012: iget-wide v1, v3,field@0029
002814: 5a31 2a00                              |0014: iput-wide v1, v3,field@002a
002818: 0e00                                   |0016: return-void
[[[[[[[[[[ code 87 ]]]]]]]]]]
~~~~~~codeoffset=0x281c; insns off=0x282c;registers is 4;insns size is 19~~~~~~~~
00282c: 5531 2800                              |0000: iget-boolean v1, v3,field@0028
002830: 3801 1000                              |0002: if-eqz v1, 0012 // +0010
mark pos is 24 : 12 ==
mark pos is 8 : 4 ==
002834: 1201                                   |0004: const/4 v1, #int 0 // #0
002836: 5c31 2800                              |0005: iput-boolean v1, v3,field@0028
00283a: 2200 2d00                              |0007: new-instance v0,class@002d
00283e: 7010 8800 0000                         |0009: invoke-direct {v0}, method@0088
mark pos is 18 : c ==
002844: 6e10 8900 0000                         |000c: invoke-virtual {v0}, method@0089
mark pos is 1e : f ==
00284a: 0b01                                   |000f: move-result-wide v1
00284c: 5a31 2a00                              |0010: iput-wide v1, v3,field@002a
002850: 0e00                                   |0012: return-void
[[[[[[[[[[ code 88 ]]]]]]]]]]
~~~~~~codeoffset=0x2854; insns off=0x2864;registers is 2;insns size is 8~~~~~~~~
002864: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
mark pos is 6 : 3 ==
00286a: 1300 3200                              |0003: const/16 v0, #int 50 // #32
00286e: 5910 2e00                              |0005: iput v0, v1,field@002e
002872: 0e00                                   |0007: return-void
[[[[[[[[[[ code 89 ]]]]]]]]]]
~~~~~~codeoffset=0x2874; insns off=0x2884;registers is 2;insns size is 2~~~~~~~~
002884: 1200                                   |0000: const/4 v0, #int 0 // #0
002886: 0f00                                   |0001: return v0
[[[[[[[[[[ code 90 ]]]]]]]]]]
~~~~~~codeoffset=0x2888; insns off=0x2898;registers is 2;insns size is 3~~~~~~~~
002898: 1300 d30a                              |0000: const/16 v0, #int 2771 // #ad3
00289c: 0f00                                   |0002: return v0
[[[[[[[[[[ code 91 ]]]]]]]]]]
~~~~~~codeoffset=0x28a0; insns off=0x28b0;registers is 7;insns size is 63~~~~~~~~
0028b0: 1a05 a800                              |0000: const-string v5, string@00a8
0028b4: 2202 2800                              |0002: new-instance v2,class@0028
0028b8: 1a03 6a00                              |0004: const-string v3, string@006a
0028bc: 7020 7b00 3200                         |0006: invoke-direct {v2, v3}, method@007b
mark pos is 12 : 9 ==
0028c2: 1200                                   |0009: const/4 v0, #int 0 // #0
0028c4: 5263 2e00                              |000a: iget v3, v6,field@002e
0028c8: 3430 1100                              |000c: if-lt v0, v3, 001d // +0011
mark pos is 3a : 1d ==
mark pos is 1c : e ==
0028cc: 1a03 a800                              |000e: const-string v3, string@00a8
0028d0: 6e20 7c00 5200                         |0010: invoke-virtual {v2, v5}, method@007c
mark pos is 26 : 13 ==
0028d6: 1201                                   |0013: const/4 v1, #int 0 // #0
0028d8: 5263 2e00                              |0014: iget v3, v6,field@002e
0028dc: 3431 1b00                              |0016: if-lt v1, v3, 0031 // +001b
mark pos is 62 : 31 ==
mark pos is 30 : 18 ==
0028e0: 6e10 7d00 0200                         |0018: invoke-virtual {v2}, method@007d
mark pos is 36 : 1b ==
0028e6: 0a03                                   |001b: move-result v3
0028e8: 0f03                                   |001c: return v3
mark pos is 3a : 1d ==
0028ea: 5463 2b00                              |001d: iget-object v3, v6,field@002b
0028ee: 6e20 7c00 3200                         |001f: invoke-virtual {v2, v3}, method@007c
mark pos is 44 : 22 ==
0028f4: 0c03                                   |0022: move-result-object v3
0028f6: 5464 2c00                              |0023: iget-object v4, v6,field@002c
0028fa: 6e20 7c00 4300                         |0025: invoke-virtual {v3, v4}, method@007c
mark pos is 50 : 28 ==
002900: 0c03                                   |0028: move-result-object v3
002902: 5464 2d00                              |0029: iget-object v4, v6,field@002d
002906: 6e20 7c00 4300                         |002b: invoke-virtual {v3, v4}, method@007c
mark pos is 5c : 2e ==
00290c: d800 0001                              |002e: add-int/lit8 v0, v0, #int 1 // #01
002910: 28da                                   |0030: goto 000a // -0026
mark pos is 14 : a ==
mark pos is 62 : 31 ==
002912: 6e10 7e00 0200                         |0031: invoke-virtual {v2}, method@007e
mark pos is 68 : 34 ==
002918: 0c03                                   |0034: move-result-object v3
00291a: 1a04 a800                              |0035: const-string v4, string@00a8
00291e: da04 0141                              |0037: mul-int/lit8 v4, v1, #int 65 // #41
002922: 6e30 7a00 5304                         |0039: invoke-virtual {v3, v5, v4}, method@007a
mark pos is 78 : 3c ==
002928: d801 0101                              |003c: add-int/lit8 v1, v1, #int 1 // #01
00292c: 28d6                                   |003e: goto 0014 // -002a
mark pos is 28 : 14 ==
[[[[[[[[[[ code 92 ]]]]]]]]]]
~~~~~~codeoffset=0x2930; insns off=0x2940;registers is 3;insns size is 18~~~~~~~~
002940: 3802 0400                              |0000: if-eqz v2, 0004 // +0004
mark pos is 8 : 4 ==
mark pos is 4 : 2 ==
002944: 5912 2e00                              |0002: iput v2, v1,field@002e
002948: 1a00 d100                              |0004: const-string v0, string@00d1
00294c: 5b10 2b00                              |0006: iput-object v0, v1,field@002b
002950: 1a00 f700                              |0008: const-string v0, string@00f7
002954: 5b10 2c00                              |000a: iput-object v0, v1,field@002c
002958: 1a00 f300                              |000c: const-string v0, string@00f3
00295c: 5b10 2d00                              |000e: iput-object v0, v1,field@002d
002960: 1210                                   |0010: const/4 v0, #int 1 // #1
002962: 0f00                                   |0011: return v0
[[[[[[[[[[ code 93 ]]]]]]]]]]
~~~~~~codeoffset=0x2964; insns off=0x2974;registers is 1;insns size is 1~~~~~~~~
002974: 0e00                                   |0000: return-void
[[[[[[[[[[ code 94 ]]]]]]]]]]
~~~~~~codeoffset=0x2978; insns off=0x2988;registers is 1;insns size is 1~~~~~~~~
002988: 0e00                                   |0000: return-void
[[[[[[[[[[ code 95 ]]]]]]]]]]
~~~~~~codeoffset=0x298c; insns off=0x299c;registers is 3;insns size is 8~~~~~~~~
00299c: 2200 2700                              |0000: new-instance v0,class@0027
0029a0: 1a01 6600                              |0002: const-string v1, string@0066
0029a4: 7020 7900 1000                         |0004: invoke-direct {v0, v1}, method@0079
mark pos is e : 7 ==
0029aa: 1100                                   |0007: return-object v0
begin to process BB!
<<<<<<<<<<< code 0  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0xf78; insns off=0xf88;registers is 1;insns size is 5~~~~~~~~

==!
000f88: 1300 e803                              |0000: const/16 v0, #int 1000 // #3e8
000f8c: 6700 0400                              |0002: sput v0,field@0004
000f90: 0e00                                   |0004: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 4 
count insns of BB is 2 
========================
=::== -----------------------
=::==   000f88: 1300 e803                              |0000: const/16 v0, #int 1000 // #3e8
=::==   000f8c: 6700 0400                              |0002: sput v0,field@0004
=::= -----------------------
BB startOffset is : 0xf88<<<<<<<<<<< code 1  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0xf94; insns off=0xfa4;registers is 3;insns size is 16~~~~~~~~

==!
000fa4: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
000faa: 1300 e803                              |0003: const/16 v0, #int 1000 // #3e8
000fae: 5910 0200                              |0005: iput v0, v1,field@0002
000fb2: 5b12 0300                              |0007: iput-object v2, v1,field@0003
000fb6: 7210 0600 0200                         |0009: invoke-interface {v2}, method@0006
000fbc: 0a00                                   |000c: move-result v0
000fbe: 5910 0200                              |000d: iput v0, v1,field@0002
000fc2: 0e00                                   |000f: return-void
BB begin is :  6--3   18--c  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 9 
count insns of BB is 3 
========================
=::== -----------------------
=::==   000faa: 1300 e803                              |0003: const/16 v0, #int 1000 // #3e8
=::==   000fae: 5910 0200                              |0005: iput v0, v1,field@0002
=::==   000fb2: 5b12 0300                              |0007: iput-object v2, v1,field@0003
=::= -----------------------
BB startOffset is : 0xfaaend with jump
start of BB is c, 
before end of BB is f 
count insns of BB is 2 
========================
=::== -----------------------
=::==   000fbc: 0a00                                   |000c: move-result v0
=::==   000fbe: 5910 0200                              |000d: iput v0, v1,field@0002
=::= -----------------------
BB startOffset is : 0xfbc<<<<<<<<<<< code 2  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0xfc4; insns off=0xfd4;registers is 5;insns size is 25~~~~~~~~

==!
000fd4: 6e10 1000 0400                         |0000: invoke-virtual {v4}, method@0010
000fda: 0a00                                   |0003: move-result v0
000fdc: 3900 0300                              |0004: if-nez v0, 0007 // +0003
000fe0: 0e00                                   |0006: return-void
000fe2: 6e20 1300 0400                         |0007: invoke-virtual {v4, v0}, method@0013
000fe8: 0a01                                   |000a: move-result v1
000fea: 3801 0a00                              |000b: if-eqz v1, 0015 // +000a
000fee: da02 0164                              |000d: mul-int/lit8 v2, v1, #int 100 // #64
000ff2: da03 0003                              |000f: mul-int/lit8 v3, v0, #int 3 // #03
000ff6: b332                                   |0011: div-int/2addr v2, v3
000ff8: 5942 0200                              |0012: iput v2, v4,field@0002
000ffc: 28f2                                   |0014: goto 0006 // -000e
000ffe: 1202                                   |0015: const/4 v2, #int 0 // #0
001000: 5942 0200                              |0016: iput v2, v4,field@0002
001004: 28ee                                   |0018: goto 0006 // -0012
BB begin is :  6--3   c--6   e--7   14--a   1a--d   2a--15  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 4 
count insns of BB is 1 
========================
end with jump
start of BB is 6, 
before end of BB is 6 
count insns of BB is 0 
========================
end with jump
start of BB is 7, 
before end of BB is 7 
count insns of BB is 0 
========================
end with jump
start of BB is a, 
before end of BB is b 
count insns of BB is 1 
========================
end with jump
start of BB is d, 
before end of BB is 14 
count insns of BB is 4 
========================
=::== -----------------------
=::==   000fee: da02 0164                              |000d: mul-int/lit8 v2, v1, #int 100 // #64
=::==   000ff2: da03 0003                              |000f: mul-int/lit8 v3, v0, #int 3 // #03
=::==   000ff6: b332                                   |0011: div-int/2addr v2, v3
=::==   000ff8: 5942 0200                              |0012: iput v2, v4,field@0002
=::= -----------------------
BB startOffset is : 0xfeeend with jump
start of BB is 15, 
before end of BB is 18 
count insns of BB is 2 
========================
=::== -----------------------
=::==   000ffe: 1202                                   |0015: const/4 v2, #int 0 // #0
=::==   001000: 5942 0200                              |0016: iput v2, v4,field@0002
=::= -----------------------
BB startOffset is : 0xffe<<<<<<<<<<< code 3  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1008; insns off=0x1018;registers is 7;insns size is 52~~~~~~~~

==!
001018: 1203                                   |0000: const/4 v3, #int 0 // #0
00101a: 1200                                   |0001: const/4 v0, #int 0 // #0
00101c: 2201 1b00                              |0002: new-instance v1,class@001b
001020: 7010 6100 0100                         |0004: invoke-direct {v1}, method@0061
001026: 5462 0300                              |0007: iget-object v2, v6,field@0003
00102a: 7220 0800 3200                         |0009: invoke-interface {v2, v3}, method@0008
001030: 0a02                                   |000c: move-result v2
001032: 3902 0400                              |000d: if-nez v2, 0011 // +0004
001036: 0132                                   |000f: move v2, v3
001038: 0f02                                   |0010: return v2
00103a: 6e10 6400 0100                         |0011: invoke-virtual {v1}, method@0064
001040: 6e10 6300 0100                         |0014: invoke-virtual {v1}, method@0063
001046: 0b02                                   |0017: move-result-wide v2
001048: 6004 0400                              |0018: sget v4,field@0004
00104c: 8144                                   |001a: int-to-long v4, v4
00104e: 3102 0204                              |001b: cmp-long v2, v2, v4
001052: 3a02 0c00                              |001d: if-ltz v2, 0029 // +000c
001056: 6e10 6500 0100                         |001f: invoke-virtual {v1}, method@0065
00105c: 5462 0300                              |0022: iget-object v2, v6,field@0003
001060: 7210 0500 0200                         |0024: invoke-interface {v2}, method@0005
001066: 0102                                   |0027: move v2, v0
001068: 28e8                                   |0028: goto 0010 // -0018
00106a: d800 0001                              |0029: add-int/lit8 v0, v0, #int 1 // #01
00106e: 5462 0300                              |002b: iget-object v2, v6,field@0003
001072: 7210 0700 0200                         |002d: invoke-interface {v2}, method@0007
001078: 0a02                                   |0030: move-result v2
00107a: 5962 0000                              |0031: iput v2, v6,field@0000
00107e: 28e1                                   |0033: goto 0014 // -001f
BB begin is :  e--7   18--c   1e--f   20--10   22--11   28--14   2e--17   3e--1f   44--22   4e--27   52--29   60--30  
start add mir ,first is 0 ; second is 7!
end with jump
start of BB is 0, 
before end of BB is 4 
count insns of BB is 3 
========================
=::== -----------------------
=::==   001018: 1203                                   |0000: const/4 v3, #int 0 // #0
=::==   00101a: 1200                                   |0001: const/4 v0, #int 0 // #0
=::==   00101c: 2201 1b00                              |0002: new-instance v1,class@001b
=::= -----------------------
BB startOffset is : 0x1018end with jump
start of BB is 7, 
before end of BB is 9 
count insns of BB is 1 
========================
end with jump
start of BB is c, 
before end of BB is d 
count insns of BB is 1 
========================
end with jump
start of BB is f, 
before end of BB is 10 
count insns of BB is 1 
========================
end with jump
start of BB is 10, 
before end of BB is 10 
count insns of BB is 0 
========================
end with jump
start of BB is 11, 
before end of BB is 11 
count insns of BB is 0 
========================
end with jump
start of BB is 14, 
before end of BB is 14 
count insns of BB is 0 
========================
end with jump
start of BB is 17, 
before end of BB is 1d 
count insns of BB is 4 
========================
=::== -----------------------
=::==   001046: 0b02                                   |0017: move-result-wide v2
=::==   001048: 6004 0400                              |0018: sget v4,field@0004
=::==   00104c: 8144                                   |001a: int-to-long v4, v4
=::==   00104e: 3102 0204                              |001b: cmp-long v2, v2, v4
=::= -----------------------
BB startOffset is : 0x1046end with jump
start of BB is 1f, 
before end of BB is 1f 
count insns of BB is 0 
========================
end with jump
start of BB is 22, 
before end of BB is 24 
count insns of BB is 1 
========================
end with jump
start of BB is 27, 
before end of BB is 28 
count insns of BB is 1 
========================
end with jump
start of BB is 29, 
before end of BB is 2d 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00106a: d800 0001                              |0029: add-int/lit8 v0, v0, #int 1 // #01
=::==   00106e: 5462 0300                              |002b: iget-object v2, v6,field@0003
=::= -----------------------
BB startOffset is : 0x106aend with jump
start of BB is 30, 
before end of BB is 33 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001078: 0a02                                   |0030: move-result v2
=::==   00107a: 5962 0000                              |0031: iput v2, v6,field@0000
=::= -----------------------
BB startOffset is : 0x1078<<<<<<<<<<< code 4  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1080; insns off=0x1090;registers is 2;insns size is 6~~~~~~~~

==!
001090: 5410 0300                              |0000: iget-object v0, v1,field@0003
001094: 7210 0900 0000                         |0002: invoke-interface {v0}, method@0009
00109a: 0e00                                   |0005: return-void
BB begin is :  a--5  
start add mir ,first is 0 ; second is 5!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
end with jump
start of BB is 5, 
before end of BB is 5 
count insns of BB is 0 
========================
<<<<<<<<<<< code 5  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x109c; insns off=0x10ac;registers is 2;insns size is 6~~~~~~~~

==!
0010ac: 5410 0300                              |0000: iget-object v0, v1,field@0003
0010b0: 7210 0a00 0000                         |0002: invoke-interface {v0}, method@000a
0010b6: 0e00                                   |0005: return-void
BB begin is :  a--5  
start add mir ,first is 0 ; second is 5!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
end with jump
start of BB is 5, 
before end of BB is 5 
count insns of BB is 0 
========================
<<<<<<<<<<< code 6  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x10b8; insns off=0x10c8;registers is 7;insns size is 52~~~~~~~~

==!
0010c8: 1204                                   |0000: const/4 v4, #int 0 // #0
0010ca: 1200                                   |0001: const/4 v0, #int 0 // #0
0010cc: 5453 0300                              |0002: iget-object v3, v5,field@0003
0010d0: 7220 0800 4300                         |0004: invoke-interface {v3, v4}, method@0008
0010d6: 0a03                                   |0007: move-result v3
0010d8: 3903 0400                              |0008: if-nez v3, 000c // +0004
0010dc: 0143                                   |000a: move v3, v4
0010de: 0f03                                   |000b: return v3
0010e0: 2202 1b00                              |000c: new-instance v2,class@001b
0010e4: 7010 6100 0200                         |000e: invoke-direct {v2}, method@0061
0010ea: 6e10 6400 0200                         |0011: invoke-virtual {v2}, method@0064
0010f0: da01 0603                              |0014: mul-int/lit8 v1, v6, #int 3 // #03
0010f4: 1200                                   |0016: const/4 v0, #int 0 // #0
0010f6: 3c01 1000                              |0017: if-gtz v1, 0027 // +0010
0010fa: 6e10 6500 0200                         |0019: invoke-virtual {v2}, method@0065
001100: 5453 0300                              |001c: iget-object v3, v5,field@0003
001104: 7210 0500 0300                         |001e: invoke-interface {v3}, method@0005
00110a: 6e10 6300 0200                         |0021: invoke-virtual {v2}, method@0063
001110: 0b03                                   |0024: move-result-wide v3
001112: 8433                                   |0025: long-to-int v3, v3
001114: 28e5                                   |0026: goto 000b // -001b
001116: d801 01ff                              |0027: add-int/lit8 v1, v1, #int -1 // #ff
00111a: d800 0001                              |0029: add-int/lit8 v0, v0, #int 1 // #01
00111e: 5453 0300                              |002b: iget-object v3, v5,field@0003
001122: 7210 0700 0300                         |002d: invoke-interface {v3}, method@0007
001128: 0a03                                   |0030: move-result v3
00112a: 5953 0000                              |0031: iput v3, v5,field@0000
00112e: 28e4                                   |0033: goto 0017 // -001c
BB begin is :  e--7   14--a   16--b   18--c   22--11   28--14   2e--17   32--19   38--1c   42--21   48--24   4e--27   60--30  
start add mir ,first is 0 ; second is 7!
end with jump
start of BB is 0, 
before end of BB is 4 
count insns of BB is 3 
========================
=::== -----------------------
=::==   0010c8: 1204                                   |0000: const/4 v4, #int 0 // #0
=::==   0010ca: 1200                                   |0001: const/4 v0, #int 0 // #0
=::==   0010cc: 5453 0300                              |0002: iget-object v3, v5,field@0003
=::= -----------------------
BB startOffset is : 0x10c8end with jump
start of BB is 7, 
before end of BB is 8 
count insns of BB is 1 
========================
end with jump
start of BB is a, 
before end of BB is b 
count insns of BB is 1 
========================
end with jump
start of BB is b, 
before end of BB is b 
count insns of BB is 0 
========================
end with jump
start of BB is c, 
before end of BB is e 
count insns of BB is 1 
========================
end with jump
start of BB is 11, 
before end of BB is 11 
count insns of BB is 0 
========================
end with jump
start of BB is 14, 
before end of BB is 17 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0010f0: da01 0603                              |0014: mul-int/lit8 v1, v6, #int 3 // #03
=::==   0010f4: 1200                                   |0016: const/4 v0, #int 0 // #0
=::= -----------------------
BB startOffset is : 0x10f0end with jump
start of BB is 17, 
before end of BB is 17 
count insns of BB is 0 
========================
end with jump
start of BB is 19, 
before end of BB is 19 
count insns of BB is 0 
========================
end with jump
start of BB is 1c, 
before end of BB is 1e 
count insns of BB is 1 
========================
end with jump
start of BB is 21, 
before end of BB is 21 
count insns of BB is 0 
========================
end with jump
start of BB is 24, 
before end of BB is 26 
count insns of BB is 2 
========================
end with jump
start of BB is 27, 
before end of BB is 2d 
count insns of BB is 3 
========================
=::== -----------------------
=::==   001116: d801 01ff                              |0027: add-int/lit8 v1, v1, #int -1 // #ff
=::==   00111a: d800 0001                              |0029: add-int/lit8 v0, v0, #int 1 // #01
=::==   00111e: 5453 0300                              |002b: iget-object v3, v5,field@0003
=::= -----------------------
BB startOffset is : 0x1116end with jump
start of BB is 30, 
before end of BB is 33 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001128: 0a03                                   |0030: move-result v3
=::==   00112a: 5953 0000                              |0031: iput v3, v5,field@0000
=::= -----------------------
BB startOffset is : 0x1128<<<<<<<<<<< code 7  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1130; insns off=0x1140;registers is 2;insns size is 7~~~~~~~~

==!
001140: 5410 0300                              |0000: iget-object v0, v1,field@0003
001144: 7210 0b00 0000                         |0002: invoke-interface {v0}, method@000b
00114a: 0c00                                   |0005: move-result-object v0
00114c: 1100                                   |0006: return-object v0
BB begin is :  a--5  
start add mir ,first is 0 ; second is 5!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
end with jump
start of BB is 5, 
before end of BB is 6 
count insns of BB is 1 
========================
<<<<<<<<<<< code 8  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1150; insns off=0x1160;registers is 5;insns size is 27~~~~~~~~

==!
001160: 1202                                   |0000: const/4 v2, #int 0 // #0
001162: 6e10 1000 0400                         |0001: invoke-virtual {v4}, method@0010
001168: 0a00                                   |0004: move-result v0
00116a: 3900 0500                              |0005: if-nez v0, 000a // +0005
00116e: 5942 0100                              |0007: iput v2, v4,field@0001
001172: 0f02                                   |0009: return v2
001174: 6e20 1300 0400                         |000a: invoke-virtual {v4, v0}, method@0013
00117a: 0a01                                   |000d: move-result v1
00117c: 3801 0900                              |000e: if-eqz v1, 0017 // +0009
001180: 5242 0200                              |0010: iget v2, v4,field@0002
001184: da03 0003                              |0012: mul-int/lit8 v3, v0, #int 3 // #03
001188: b232                                   |0014: mul-int/2addr v2, v3
00118a: 9301 0201                              |0015: div-int v1, v2, v1
00118e: 5941 0100                              |0017: iput v1, v4,field@0001
001192: 0112                                   |0019: move v2, v1
001194: 28ef                                   |001a: goto 0009 // -0011
BB begin is :  8--4   e--7   12--9   14--a   1a--d   20--10   2e--17  
start add mir ,first is 0 ; second is 4!
end with jump
start of BB is 0, 
before end of BB is 1 
count insns of BB is 1 
========================
end with jump
start of BB is 4, 
before end of BB is 5 
count insns of BB is 1 
========================
end with jump
start of BB is 7, 
before end of BB is 9 
count insns of BB is 1 
========================
end with jump
start of BB is 9, 
before end of BB is 9 
count insns of BB is 0 
========================
end with jump
start of BB is a, 
before end of BB is a 
count insns of BB is 0 
========================
end with jump
start of BB is d, 
before end of BB is e 
count insns of BB is 1 
========================
end with second!
start of BB is 10, 
before end of BB is 17 
count insns of BB is 4 
========================
=::== -----------------------
=::==   001180: 5242 0200                              |0010: iget v2, v4,field@0002
=::==   001184: da03 0003                              |0012: mul-int/lit8 v3, v0, #int 3 // #03
=::==   001188: b232                                   |0014: mul-int/2addr v2, v3
=::==   00118a: 9301 0201                              |0015: div-int v1, v2, v1
=::= -----------------------
BB startOffset is : 0x1180end with jump
start of BB is 17, 
before end of BB is 1a 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00118e: 5941 0100                              |0017: iput v1, v4,field@0001
=::==   001192: 0112                                   |0019: move v2, v1
=::= -----------------------
BB startOffset is : 0x118e<<<<<<<<<<< code 9  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1198; insns off=0x11a8;registers is 1;insns size is 4~~~~~~~~

==!
0011a8: 7010 0000 0000                         |0000: invoke-direct {v0}, method@0000
0011ae: 0e00                                   |0003: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 3 
count insns of BB is 0 
========================
<<<<<<<<<<< code 10  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x11b0; insns off=0x11c0;registers is 2;insns size is 1~~~~~~~~

==!
0011c0: 0e00                                   |0000: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
<<<<<<<<<<< code 11  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x11c4; insns off=0x11d4;registers is 7;insns size is 116~~~~~~~~

==!
0011d4: 6f20 0100 6500                         |0000: invoke-super {v5, v6}, method@0001
0011da: 2202 0800                              |0003: new-instance v2,class@0008
0011de: 7020 0200 5200                         |0005: invoke-direct {v2, v5}, method@0002
0011e4: 1a03 0b00                              |0008: const-string v3, string@000b
0011e8: 6e20 0400 3200                         |000a: invoke-virtual {v2, v3}, method@0004
0011ee: 2200 0d00                              |000d: new-instance v0,class@000d
0011f2: 7010 1b00 0000                         |000f: invoke-direct {v0}, method@001b
0011f8: 7100 2700 0000                         |0012: invoke-static {}, method@0027
0011fe: 7100 2400 0000                         |0015: invoke-static {}, method@0024
001204: 6e10 2300 0000                         |0018: invoke-virtual {v0}, method@0023
00120a: 1201                                   |001b: const/4 v1, #int 0 // #0
00120c: 7110 2100 0100                         |001c: invoke-static {v1}, method@0021
001212: 0c03                                   |001f: move-result-object v3
001214: 6e20 0300 3200                         |0020: invoke-virtual {v2, v3}, method@0003
00121a: 2203 2900                              |0023: new-instance v3,class@0029
00121e: 1a04 0200                              |0025: const-string v4, string@0002
001222: 7020 7f00 4300                         |0027: invoke-direct {v3, v4}, method@007f
001228: 7110 2200 0100                         |002a: invoke-static {v1}, method@0022
00122e: 0a04                                   |002d: move-result v4
001230: 6e20 8000 4300                         |002e: invoke-virtual {v3, v4}, method@0080
001236: 0c03                                   |0031: move-result-object v3
001238: 6e10 8300 0300                         |0032: invoke-virtual {v3}, method@0083
00123e: 0c03                                   |0035: move-result-object v3
001240: 6e20 0300 3200                         |0036: invoke-virtual {v2, v3}, method@0003
001246: 2203 2900                              |0039: new-instance v3,class@0029
00124a: 1a04 0100                              |003b: const-string v4, string@0001
00124e: 7020 7f00 4300                         |003d: invoke-direct {v3, v4}, method@007f
001254: 7110 2000 0100                         |0040: invoke-static {v1}, method@0020
00125a: 0a04                                   |0043: move-result v4
00125c: 6e20 8000 4300                         |0044: invoke-virtual {v3, v4}, method@0080
001262: 0c03                                   |0047: move-result-object v3
001264: 1a04 0300                              |0048: const-string v4, string@0003
001268: 6e20 8200 4300                         |004a: invoke-virtual {v3, v4}, method@0082
00126e: 0c03                                   |004d: move-result-object v3
001270: 6e10 8300 0300                         |004e: invoke-virtual {v3}, method@0083
001276: 0c03                                   |0051: move-result-object v3
001278: 6e20 0300 3200                         |0052: invoke-virtual {v2, v3}, method@0003
00127e: d801 0101                              |0055: add-int/lit8 v1, v1, #int 1 // #01
001282: 1253                                   |0057: const/4 v3, #int 5 // #5
001284: 3731 c4ff                              |0058: if-le v1, v3, 001c // -003c
001288: 2203 2900                              |005a: new-instance v3,class@0029
00128c: 1a04 0000                              |005c: const-string v4, string@0000
001290: 7020 7f00 4300                         |005e: invoke-direct {v3, v4}, method@007f
001296: 7100 1c00 0000                         |0061: invoke-static {}, method@001c
00129c: 0a04                                   |0064: move-result v4
00129e: 6e20 8000 4300                         |0065: invoke-virtual {v3, v4}, method@0080
0012a4: 0c03                                   |0068: move-result-object v3
0012a6: 6e10 8300 0300                         |0069: invoke-virtual {v3}, method@0083
0012ac: 0c03                                   |006c: move-result-object v3
0012ae: 6e20 0300 3200                         |006d: invoke-virtual {v2, v3}, method@0003
0012b4: 6e20 1900 2500                         |0070: invoke-virtual {v5, v2}, method@0019
0012ba: 0e00                                   |0073: return-void
BB begin is :  6--3   10--8   1a--d   24--12   2a--15   30--18   36--1b   38--1c   3e--1f   46--23   54--2a   5a--2d   62--31   6a--35   72--39   80--40   86--43   8e--47   9a--4d   a2--51   aa--55   b4--5a   c2--61   c8--64   d0--68   d8--6c   e0--70   e6--73  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 5 
count insns of BB is 1 
========================
end with jump
start of BB is 8, 
before end of BB is a 
count insns of BB is 1 
========================
end with jump
start of BB is d, 
before end of BB is f 
count insns of BB is 1 
========================
end with jump
start of BB is 12, 
before end of BB is 12 
count insns of BB is 0 
========================
end with jump
start of BB is 15, 
before end of BB is 15 
count insns of BB is 0 
========================
end with jump
start of BB is 18, 
before end of BB is 18 
count insns of BB is 0 
========================
end with jump
start of BB is 1b, 
before end of BB is 1c 
count insns of BB is 1 
========================
end with jump
start of BB is 1c, 
before end of BB is 1c 
count insns of BB is 0 
========================
end with jump
start of BB is 1f, 
before end of BB is 20 
count insns of BB is 1 
========================
end with jump
start of BB is 23, 
before end of BB is 27 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00121a: 2203 2900                              |0023: new-instance v3,class@0029
=::==   00121e: 1a04 0200                              |0025: const-string v4, string@0002
=::= -----------------------
BB startOffset is : 0x121aend with jump
start of BB is 2a, 
before end of BB is 2a 
count insns of BB is 0 
========================
end with jump
start of BB is 2d, 
before end of BB is 2e 
count insns of BB is 1 
========================
end with jump
start of BB is 31, 
before end of BB is 32 
count insns of BB is 1 
========================
end with jump
start of BB is 35, 
before end of BB is 36 
count insns of BB is 1 
========================
end with jump
start of BB is 39, 
before end of BB is 3d 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001246: 2203 2900                              |0039: new-instance v3,class@0029
=::==   00124a: 1a04 0100                              |003b: const-string v4, string@0001
=::= -----------------------
BB startOffset is : 0x1246end with jump
start of BB is 40, 
before end of BB is 40 
count insns of BB is 0 
========================
end with jump
start of BB is 43, 
before end of BB is 44 
count insns of BB is 1 
========================
end with jump
start of BB is 47, 
before end of BB is 4a 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001262: 0c03                                   |0047: move-result-object v3
=::==   001264: 1a04 0300                              |0048: const-string v4, string@0003
=::= -----------------------
BB startOffset is : 0x1262end with jump
start of BB is 4d, 
before end of BB is 4e 
count insns of BB is 1 
========================
end with jump
start of BB is 51, 
before end of BB is 52 
count insns of BB is 1 
========================
end with jump
start of BB is 55, 
before end of BB is 58 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00127e: d801 0101                              |0055: add-int/lit8 v1, v1, #int 1 // #01
=::==   001282: 1253                                   |0057: const/4 v3, #int 5 // #5
=::= -----------------------
BB startOffset is : 0x127eend with jump
start of BB is 5a, 
before end of BB is 5e 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001288: 2203 2900                              |005a: new-instance v3,class@0029
=::==   00128c: 1a04 0000                              |005c: const-string v4, string@0000
=::= -----------------------
BB startOffset is : 0x1288end with jump
start of BB is 61, 
before end of BB is 61 
count insns of BB is 0 
========================
end with jump
start of BB is 64, 
before end of BB is 65 
count insns of BB is 1 
========================
end with jump
start of BB is 68, 
before end of BB is 69 
count insns of BB is 1 
========================
end with jump
start of BB is 6c, 
before end of BB is 6d 
count insns of BB is 1 
========================
end with jump
start of BB is 70, 
before end of BB is 70 
count insns of BB is 0 
========================
end with jump
start of BB is 73, 
before end of BB is 73 
count insns of BB is 0 
========================
<<<<<<<<<<< code 12  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x12bc; insns off=0x12cc;registers is 1;insns size is 15~~~~~~~~

==!
0012cc: 2200 2e00                              |0000: new-instance v0,class@002e
0012d0: 7010 8a00 0000                         |0002: invoke-direct {v0}, method@008a
0012d6: 6900 1100                              |0005: sput-object v0,field@0011
0012da: 2200 2e00                              |0007: new-instance v0,class@002e
0012de: 7010 8a00 0000                         |0009: invoke-direct {v0}, method@008a
0012e4: 6900 1000                              |000c: sput-object v0,field@0010
0012e8: 0e00                                   |000e: return-void
BB begin is :  a--5   18--c  
start add mir ,first is 0 ; second is 5!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
end with jump
start of BB is 5, 
before end of BB is 9 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0012d6: 6900 1100                              |0005: sput-object v0,field@0011
=::==   0012da: 2200 2e00                              |0007: new-instance v0,class@002e
=::= -----------------------
BB startOffset is : 0x12d6end with jump
start of BB is c, 
before end of BB is e 
count insns of BB is 1 
========================
<<<<<<<<<<< code 13  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x12ec; insns off=0x12fc;registers is 1;insns size is 4~~~~~~~~

==!
0012fc: 7010 8500 0000                         |0000: invoke-direct {v0}, method@0085
001302: 0e00                                   |0003: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 3 
count insns of BB is 0 
========================
<<<<<<<<<<< code 14  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1304; insns off=0x1314;registers is 9;insns size is 77~~~~~~~~

==!
001314: 1208                                   |0000: const/4 v8, #int 0 // #0
001316: 1600 0000                              |0001: const-wide/16 v0, #int 0 // #0
00131a: 1602 0000                              |0003: const-wide/16 v2, #int 0 // #0
00131e: 6306 0b00                              |0005: sget-boolean v6,field@000b
001322: 3806 4400                              |0007: if-eqz v6, 004b // +0044
001326: 6306 0e00                              |0009: sget-boolean v6,field@000e
00132a: 3906 0600                              |000b: if-nez v6, 0011 // +0006
00132e: 6306 0c00                              |000d: sget-boolean v6,field@000c
001332: 3806 3c00                              |000f: if-eqz v6, 004b // +003c
001336: 1204                                   |0011: const/4 v4, #int 0 // #0
001338: 6206 1000                              |0012: sget-object v6,field@0010
00133c: 6e20 8c00 4600                         |0014: invoke-virtual {v6, v4}, method@008c
001342: 0c05                                   |0017: move-result-object v5
001344: 1f05 2400                              |0018: check-cast v5,class@0024
001348: 6e10 7300 0500                         |001a: invoke-virtual {v5}, method@0073
00134e: 0a06                                   |001d: move-result v6
001350: 3806 2900                              |001e: if-eqz v6, 0047 // +0029
001354: 1906 f03f                              |0020: const-wide/high16 v6, #long 4607182418800017408 // #3ff0
001358: cb62                                   |0022: add-double/2addr v2, v6
00135a: 6e10 7200 0500                         |0023: invoke-virtual {v5}, method@0072
001360: 0a06                                   |0026: move-result v6
001362: 8966                                   |0027: float-to-double v6, v6
001364: 7120 7600 7600                         |0028: invoke-static {v6, v7}, method@0076
00136a: 0b06                                   |002b: move-result-wide v6
00136c: cb60                                   |002c: add-double/2addr v0, v6
00136e: d804 0401                              |002d: add-int/lit8 v4, v4, #int 1 // #01
001372: 1256                                   |002f: const/4 v6, #int 5 // #5
001374: 3764 e2ff                              |0030: if-le v4, v6, 0012 // -001e
001378: 1906 e03f                              |0032: const-wide/high16 v6, #long 4602678819172646912 // #3fe0
00137c: 2f06 0206                              |0034: cmpl-double v6, v2, v6
001380: 3d06 1300                              |0036: if-lez v6, 0049 // +0013
001384: ce20                                   |0038: div-double/2addr v0, v2
001386: 2206 2300                              |0039: new-instance v6,class@0023
00138a: 7120 7500 1000                         |003b: invoke-static {v0, v1}, method@0075
001390: 0b07                                   |003e: move-result-wide v7
001392: 7030 6f00 7608                         |003f: invoke-direct {v6, v7, v8}, method@006f
001398: 6e10 7000 0600                         |0042: invoke-virtual {v6}, method@0070
00139e: 0a06                                   |0045: move-result v6
0013a0: 0f06                                   |0046: return v6
0013a2: 0186                                   |0047: move v6, v8
0013a4: 28fe                                   |0048: goto 0046 // -0002
0013a6: 0186                                   |0049: move v6, v8
0013a8: 28fc                                   |004a: goto 0046 // -0004
0013aa: 0186                                   |004b: move v6, v8
0013ac: 28fa                                   |004c: goto 0046 // -0006
BB begin is :  12--9   1a--d   22--11   24--12   2e--17   3a--1d   40--20   4c--26   56--2b   64--32   70--38   7c--3e   84--42   8a--45   8c--46   8e--47   92--49   96--4b  
start add mir ,first is 0 ; second is 9!
end with jump
start of BB is 0, 
before end of BB is 7 
count insns of BB is 4 
========================
=::== -----------------------
=::==   001314: 1208                                   |0000: const/4 v8, #int 0 // #0
=::==   001316: 1600 0000                              |0001: const-wide/16 v0, #int 0 // #0
=::==   00131a: 1602 0000                              |0003: const-wide/16 v2, #int 0 // #0
=::==   00131e: 6306 0b00                              |0005: sget-boolean v6,field@000b
=::= -----------------------
BB startOffset is : 0x1314end with jump
start of BB is 9, 
before end of BB is b 
count insns of BB is 1 
========================
end with jump
start of BB is d, 
before end of BB is f 
count insns of BB is 1 
========================
end with second!
start of BB is 11, 
before end of BB is 12 
count insns of BB is 1 
========================
end with jump
start of BB is 12, 
before end of BB is 14 
count insns of BB is 1 
========================
end with jump
start of BB is 17, 
before end of BB is 1a 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001342: 0c05                                   |0017: move-result-object v5
=::==   001344: 1f05 2400                              |0018: check-cast v5,class@0024
=::= -----------------------
BB startOffset is : 0x1342end with jump
start of BB is 1d, 
before end of BB is 1e 
count insns of BB is 1 
========================
end with jump
start of BB is 20, 
before end of BB is 23 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001354: 1906 f03f                              |0020: const-wide/high16 v6, #long 4607182418800017408 // #3ff0
=::==   001358: cb62                                   |0022: add-double/2addr v2, v6
=::= -----------------------
BB startOffset is : 0x1354end with jump
start of BB is 26, 
before end of BB is 28 
count insns of BB is 2 
========================
end with jump
start of BB is 2b, 
before end of BB is 30 
count insns of BB is 4 
========================
=::== -----------------------
=::==   00136a: 0b06                                   |002b: move-result-wide v6
=::==   00136c: cb60                                   |002c: add-double/2addr v0, v6
=::==   00136e: d804 0401                              |002d: add-int/lit8 v4, v4, #int 1 // #01
=::==   001372: 1256                                   |002f: const/4 v6, #int 5 // #5
=::= -----------------------
BB startOffset is : 0x136aend with jump
start of BB is 32, 
before end of BB is 36 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001378: 1906 e03f                              |0032: const-wide/high16 v6, #long 4602678819172646912 // #3fe0
=::==   00137c: 2f06 0206                              |0034: cmpl-double v6, v2, v6
=::= -----------------------
BB startOffset is : 0x1378end with jump
start of BB is 38, 
before end of BB is 3b 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001384: ce20                                   |0038: div-double/2addr v0, v2
=::==   001386: 2206 2300                              |0039: new-instance v6,class@0023
=::= -----------------------
BB startOffset is : 0x1384end with jump
start of BB is 3e, 
before end of BB is 3f 
count insns of BB is 1 
========================
end with jump
start of BB is 42, 
before end of BB is 42 
count insns of BB is 0 
========================
end with jump
start of BB is 45, 
before end of BB is 46 
count insns of BB is 1 
========================
end with jump
start of BB is 46, 
before end of BB is 46 
count insns of BB is 0 
========================
end with jump
start of BB is 47, 
before end of BB is 48 
count insns of BB is 1 
========================
end with jump
start of BB is 49, 
before end of BB is 4a 
count insns of BB is 1 
========================
end with jump
start of BB is 4b, 
before end of BB is 4c 
count insns of BB is 1 
========================
<<<<<<<<<<< code 15  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x13b0; insns off=0x13c0;registers is 5;insns size is 184~~~~~~~~

==!
0013c0: 1203                                   |0000: const/4 v3, #int 0 // #0
0013c2: 6a03 0e00                              |0001: sput-boolean v3,field@000e
0013c6: 6a03 0b00                              |0003: sput-boolean v3,field@000b
0013ca: 2b04 a300 0000                         |0005: packed-switch v4, 000000a8(insnIdx+vB) //vB= +000000a3
0013d0: 0e00                                   |0008: return-void
0013d2: 6200 1100                              |0009: sget-object v0,field@0011
0013d6: 2201 0b00                              |000b: new-instance v1,class@000b
0013da: 2202 1a00                              |000d: new-instance v2,class@001a
0013de: 7010 5900 0200                         |000f: invoke-direct {v2}, method@0059
0013e4: 7020 0e00 2100                         |0012: invoke-direct {v1, v2}, method@000e
0013ea: 6e20 8b00 1000                         |0015: invoke-virtual {v0, v1}, method@008b
0013f0: 6200 1000                              |0018: sget-object v0,field@0010
0013f4: 2201 2400                              |001a: new-instance v1,class@0024
0013f8: 7020 7100 3100                         |001c: invoke-direct {v1, v3}, method@0071
0013fe: 6e20 8b00 1000                         |001f: invoke-virtual {v0, v1}, method@008b
001404: 28e6                                   |0022: goto 0008 // -001a
001406: 6200 1100                              |0023: sget-object v0,field@0011
00140a: 2201 0b00                              |0025: new-instance v1,class@000b
00140e: 2202 1300                              |0027: new-instance v2,class@0013
001412: 7010 4200 0200                         |0029: invoke-direct {v2}, method@0042
001418: 7020 0e00 2100                         |002c: invoke-direct {v1, v2}, method@000e
00141e: 6e20 8b00 1000                         |002f: invoke-virtual {v0, v1}, method@008b
001424: 6200 1000                              |0032: sget-object v0,field@0010
001428: 2201 2400                              |0034: new-instance v1,class@0024
00142c: 7020 7100 3100                         |0036: invoke-direct {v1, v3}, method@0071
001432: 6e20 8b00 1000                         |0039: invoke-virtual {v0, v1}, method@008b
001438: 28cc                                   |003c: goto 0008 // -0034
00143a: 6200 1100                              |003d: sget-object v0,field@0011
00143e: 2201 0b00                              |003f: new-instance v1,class@000b
001442: 2202 1200                              |0041: new-instance v2,class@0012
001446: 7010 3a00 0200                         |0043: invoke-direct {v2}, method@003a
00144c: 7020 0e00 2100                         |0046: invoke-direct {v1, v2}, method@000e
001452: 6e20 8b00 1000                         |0049: invoke-virtual {v0, v1}, method@008b
001458: 6200 1000                              |004c: sget-object v0,field@0010
00145c: 2201 2400                              |004e: new-instance v1,class@0024
001460: 7020 7100 3100                         |0050: invoke-direct {v1, v3}, method@0071
001466: 6e20 8b00 1000                         |0053: invoke-virtual {v0, v1}, method@008b
00146c: 28b2                                   |0056: goto 0008 // -004e
00146e: 6200 1100                              |0057: sget-object v0,field@0011
001472: 2201 0b00                              |0059: new-instance v1,class@000b
001476: 2202 1c00                              |005b: new-instance v2,class@001c
00147a: 7010 6600 0200                         |005d: invoke-direct {v2}, method@0066
001480: 7020 0e00 2100                         |0060: invoke-direct {v1, v2}, method@000e
001486: 6e20 8b00 1000                         |0063: invoke-virtual {v0, v1}, method@008b
00148c: 6200 1000                              |0066: sget-object v0,field@0010
001490: 2201 2400                              |0068: new-instance v1,class@0024
001494: 7020 7100 3100                         |006a: invoke-direct {v1, v3}, method@0071
00149a: 6e20 8b00 1000                         |006d: invoke-virtual {v0, v1}, method@008b
0014a0: 2898                                   |0070: goto 0008 // -0068
0014a2: 6200 1100                              |0071: sget-object v0,field@0011
0014a6: 2201 0b00                              |0073: new-instance v1,class@000b
0014aa: 2202 1100                              |0075: new-instance v2,class@0011
0014ae: 7010 3200 0200                         |0077: invoke-direct {v2}, method@0032
0014b4: 7020 0e00 2100                         |007a: invoke-direct {v1, v2}, method@000e
0014ba: 6e20 8b00 1000                         |007d: invoke-virtual {v0, v1}, method@008b
0014c0: 6200 1000                              |0080: sget-object v0,field@0010
0014c4: 2201 2400                              |0082: new-instance v1,class@0024
0014c8: 7020 7100 3100                         |0084: invoke-direct {v1, v3}, method@0071
0014ce: 6e20 8b00 1000                         |0087: invoke-virtual {v0, v1}, method@008b
0014d4: 2900 7eff                              |008a: goto/16 0008 // -0082
0014d8: 6200 1100                              |008c: sget-object v0,field@0011
0014dc: 2201 0b00                              |008e: new-instance v1,class@000b
0014e0: 2202 1400                              |0090: new-instance v2,class@0014
0014e4: 7010 4a00 0200                         |0092: invoke-direct {v2}, method@004a
0014ea: 7020 0e00 2100                         |0095: invoke-direct {v1, v2}, method@000e
0014f0: 6e20 8b00 1000                         |0098: invoke-virtual {v0, v1}, method@008b
0014f6: 6200 1000                              |009b: sget-object v0,field@0010
0014fa: 2201 2400                              |009d: new-instance v1,class@0024
0014fe: 7020 7100 3100                         |009f: invoke-direct {v1, v3}, method@0071
001504: 6e20 8b00 1000                         |00a2: invoke-virtual {v0, v1}, method@008b
00150a: 2900 63ff                              |00a5: goto/16 0008 // -009d
00150e: 0000                                   |00a7: nop // spacer
001510: 0001 0600 0000 0000 0400 0000 1e00 ... |00a8: packed-switch-data (16 units)
BB begin is :  10--8   12--9   24--12   2a--15   30--18   3e--1f   44--22   46--23   58--2c   5e--2f   64--32   72--39   78--3c   7a--3d   8c--46   92--49   98--4c   a6--53   ac--56   ae--57   c0--60   c6--63   cc--66   da--6d   e0--70   e2--71   f4--7a   fa--7d   100--80   10e--87   114--8a   118--8c   12a--95   130--98   136--9b   144--a2   14a--a5   14e--a7  
start add mir ,first is 0 ; second is 8!
end with jump
start of BB is 0, 
before end of BB is 5 
count insns of BB is 3 
========================
=::== -----------------------
=::==   0013c0: 1203                                   |0000: const/4 v3, #int 0 // #0
=::==   0013c2: 6a03 0e00                              |0001: sput-boolean v3,field@000e
=::==   0013c6: 6a03 0b00                              |0003: sput-boolean v3,field@000b
=::= -----------------------
BB startOffset is : 0x13c0end with jump
start of BB is 8, 
before end of BB is 8 
count insns of BB is 0 
========================
end with jump
start of BB is 9, 
before end of BB is f 
count insns of BB is 3 
========================
=::== -----------------------
=::==   0013d2: 6200 1100                              |0009: sget-object v0,field@0011
=::==   0013d6: 2201 0b00                              |000b: new-instance v1,class@000b
=::==   0013da: 2202 1a00                              |000d: new-instance v2,class@001a
=::= -----------------------
BB startOffset is : 0x13d2end with jump
start of BB is 12, 
before end of BB is 12 
count insns of BB is 0 
========================
end with jump
start of BB is 15, 
before end of BB is 15 
count insns of BB is 0 
========================
end with jump
start of BB is 18, 
before end of BB is 1c 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0013f0: 6200 1000                              |0018: sget-object v0,field@0010
=::==   0013f4: 2201 2400                              |001a: new-instance v1,class@0024
=::= -----------------------
BB startOffset is : 0x13f0end with jump
start of BB is 1f, 
before end of BB is 1f 
count insns of BB is 0 
========================
end with jump
start of BB is 22, 
before end of BB is 22 
count insns of BB is 0 
========================
end with jump
start of BB is 23, 
before end of BB is 29 
count insns of BB is 3 
========================
=::== -----------------------
=::==   001406: 6200 1100                              |0023: sget-object v0,field@0011
=::==   00140a: 2201 0b00                              |0025: new-instance v1,class@000b
=::==   00140e: 2202 1300                              |0027: new-instance v2,class@0013
=::= -----------------------
BB startOffset is : 0x1406end with jump
start of BB is 2c, 
before end of BB is 2c 
count insns of BB is 0 
========================
end with jump
start of BB is 2f, 
before end of BB is 2f 
count insns of BB is 0 
========================
end with jump
start of BB is 32, 
before end of BB is 36 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001424: 6200 1000                              |0032: sget-object v0,field@0010
=::==   001428: 2201 2400                              |0034: new-instance v1,class@0024
=::= -----------------------
BB startOffset is : 0x1424end with jump
start of BB is 39, 
before end of BB is 39 
count insns of BB is 0 
========================
end with jump
start of BB is 3c, 
before end of BB is 3c 
count insns of BB is 0 
========================
end with jump
start of BB is 3d, 
before end of BB is 43 
count insns of BB is 3 
========================
=::== -----------------------
=::==   00143a: 6200 1100                              |003d: sget-object v0,field@0011
=::==   00143e: 2201 0b00                              |003f: new-instance v1,class@000b
=::==   001442: 2202 1200                              |0041: new-instance v2,class@0012
=::= -----------------------
BB startOffset is : 0x143aend with jump
start of BB is 46, 
before end of BB is 46 
count insns of BB is 0 
========================
end with jump
start of BB is 49, 
before end of BB is 49 
count insns of BB is 0 
========================
end with jump
start of BB is 4c, 
before end of BB is 50 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001458: 6200 1000                              |004c: sget-object v0,field@0010
=::==   00145c: 2201 2400                              |004e: new-instance v1,class@0024
=::= -----------------------
BB startOffset is : 0x1458end with jump
start of BB is 53, 
before end of BB is 53 
count insns of BB is 0 
========================
end with jump
start of BB is 56, 
before end of BB is 56 
count insns of BB is 0 
========================
end with jump
start of BB is 57, 
before end of BB is 5d 
count insns of BB is 3 
========================
=::== -----------------------
=::==   00146e: 6200 1100                              |0057: sget-object v0,field@0011
=::==   001472: 2201 0b00                              |0059: new-instance v1,class@000b
=::==   001476: 2202 1c00                              |005b: new-instance v2,class@001c
=::= -----------------------
BB startOffset is : 0x146eend with jump
start of BB is 60, 
before end of BB is 60 
count insns of BB is 0 
========================
end with jump
start of BB is 63, 
before end of BB is 63 
count insns of BB is 0 
========================
end with jump
start of BB is 66, 
before end of BB is 6a 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00148c: 6200 1000                              |0066: sget-object v0,field@0010
=::==   001490: 2201 2400                              |0068: new-instance v1,class@0024
=::= -----------------------
BB startOffset is : 0x148cend with jump
start of BB is 6d, 
before end of BB is 6d 
count insns of BB is 0 
========================
end with jump
start of BB is 70, 
before end of BB is 70 
count insns of BB is 0 
========================
end with jump
start of BB is 71, 
before end of BB is 77 
count insns of BB is 3 
========================
=::== -----------------------
=::==   0014a2: 6200 1100                              |0071: sget-object v0,field@0011
=::==   0014a6: 2201 0b00                              |0073: new-instance v1,class@000b
=::==   0014aa: 2202 1100                              |0075: new-instance v2,class@0011
=::= -----------------------
BB startOffset is : 0x14a2end with jump
start of BB is 7a, 
before end of BB is 7a 
count insns of BB is 0 
========================
end with jump
start of BB is 7d, 
before end of BB is 7d 
count insns of BB is 0 
========================
end with jump
start of BB is 80, 
before end of BB is 84 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0014c0: 6200 1000                              |0080: sget-object v0,field@0010
=::==   0014c4: 2201 2400                              |0082: new-instance v1,class@0024
=::= -----------------------
BB startOffset is : 0x14c0end with jump
start of BB is 87, 
before end of BB is 87 
count insns of BB is 0 
========================
end with jump
start of BB is 8a, 
before end of BB is 8a 
count insns of BB is 0 
========================
end with jump
start of BB is 8c, 
before end of BB is 92 
count insns of BB is 3 
========================
=::== -----------------------
=::==   0014d8: 6200 1100                              |008c: sget-object v0,field@0011
=::==   0014dc: 2201 0b00                              |008e: new-instance v1,class@000b
=::==   0014e0: 2202 1400                              |0090: new-instance v2,class@0014
=::= -----------------------
BB startOffset is : 0x14d8end with jump
start of BB is 95, 
before end of BB is 95 
count insns of BB is 0 
========================
end with jump
start of BB is 98, 
before end of BB is 98 
count insns of BB is 0 
========================
end with jump
start of BB is 9b, 
before end of BB is 9f 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0014f6: 6200 1000                              |009b: sget-object v0,field@0010
=::==   0014fa: 2201 2400                              |009d: new-instance v1,class@0024
=::= -----------------------
BB startOffset is : 0x14f6end with jump
start of BB is a2, 
before end of BB is a2 
count insns of BB is 0 
========================
end with jump
start of BB is a5, 
before end of BB is a5 
count insns of BB is 0 
========================
end with data!
start of BB is a7, 
before end of BB is a8 
count insns of BB is 1 
========================
<<<<<<<<<<< code 16  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1530; insns off=0x1540;registers is 1;insns size is 14~~~~~~~~

==!
001540: 1200                                   |0000: const/4 v0, #int 0 // #0
001542: 6a00 0e00                              |0001: sput-boolean v0,field@000e
001546: 6200 1100                              |0003: sget-object v0,field@0011
00154a: 6e10 8d00 0000                         |0005: invoke-virtual {v0}, method@008d
001550: 6200 1000                              |0008: sget-object v0,field@0010
001554: 6e10 8d00 0000                         |000a: invoke-virtual {v0}, method@008d
00155a: 0e00                                   |000d: return-void
BB begin is :  10--8   1a--d  
start add mir ,first is 0 ; second is 8!
end with jump
start of BB is 0, 
before end of BB is 5 
count insns of BB is 3 
========================
=::== -----------------------
=::==   001540: 1200                                   |0000: const/4 v0, #int 0 // #0
=::==   001542: 6a00 0e00                              |0001: sput-boolean v0,field@000e
=::==   001546: 6200 1100                              |0003: sget-object v0,field@0011
=::= -----------------------
BB startOffset is : 0x1540end with jump
start of BB is 8, 
before end of BB is a 
count insns of BB is 1 
========================
end with jump
start of BB is d, 
before end of BB is d 
count insns of BB is 0 
========================
<<<<<<<<<<< code 17  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x155c; insns off=0x156c;registers is 4;insns size is 21~~~~~~~~

==!
00156c: 1200                                   |0000: const/4 v0, #int 0 // #0
00156e: 1201                                   |0001: const/4 v1, #int 0 // #0
001570: 6203 1000                              |0002: sget-object v3,field@0010
001574: 6e10 8f00 0300                         |0004: invoke-virtual {v3}, method@008f
00157a: 0a03                                   |0007: move-result v3
00157c: 3431 0300                              |0008: if-lt v1, v3, 000b // +0003
001580: 0f00                                   |000a: return v0
001582: 7110 2200 0100                         |000b: invoke-static {v1}, method@0022
001588: 0a02                                   |000e: move-result v2
00158a: 3702 0300                              |000f: if-le v2, v0, 0012 // +0003
00158e: 0120                                   |0011: move v0, v2
001590: d801 0101                              |0012: add-int/lit8 v1, v1, #int 1 // #01
001594: 28ee                                   |0014: goto 0002 // -0012
BB begin is :  4--2   e--7   14--a   16--b   1c--e   22--11   24--12  
start add mir ,first is 0 ; second is 2!
end with second!
start of BB is 0, 
before end of BB is 2 
count insns of BB is 2 
========================
end with jump
start of BB is 2, 
before end of BB is 4 
count insns of BB is 1 
========================
end with jump
start of BB is 7, 
before end of BB is 8 
count insns of BB is 1 
========================
end with jump
start of BB is a, 
before end of BB is a 
count insns of BB is 0 
========================
end with jump
start of BB is b, 
before end of BB is b 
count insns of BB is 0 
========================
end with jump
start of BB is e, 
before end of BB is f 
count insns of BB is 1 
========================
end with second!
start of BB is 11, 
before end of BB is 12 
count insns of BB is 1 
========================
end with jump
start of BB is 12, 
before end of BB is 14 
count insns of BB is 1 
========================
<<<<<<<<<<< code 18  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1598; insns off=0x15a8;registers is 3;insns size is 21~~~~~~~~

==!
0015a8: 6201 1000                              |0000: sget-object v1,field@0010
0015ac: 6e10 8f00 0100                         |0002: invoke-virtual {v1}, method@008f
0015b2: 0a01                                   |0005: move-result v1
0015b4: 3412 0400                              |0006: if-lt v2, v1, 000a // +0004
0015b8: 1201                                   |0008: const/4 v1, #int 0 // #0
0015ba: 0f01                                   |0009: return v1
0015bc: 6201 1100                              |000a: sget-object v1,field@0011
0015c0: 6e20 8c00 2100                         |000c: invoke-virtual {v1, v2}, method@008c
0015c6: 0c00                                   |000f: move-result-object v0
0015c8: 1f00 0b00                              |0010: check-cast v0,class@000b
0015cc: 5201 0000                              |0012: iget v1, v0,field@0000
0015d0: 28f5                                   |0014: goto 0009 // -000b
BB begin is :  a--5   10--8   12--9   14--a   1e--f  
start add mir ,first is 0 ; second is 5!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
end with jump
start of BB is 5, 
before end of BB is 6 
count insns of BB is 1 
========================
end with jump
start of BB is 8, 
before end of BB is 9 
count insns of BB is 1 
========================
end with jump
start of BB is 9, 
before end of BB is 9 
count insns of BB is 0 
========================
end with jump
start of BB is a, 
before end of BB is c 
count insns of BB is 1 
========================
end with jump
start of BB is f, 
before end of BB is 14 
count insns of BB is 3 
========================
=::== -----------------------
=::==   0015c6: 0c00                                   |000f: move-result-object v0
=::==   0015c8: 1f00 0b00                              |0010: check-cast v0,class@000b
=::==   0015cc: 5201 0000                              |0012: iget v1, v0,field@0000
=::= -----------------------
BB startOffset is : 0x15c6<<<<<<<<<<< code 19  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x15d4; insns off=0x15e4;registers is 3;insns size is 24~~~~~~~~

==!
0015e4: 6201 1100                              |0000: sget-object v1,field@0011
0015e8: 6e10 8f00 0100                         |0002: invoke-virtual {v1}, method@008f
0015ee: 0a01                                   |0005: move-result v1
0015f0: 3412 0500                              |0006: if-lt v2, v1, 000b // +0005
0015f4: 1a01 2200                              |0008: const-string v1, string@0022
0015f8: 1101                                   |000a: return-object v1
0015fa: 6201 1100                              |000b: sget-object v1,field@0011
0015fe: 6e20 8c00 2100                         |000d: invoke-virtual {v1, v2}, method@008c
001604: 0c00                                   |0010: move-result-object v0
001606: 1f00 0b00                              |0011: check-cast v0,class@000b
00160a: 6e10 1400 0000                         |0013: invoke-virtual {v0}, method@0014
001610: 0c01                                   |0016: move-result-object v1
001612: 28f3                                   |0017: goto 000a // -000d
BB begin is :  a--5   10--8   14--a   16--b   20--10   2c--16  
start add mir ,first is 0 ; second is 5!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
end with jump
start of BB is 5, 
before end of BB is 6 
count insns of BB is 1 
========================
end with jump
start of BB is 8, 
before end of BB is a 
count insns of BB is 1 
========================
end with jump
start of BB is a, 
before end of BB is a 
count insns of BB is 0 
========================
end with jump
start of BB is b, 
before end of BB is d 
count insns of BB is 1 
========================
end with jump
start of BB is 10, 
before end of BB is 13 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001604: 0c00                                   |0010: move-result-object v0
=::==   001606: 1f00 0b00                              |0011: check-cast v0,class@000b
=::= -----------------------
BB startOffset is : 0x1604end with jump
start of BB is 16, 
before end of BB is 17 
count insns of BB is 1 
========================
<<<<<<<<<<< code 20  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1614; insns off=0x1624;registers is 3;insns size is 23~~~~~~~~

==!
001624: 6201 1000                              |0000: sget-object v1,field@0010
001628: 6e10 8f00 0100                         |0002: invoke-virtual {v1}, method@008f
00162e: 0a01                                   |0005: move-result v1
001630: 3412 0400                              |0006: if-lt v2, v1, 000a // +0004
001634: 1201                                   |0008: const/4 v1, #int 0 // #0
001636: 0f01                                   |0009: return v1
001638: 6201 1000                              |000a: sget-object v1,field@0010
00163c: 6e20 8c00 2100                         |000c: invoke-virtual {v1, v2}, method@008c
001642: 0c00                                   |000f: move-result-object v0
001644: 1f00 2400                              |0010: check-cast v0,class@0024
001648: 6e10 7300 0000                         |0012: invoke-virtual {v0}, method@0073
00164e: 0a01                                   |0015: move-result v1
001650: 28f3                                   |0016: goto 0009 // -000d
BB begin is :  a--5   10--8   12--9   14--a   1e--f   2a--15  
start add mir ,first is 0 ; second is 5!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
end with jump
start of BB is 5, 
before end of BB is 6 
count insns of BB is 1 
========================
end with jump
start of BB is 8, 
before end of BB is 9 
count insns of BB is 1 
========================
end with jump
start of BB is 9, 
before end of BB is 9 
count insns of BB is 0 
========================
end with jump
start of BB is a, 
before end of BB is c 
count insns of BB is 1 
========================
end with jump
start of BB is f, 
before end of BB is 12 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001642: 0c00                                   |000f: move-result-object v0
=::==   001644: 1f00 2400                              |0010: check-cast v0,class@0024
=::= -----------------------
BB startOffset is : 0x1642end with jump
start of BB is 15, 
before end of BB is 16 
count insns of BB is 1 
========================
<<<<<<<<<<< code 21  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1654; insns off=0x1664;registers is 3;insns size is 24~~~~~~~~

==!
001664: 1201                                   |0000: const/4 v1, #int 0 // #0
001666: 6202 1100                              |0001: sget-object v2,field@0011
00166a: 6e10 8f00 0200                         |0003: invoke-virtual {v2}, method@008f
001670: 0a02                                   |0006: move-result v2
001672: 3421 0300                              |0007: if-lt v1, v2, 000a // +0003
001676: 0e00                                   |0009: return-void
001678: 6202 1100                              |000a: sget-object v2,field@0011
00167c: 6e20 8c00 1200                         |000c: invoke-virtual {v2, v1}, method@008c
001682: 0c00                                   |000f: move-result-object v0
001684: 1f00 0b00                              |0010: check-cast v0,class@000b
001688: 6e10 1100 0000                         |0012: invoke-virtual {v0}, method@0011
00168e: d801 0101                              |0015: add-int/lit8 v1, v1, #int 1 // #01
001692: 28ea                                   |0017: goto 0001 // -0016
BB begin is :  2--1   c--6   12--9   14--a   1e--f   2a--15  
start add mir ,first is 0 ; second is 1!
end with second!
start of BB is 0, 
before end of BB is 1 
count insns of BB is 1 
========================
end with jump
start of BB is 1, 
before end of BB is 3 
count insns of BB is 1 
========================
end with jump
start of BB is 6, 
before end of BB is 7 
count insns of BB is 1 
========================
end with jump
start of BB is 9, 
before end of BB is 9 
count insns of BB is 0 
========================
end with jump
start of BB is a, 
before end of BB is c 
count insns of BB is 1 
========================
end with jump
start of BB is f, 
before end of BB is 12 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001682: 0c00                                   |000f: move-result-object v0
=::==   001684: 1f00 0b00                              |0010: check-cast v0,class@000b
=::= -----------------------
BB startOffset is : 0x1682end with jump
start of BB is 15, 
before end of BB is 17 
count insns of BB is 1 
========================
<<<<<<<<<<< code 22  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1694; insns off=0x16a4;registers is 3;insns size is 24~~~~~~~~

==!
0016a4: 1201                                   |0000: const/4 v1, #int 0 // #0
0016a6: 6202 1100                              |0001: sget-object v2,field@0011
0016aa: 6e10 8f00 0200                         |0003: invoke-virtual {v2}, method@008f
0016b0: 0a02                                   |0006: move-result v2
0016b2: 3421 0300                              |0007: if-lt v1, v2, 000a // +0003
0016b6: 0e00                                   |0009: return-void
0016b8: 6202 1100                              |000a: sget-object v2,field@0011
0016bc: 6e20 8c00 1200                         |000c: invoke-virtual {v2, v1}, method@008c
0016c2: 0c00                                   |000f: move-result-object v0
0016c4: 1f00 0b00                              |0010: check-cast v0,class@000b
0016c8: 6e10 1200 0000                         |0012: invoke-virtual {v0}, method@0012
0016ce: d801 0101                              |0015: add-int/lit8 v1, v1, #int 1 // #01
0016d2: 28ea                                   |0017: goto 0001 // -0016
BB begin is :  2--1   c--6   12--9   14--a   1e--f   2a--15  
start add mir ,first is 0 ; second is 1!
end with second!
start of BB is 0, 
before end of BB is 1 
count insns of BB is 1 
========================
end with jump
start of BB is 1, 
before end of BB is 3 
count insns of BB is 1 
========================
end with jump
start of BB is 6, 
before end of BB is 7 
count insns of BB is 1 
========================
end with jump
start of BB is 9, 
before end of BB is 9 
count insns of BB is 0 
========================
end with jump
start of BB is a, 
before end of BB is c 
count insns of BB is 1 
========================
end with jump
start of BB is f, 
before end of BB is 12 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0016c2: 0c00                                   |000f: move-result-object v0
=::==   0016c4: 1f00 0b00                              |0010: check-cast v0,class@000b
=::= -----------------------
BB startOffset is : 0x16c2end with jump
start of BB is 15, 
before end of BB is 17 
count insns of BB is 1 
========================
<<<<<<<<<<< code 23  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x16d4; insns off=0x16e4;registers is 2;insns size is 4~~~~~~~~

==!
0016e4: 1210                                   |0000: const/4 v0, #int 1 // #1
0016e6: 6a00 0d00                              |0001: sput-boolean v0,field@000d
0016ea: 0e00                                   |0003: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 3 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0016e4: 1210                                   |0000: const/4 v0, #int 1 // #1
=::==   0016e6: 6a00 0d00                              |0001: sput-boolean v0,field@000d
=::= -----------------------
BB startOffset is : 0x16e4<<<<<<<<<<< code 24  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x16ec; insns off=0x16fc;registers is 2;insns size is 37~~~~~~~~

==!
0016fc: 1211                                   |0000: const/4 v1, #int 1 // #1
0016fe: 6200 1100                              |0001: sget-object v0,field@0011
001702: 6e10 8d00 0000                         |0003: invoke-virtual {v0}, method@008d
001708: 6200 1000                              |0006: sget-object v0,field@0010
00170c: 6e10 8d00 0000                         |0008: invoke-virtual {v0}, method@008d
001712: 1200                                   |000b: const/4 v0, #int 0 // #0
001714: 7110 1d00 0000                         |000c: invoke-static {v0}, method@001d
00171a: 7110 1d00 0100                         |000f: invoke-static {v1}, method@001d
001720: 1220                                   |0012: const/4 v0, #int 2 // #2
001722: 7110 1d00 0000                         |0013: invoke-static {v0}, method@001d
001728: 1230                                   |0016: const/4 v0, #int 3 // #3
00172a: 7110 1d00 0000                         |0017: invoke-static {v0}, method@001d
001730: 1240                                   |001a: const/4 v0, #int 4 // #4
001732: 7110 1d00 0000                         |001b: invoke-static {v0}, method@001d
001738: 1250                                   |001e: const/4 v0, #int 5 // #5
00173a: 7110 1d00 0000                         |001f: invoke-static {v0}, method@001d
001740: 6a01 0e00                              |0022: sput-boolean v1,field@000e
001744: 0e00                                   |0024: return-void
BB begin is :  c--6   16--b   1e--f   24--12   2c--16   34--1a   3c--1e   44--22  
start add mir ,first is 0 ; second is 6!
end with jump
start of BB is 0, 
before end of BB is 3 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0016fc: 1211                                   |0000: const/4 v1, #int 1 // #1
=::==   0016fe: 6200 1100                              |0001: sget-object v0,field@0011
=::= -----------------------
BB startOffset is : 0x16fcend with jump
start of BB is 6, 
before end of BB is 8 
count insns of BB is 1 
========================
end with jump
start of BB is b, 
before end of BB is c 
count insns of BB is 1 
========================
end with jump
start of BB is f, 
before end of BB is f 
count insns of BB is 0 
========================
end with jump
start of BB is 12, 
before end of BB is 13 
count insns of BB is 1 
========================
end with jump
start of BB is 16, 
before end of BB is 17 
count insns of BB is 1 
========================
end with jump
start of BB is 1a, 
before end of BB is 1b 
count insns of BB is 1 
========================
end with jump
start of BB is 1e, 
before end of BB is 1f 
count insns of BB is 1 
========================
end with jump
start of BB is 22, 
before end of BB is 24 
count insns of BB is 1 
========================
<<<<<<<<<<< code 25  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1748; insns off=0x1758;registers is 6;insns size is 88~~~~~~~~

==!
001758: 1201                                   |0000: const/4 v1, #int 0 // #0
00175a: 6202 1100                              |0001: sget-object v2,field@0011
00175e: 6e10 8f00 0200                         |0003: invoke-virtual {v2}, method@008f
001764: 0a02                                   |0006: move-result v2
001766: 3421 1900                              |0007: if-lt v1, v2, 0020 // +0019
00176a: 6202 0f00                              |0009: sget-object v2,field@000f
00176e: 3802 0d00                              |000b: if-eqz v2, 0018 // +000d
001772: 6202 0f00                              |000d: sget-object v2,field@000f
001776: 6203 1100                              |000f: sget-object v3,field@0011
00177a: 6e10 8f00 0300                         |0011: invoke-virtual {v3}, method@008f
001780: 0a03                                   |0014: move-result v3
001782: 7230 0c00 1203                         |0015: invoke-interface {v2, v1, v3}, method@000c
001788: 6302 0e00                              |0018: sget-boolean v2,field@000e
00178c: 3802 0500                              |001a: if-eqz v2, 001f // +0005
001790: 1212                                   |001c: const/4 v2, #int 1 // #1
001792: 6a02 0b00                              |001d: sput-boolean v2,field@000b
001796: 0e00                                   |001f: return-void
001798: 6202 0f00                              |0020: sget-object v2,field@000f
00179c: 3802 1300                              |0022: if-eqz v2, 0035 // +0013
0017a0: 7100 8600 0000                         |0024: invoke-static {}, method@0086
0017a6: 6202 0f00                              |0027: sget-object v2,field@000f
0017aa: 6203 1100                              |0029: sget-object v3,field@0011
0017ae: 6e10 8f00 0300                         |002b: invoke-virtual {v3}, method@008f
0017b4: 0a03                                   |002e: move-result v3
0017b6: 7230 0c00 1203                         |002f: invoke-interface {v2, v1, v3}, method@000c
0017bc: 0a02                                   |0032: move-result v2
0017be: 3802 ecff                              |0033: if-eqz v2, 001f // -0014
0017c2: 7100 8600 0000                         |0035: invoke-static {}, method@0086
0017c8: 6202 1100                              |0038: sget-object v2,field@0011
0017cc: 6e20 8c00 1200                         |003a: invoke-virtual {v2, v1}, method@008c
0017d2: 0c00                                   |003d: move-result-object v0
0017d4: 1f00 0b00                              |003e: check-cast v0,class@000b
0017d8: 6302 0d00                              |0040: sget-boolean v2,field@000d
0017dc: 3802 0500                              |0042: if-eqz v2, 0047 // +0005
0017e0: 6e10 1100 0000                         |0044: invoke-virtual {v0}, method@0011
0017e6: 6202 1000                              |0047: sget-object v2,field@0010
0017ea: 2203 2400                              |0049: new-instance v3,class@0024
0017ee: 6e10 1500 0000                         |004b: invoke-virtual {v0}, method@0015
0017f4: 0a04                                   |004e: move-result v4
0017f6: 7020 7100 4300                         |004f: invoke-direct {v3, v4}, method@0071
0017fc: 6e30 8e00 3201                         |0052: invoke-virtual {v2, v3, v1}, method@008e
001802: d801 0101                              |0055: add-int/lit8 v1, v1, #int 1 // #01
001806: 28aa                                   |0057: goto 0001 // -0056
BB begin is :  2--1   c--6   12--9   1a--d   28--14   30--18   38--1c   3e--1f   40--20   48--24   4e--27   5c--2e   64--32   6a--35   70--38   7a--3d   88--44   8e--47   9c--4e   a4--52   aa--55  
start add mir ,first is 0 ; second is 1!
end with second!
start of BB is 0, 
before end of BB is 1 
count insns of BB is 1 
========================
end with jump
start of BB is 1, 
before end of BB is 3 
count insns of BB is 1 
========================
end with jump
start of BB is 6, 
before end of BB is 7 
count insns of BB is 1 
========================
end with jump
start of BB is 9, 
before end of BB is b 
count insns of BB is 1 
========================
end with jump
start of BB is d, 
before end of BB is 11 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001772: 6202 0f00                              |000d: sget-object v2,field@000f
=::==   001776: 6203 1100                              |000f: sget-object v3,field@0011
=::= -----------------------
BB startOffset is : 0x1772end with jump
start of BB is 14, 
before end of BB is 15 
count insns of BB is 1 
========================
end with jump
start of BB is 18, 
before end of BB is 1a 
count insns of BB is 1 
========================
end with jump
start of BB is 1c, 
before end of BB is 1f 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001790: 1212                                   |001c: const/4 v2, #int 1 // #1
=::==   001792: 6a02 0b00                              |001d: sput-boolean v2,field@000b
=::= -----------------------
BB startOffset is : 0x1790end with jump
start of BB is 1f, 
before end of BB is 1f 
count insns of BB is 0 
========================
end with jump
start of BB is 20, 
before end of BB is 22 
count insns of BB is 1 
========================
end with jump
start of BB is 24, 
before end of BB is 24 
count insns of BB is 0 
========================
end with jump
start of BB is 27, 
before end of BB is 2b 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0017a6: 6202 0f00                              |0027: sget-object v2,field@000f
=::==   0017aa: 6203 1100                              |0029: sget-object v3,field@0011
=::= -----------------------
BB startOffset is : 0x17a6end with jump
start of BB is 2e, 
before end of BB is 2f 
count insns of BB is 1 
========================
end with jump
start of BB is 32, 
before end of BB is 33 
count insns of BB is 1 
========================
end with jump
start of BB is 35, 
before end of BB is 35 
count insns of BB is 0 
========================
end with jump
start of BB is 38, 
before end of BB is 3a 
count insns of BB is 1 
========================
end with jump
start of BB is 3d, 
before end of BB is 42 
count insns of BB is 3 
========================
=::== -----------------------
=::==   0017d2: 0c00                                   |003d: move-result-object v0
=::==   0017d4: 1f00 0b00                              |003e: check-cast v0,class@000b
=::==   0017d8: 6302 0d00                              |0040: sget-boolean v2,field@000d
=::= -----------------------
BB startOffset is : 0x17d2end with jump
start of BB is 44, 
before end of BB is 44 
count insns of BB is 0 
========================
end with jump
start of BB is 47, 
before end of BB is 4b 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0017e6: 6202 1000                              |0047: sget-object v2,field@0010
=::==   0017ea: 2203 2400                              |0049: new-instance v3,class@0024
=::= -----------------------
BB startOffset is : 0x17e6end with jump
start of BB is 4e, 
before end of BB is 4f 
count insns of BB is 1 
========================
end with jump
start of BB is 52, 
before end of BB is 52 
count insns of BB is 0 
========================
end with jump
start of BB is 55, 
before end of BB is 57 
count insns of BB is 1 
========================
<<<<<<<<<<< code 26  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1808; insns off=0x1818;registers is 3;insns size is 8~~~~~~~~

==!
001818: 7100 8400 0000                         |0000: invoke-static {}, method@0084
00181e: 0b00                                   |0003: move-result-wide v0
001820: 7030 2900 0201                         |0004: invoke-direct {v2, v0, v1}, method@0029
001826: 0e00                                   |0007: return-void
BB begin is :  6--3   e--7  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 4 
count insns of BB is 1 
========================
end with jump
start of BB is 7, 
before end of BB is 7 
count insns of BB is 0 
========================
<<<<<<<<<<< code 27  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1828; insns off=0x1838;registers is 3;insns size is 6~~~~~~~~

==!
001838: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
00183e: 5a01 1200                              |0003: iput-wide v1, v0,field@0012
001842: 0e00                                   |0005: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 5 
count insns of BB is 1 
========================
<<<<<<<<<<< code 28  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1844; insns off=0x1854;registers is 6;insns size is 24~~~~~~~~

==!
001854: 3805 1600                              |0000: if-eqz v5, 0016 // +0016
001858: 2050 0e00                              |0002: instance-of v0, v5, class@000e
00185c: 3800 1200                              |0004: if-eqz v0, 0016 // +0012
001860: 6e10 2b00 0400                         |0006: invoke-virtual {v4}, method@002b
001866: 0b00                                   |0009: move-result-wide v0
001868: 1f05 0e00                              |000a: check-cast v5,class@000e
00186c: 6e10 2b00 0500                         |000c: invoke-virtual {v5}, method@002b
001872: 0b02                                   |000f: move-result-wide v2
001874: 3100 0002                              |0010: cmp-long v0, v0, v2
001878: 3900 0400                              |0012: if-nez v0, 0016 // +0004
00187c: 1210                                   |0014: const/4 v0, #int 1 // #1
00187e: 0f00                                   |0015: return v0
001880: 1200                                   |0016: const/4 v0, #int 0 // #0
001882: 28fe                                   |0017: goto 0015 // -0002
BB begin is :  4--2   c--6   12--9   1e--f   28--14   2a--15   2c--16  
start add mir ,first is 0 ; second is 2!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 2, 
before end of BB is 4 
count insns of BB is 1 
========================
end with jump
start of BB is 6, 
before end of BB is 6 
count insns of BB is 0 
========================
end with jump
start of BB is 9, 
before end of BB is c 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001866: 0b00                                   |0009: move-result-wide v0
=::==   001868: 1f05 0e00                              |000a: check-cast v5,class@000e
=::= -----------------------
BB startOffset is : 0x1866end with jump
start of BB is f, 
before end of BB is 12 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001872: 0b02                                   |000f: move-result-wide v2
=::==   001874: 3100 0002                              |0010: cmp-long v0, v0, v2
=::= -----------------------
BB startOffset is : 0x1872end with jump
start of BB is 14, 
before end of BB is 15 
count insns of BB is 1 
========================
end with jump
start of BB is 15, 
before end of BB is 15 
count insns of BB is 0 
========================
end with jump
start of BB is 16, 
before end of BB is 17 
count insns of BB is 1 
========================
<<<<<<<<<<< code 29  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1884; insns off=0x1894;registers is 3;insns size is 3~~~~~~~~

==!
001894: 5320 1200                              |0000: iget-wide v0, v2,field@0012
001898: 1000                                   |0002: return-wide v0
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
<<<<<<<<<<< code 30  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x189c; insns off=0x18ac;registers is 6;insns size is 12~~~~~~~~

==!
0018ac: 6e10 2b00 0500                         |0000: invoke-virtual {v5}, method@002b
0018b2: 0b00                                   |0003: move-result-wide v0
0018b4: 8402                                   |0004: long-to-int v2, v0
0018b6: 1303 2000                              |0005: const/16 v3, #int 32 // #20
0018ba: a403 0003                              |0007: shr-long v3, v0, v3
0018be: 8433                                   |0009: long-to-int v3, v3
0018c0: b732                                   |000a: xor-int/2addr v2, v3
0018c2: 0f02                                   |000b: return v2
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is b 
count insns of BB is 6 
========================
=::== -----------------------
=::==   0018b2: 0b00                                   |0003: move-result-wide v0
=::==   0018b4: 8402                                   |0004: long-to-int v2, v0
=::==   0018b6: 1303 2000                              |0005: const/16 v3, #int 32 // #20
=::==   0018ba: a403 0003                              |0007: shr-long v3, v0, v3
=::==   0018be: 8433                                   |0009: long-to-int v3, v3
=::==   0018c0: b732                                   |000a: xor-int/2addr v2, v3
=::= -----------------------
BB startOffset is : 0x18b2<<<<<<<<<<< code 31  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x18c4; insns off=0x18d4;registers is 3;insns size is 3~~~~~~~~

==!
0018d4: 5a01 1200                              |0000: iput-wide v1, v0,field@0012
0018d8: 0e00                                   |0002: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
<<<<<<<<<<< code 32  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x18dc; insns off=0x18ec;registers is 1;insns size is 4~~~~~~~~

==!
0018ec: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
0018f2: 0e00                                   |0003: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 3 
count insns of BB is 0 
========================
<<<<<<<<<<< code 33  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x18f4; insns off=0x1904;registers is 8;insns size is 79~~~~~~~~

==!
001904: 2200 2d00                              |0000: new-instance v0,class@002d
001908: 7010 8800 0000                         |0002: invoke-direct {v0}, method@0088
00190e: 6203 3000                              |0005: sget-object v3,field@0030
001912: 1a04 0f00                              |0007: const-string v4, string@000f
001916: 6e20 6e00 4300                         |0009: invoke-virtual {v3, v4}, method@006e
00191c: 1201                                   |000c: const/4 v1, #int 0 // #0
00191e: 1403 4042 0f00                         |000d: const v3, #float 0.000000 // #000f4240
001924: 3431 3900                              |0010: if-lt v1, v3, 0049 // +0039
001928: 6203 3000                              |0012: sget-object v3,field@0030
00192c: 2204 2900                              |0014: new-instance v4,class@0029
001930: 1a05 0700                              |0016: const-string v5, string@0007
001934: 7020 7f00 5400                         |0018: invoke-direct {v4, v5}, method@007f
00193a: 6e10 8900 0000                         |001b: invoke-virtual {v0}, method@0089
001940: 0b05                                   |001e: move-result-wide v5
001942: 6e30 8100 5406                         |001f: invoke-virtual {v4, v5, v6}, method@0081
001948: 0c04                                   |0022: move-result-object v4
00194a: 6e10 8300 0400                         |0023: invoke-virtual {v4}, method@0083
001950: 0c04                                   |0026: move-result-object v4
001952: 6e20 6e00 4300                         |0027: invoke-virtual {v3, v4}, method@006e
001958: 1202                                   |002a: const/4 v2, #int 0 // #0
00195a: 1403 8096 9800                         |002b: const v3, #float 0.000000 // #00989680
001960: 3432 1e00                              |002e: if-lt v2, v3, 004c // +001e
001964: 6203 3000                              |0030: sget-object v3,field@0030
001968: 2204 2900                              |0032: new-instance v4,class@0029
00196c: 1a05 0600                              |0034: const-string v5, string@0006
001970: 7020 7f00 5400                         |0036: invoke-direct {v4, v5}, method@007f
001976: 6e10 8900 0000                         |0039: invoke-virtual {v0}, method@0089
00197c: 0b05                                   |003c: move-result-wide v5
00197e: 6e30 8100 5406                         |003d: invoke-virtual {v4, v5, v6}, method@0081
001984: 0c04                                   |0040: move-result-object v4
001986: 6e10 8300 0400                         |0041: invoke-virtual {v4}, method@0083
00198c: 0c04                                   |0044: move-result-object v4
00198e: 6e20 6e00 4300                         |0045: invoke-virtual {v3, v4}, method@006e
001994: 0e00                                   |0048: return-void
001996: d801 0101                              |0049: add-int/lit8 v1, v1, #int 1 // #01
00199a: 28c2                                   |004b: goto 000d // -003e
00199c: d802 0201                              |004c: add-int/lit8 v2, v2, #int 1 // #01
0019a0: 28dd                                   |004e: goto 002b // -0023
BB begin is :  a--5   18--c   1a--d   24--12   36--1b   3c--1e   44--22   4c--26   54--2a   56--2b   60--30   72--39   78--3c   80--40   88--44   90--48   92--49   98--4c  
start add mir ,first is 0 ; second is 5!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
end with jump
start of BB is 5, 
before end of BB is 9 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00190e: 6203 3000                              |0005: sget-object v3,field@0030
=::==   001912: 1a04 0f00                              |0007: const-string v4, string@000f
=::= -----------------------
BB startOffset is : 0x190eend with second!
start of BB is c, 
before end of BB is d 
count insns of BB is 1 
========================
end with jump
start of BB is d, 
before end of BB is 10 
count insns of BB is 1 
========================
=::== -----------------------
=::==   00191e: 1403 4042 0f00                         |000d: const v3, #float 0.000000 // #000f4240
=::= -----------------------
BB startOffset is : 0x191eend with jump
start of BB is 12, 
before end of BB is 18 
count insns of BB is 3 
========================
=::== -----------------------
=::==   001928: 6203 3000                              |0012: sget-object v3,field@0030
=::==   00192c: 2204 2900                              |0014: new-instance v4,class@0029
=::==   001930: 1a05 0700                              |0016: const-string v5, string@0007
=::= -----------------------
BB startOffset is : 0x1928end with jump
start of BB is 1b, 
before end of BB is 1b 
count insns of BB is 0 
========================
end with jump
start of BB is 1e, 
before end of BB is 1f 
count insns of BB is 1 
========================
end with jump
start of BB is 22, 
before end of BB is 23 
count insns of BB is 1 
========================
end with jump
start of BB is 26, 
before end of BB is 27 
count insns of BB is 1 
========================
end with second!
start of BB is 2a, 
before end of BB is 2b 
count insns of BB is 1 
========================
end with jump
start of BB is 2b, 
before end of BB is 2e 
count insns of BB is 1 
========================
=::== -----------------------
=::==   00195a: 1403 8096 9800                         |002b: const v3, #float 0.000000 // #00989680
=::= -----------------------
BB startOffset is : 0x195aend with jump
start of BB is 30, 
before end of BB is 36 
count insns of BB is 3 
========================
=::== -----------------------
=::==   001964: 6203 3000                              |0030: sget-object v3,field@0030
=::==   001968: 2204 2900                              |0032: new-instance v4,class@0029
=::==   00196c: 1a05 0600                              |0034: const-string v5, string@0006
=::= -----------------------
BB startOffset is : 0x1964end with jump
start of BB is 39, 
before end of BB is 39 
count insns of BB is 0 
========================
end with jump
start of BB is 3c, 
before end of BB is 3d 
count insns of BB is 1 
========================
end with jump
start of BB is 40, 
before end of BB is 41 
count insns of BB is 1 
========================
end with jump
start of BB is 44, 
before end of BB is 45 
count insns of BB is 1 
========================
end with jump
start of BB is 48, 
before end of BB is 48 
count insns of BB is 0 
========================
end with jump
start of BB is 49, 
before end of BB is 4b 
count insns of BB is 1 
========================
end with jump
start of BB is 4c, 
before end of BB is 4e 
count insns of BB is 1 
========================
<<<<<<<<<<< code 34  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x19a4; insns off=0x19b4;registers is 1;insns size is 4~~~~~~~~

==!
0019b4: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
0019ba: 0e00                                   |0003: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 3 
count insns of BB is 0 
========================
<<<<<<<<<<< code 35  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x19bc; insns off=0x19cc;registers is 11;insns size is 108~~~~~~~~

==!
0019cc: 6207 3000                              |0000: sget-object v7,field@0030
0019d0: 1a08 6b00                              |0002: const-string v8, string@006b
0019d4: 6e20 6e00 8700                         |0004: invoke-virtual {v7, v8}, method@006e
0019da: 7100 8400 0000                         |0007: invoke-static {}, method@0084
0019e0: 0b05                                   |000a: move-result-wide v5
0019e2: 6207 3000                              |000b: sget-object v7,field@0030
0019e6: 2208 2900                              |000d: new-instance v8,class@0029
0019ea: 1a09 e600                              |000f: const-string v9, string@00e6
0019ee: 7020 7f00 9800                         |0011: invoke-direct {v8, v9}, method@007f
0019f4: 6e30 8100 5806                         |0014: invoke-virtual {v8, v5, v6}, method@0081
0019fa: 0c08                                   |0017: move-result-object v8
0019fc: 6e10 8300 0800                         |0018: invoke-virtual {v8}, method@0083
001a02: 0c08                                   |001b: move-result-object v8
001a04: 6e20 6e00 8700                         |001c: invoke-virtual {v7, v8}, method@006e
001a0a: 1204                                   |001f: const/4 v4, #int 0 // #0
001a0c: 1407 4042 0f00                         |0020: const v7, #float 0.000000 // #000f4240
001a12: 3474 3e00                              |0023: if-lt v4, v7, 0061 // +003e
001a16: 7100 8400 0000                         |0025: invoke-static {}, method@0084
001a1c: 0b02                                   |0028: move-result-wide v2
001a1e: 6207 3000                              |0029: sget-object v7,field@0030
001a22: 2208 2900                              |002b: new-instance v8,class@0029
001a26: 1a09 9500                              |002d: const-string v9, string@0095
001a2a: 7020 7f00 9800                         |002f: invoke-direct {v8, v9}, method@007f
001a30: 6e30 8100 2803                         |0032: invoke-virtual {v8, v2, v3}, method@0081
001a36: 0c08                                   |0035: move-result-object v8
001a38: 6e10 8300 0800                         |0036: invoke-virtual {v8}, method@0083
001a3e: 0c08                                   |0039: move-result-object v8
001a40: 6e20 6e00 8700                         |003a: invoke-virtual {v7, v8}, method@006e
001a46: 9c00 0205                              |003d: sub-long v0, v2, v5
001a4a: 6207 3000                              |003f: sget-object v7,field@0030
001a4e: 2208 2900                              |0041: new-instance v8,class@0029
001a52: 1a09 1700                              |0043: const-string v9, string@0017
001a56: 7020 7f00 9800                         |0045: invoke-direct {v8, v9}, method@007f
001a5c: 6e30 8100 0801                         |0048: invoke-virtual {v8, v0, v1}, method@0081
001a62: 0c08                                   |004b: move-result-object v8
001a64: 6e10 8300 0800                         |004c: invoke-virtual {v8}, method@0083
001a6a: 0c08                                   |004f: move-result-object v8
001a6c: 6e20 6e00 8700                         |0050: invoke-virtual {v7, v8}, method@006e
001a72: 1607 0000                              |0053: const-wide/16 v7, #int 0 // #0
001a76: 3107 0007                              |0055: cmp-long v7, v0, v7
001a7a: 3d07 0d00                              |0057: if-lez v7, 0064 // +000d
001a7e: 6207 3000                              |0059: sget-object v7,field@0030
001a82: 1a08 1600                              |005b: const-string v8, string@0016
001a86: 6e20 6e00 8700                         |005d: invoke-virtual {v7, v8}, method@006e
001a8c: 0e00                                   |0060: return-void
001a8e: d804 0401                              |0061: add-int/lit8 v4, v4, #int 1 // #01
001a92: 28bd                                   |0063: goto 0020 // -0043
001a94: 6207 3000                              |0064: sget-object v7,field@0030
001a98: 1a08 1500                              |0066: const-string v8, string@0015
001a9c: 6e20 6e00 8700                         |0068: invoke-virtual {v7, v8}, method@006e
001aa2: 28f5                                   |006b: goto 0060 // -000b
BB begin is :  e--7   14--a   28--14   2e--17   36--1b   3e--1f   40--20   4a--25   50--28   64--32   6a--35   72--39   7a--3d   90--48   96--4b   9e--4f   a6--53   b2--59   c0--60   c2--61   c8--64   d6--6b  
start add mir ,first is 0 ; second is 7!
end with jump
start of BB is 0, 
before end of BB is 4 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0019cc: 6207 3000                              |0000: sget-object v7,field@0030
=::==   0019d0: 1a08 6b00                              |0002: const-string v8, string@006b
=::= -----------------------
BB startOffset is : 0x19ccend with jump
start of BB is 7, 
before end of BB is 7 
count insns of BB is 0 
========================
end with jump
start of BB is a, 
before end of BB is 11 
count insns of BB is 4 
========================
=::== -----------------------
=::==   0019e0: 0b05                                   |000a: move-result-wide v5
=::==   0019e2: 6207 3000                              |000b: sget-object v7,field@0030
=::==   0019e6: 2208 2900                              |000d: new-instance v8,class@0029
=::==   0019ea: 1a09 e600                              |000f: const-string v9, string@00e6
=::= -----------------------
BB startOffset is : 0x19e0end with jump
start of BB is 14, 
before end of BB is 14 
count insns of BB is 0 
========================
end with jump
start of BB is 17, 
before end of BB is 18 
count insns of BB is 1 
========================
end with jump
start of BB is 1b, 
before end of BB is 1c 
count insns of BB is 1 
========================
end with second!
start of BB is 1f, 
before end of BB is 20 
count insns of BB is 1 
========================
end with jump
start of BB is 20, 
before end of BB is 23 
count insns of BB is 1 
========================
=::== -----------------------
=::==   001a0c: 1407 4042 0f00                         |0020: const v7, #float 0.000000 // #000f4240
=::= -----------------------
BB startOffset is : 0x1a0cend with jump
start of BB is 25, 
before end of BB is 25 
count insns of BB is 0 
========================
end with jump
start of BB is 28, 
before end of BB is 2f 
count insns of BB is 4 
========================
=::== -----------------------
=::==   001a1c: 0b02                                   |0028: move-result-wide v2
=::==   001a1e: 6207 3000                              |0029: sget-object v7,field@0030
=::==   001a22: 2208 2900                              |002b: new-instance v8,class@0029
=::==   001a26: 1a09 9500                              |002d: const-string v9, string@0095
=::= -----------------------
BB startOffset is : 0x1a1cend with jump
start of BB is 32, 
before end of BB is 32 
count insns of BB is 0 
========================
end with jump
start of BB is 35, 
before end of BB is 36 
count insns of BB is 1 
========================
end with jump
start of BB is 39, 
before end of BB is 3a 
count insns of BB is 1 
========================
end with jump
start of BB is 3d, 
before end of BB is 45 
count insns of BB is 4 
========================
=::== -----------------------
=::==   001a46: 9c00 0205                              |003d: sub-long v0, v2, v5
=::==   001a4a: 6207 3000                              |003f: sget-object v7,field@0030
=::==   001a4e: 2208 2900                              |0041: new-instance v8,class@0029
=::==   001a52: 1a09 1700                              |0043: const-string v9, string@0017
=::= -----------------------
BB startOffset is : 0x1a46end with jump
start of BB is 48, 
before end of BB is 48 
count insns of BB is 0 
========================
end with jump
start of BB is 4b, 
before end of BB is 4c 
count insns of BB is 1 
========================
end with jump
start of BB is 4f, 
before end of BB is 50 
count insns of BB is 1 
========================
end with jump
start of BB is 53, 
before end of BB is 57 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001a72: 1607 0000                              |0053: const-wide/16 v7, #int 0 // #0
=::==   001a76: 3107 0007                              |0055: cmp-long v7, v0, v7
=::= -----------------------
BB startOffset is : 0x1a72end with jump
start of BB is 59, 
before end of BB is 5d 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001a7e: 6207 3000                              |0059: sget-object v7,field@0030
=::==   001a82: 1a08 1600                              |005b: const-string v8, string@0016
=::= -----------------------
BB startOffset is : 0x1a7eend with jump
start of BB is 60, 
before end of BB is 60 
count insns of BB is 0 
========================
end with jump
start of BB is 61, 
before end of BB is 63 
count insns of BB is 1 
========================
end with jump
start of BB is 64, 
before end of BB is 68 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001a94: 6207 3000                              |0064: sget-object v7,field@0030
=::==   001a98: 1a08 1500                              |0066: const-string v8, string@0015
=::= -----------------------
BB startOffset is : 0x1a94end with jump
start of BB is 6b, 
before end of BB is 6b 
count insns of BB is 0 
========================
<<<<<<<<<<< code 36  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1aa4; insns off=0x1ab4;registers is 2;insns size is 12~~~~~~~~

==!
001ab4: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
001aba: 1300 1400                              |0003: const/16 v0, #int 20 // #14
001abe: 5910 1400                              |0005: iput v0, v1,field@0014
001ac2: 1300 b900                              |0007: const/16 v0, #int 185 // #b9
001ac6: 5910 1700                              |0009: iput v0, v1,field@0017
001aca: 0e00                                   |000b: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is b 
count insns of BB is 4 
========================
=::== -----------------------
=::==   001aba: 1300 1400                              |0003: const/16 v0, #int 20 // #14
=::==   001abe: 5910 1400                              |0005: iput v0, v1,field@0014
=::==   001ac2: 1300 b900                              |0007: const/16 v0, #int 185 // #b9
=::==   001ac6: 5910 1700                              |0009: iput v0, v1,field@0017
=::= -----------------------
BB startOffset is : 0x1aba<<<<<<<<<<< code 37  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1acc; insns off=0x1adc;registers is 2;insns size is 2~~~~~~~~

==!
001adc: 1200                                   |0000: const/4 v0, #int 0 // #0
001ade: 0f00                                   |0001: return v0
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 1 
count insns of BB is 1 
========================
<<<<<<<<<<< code 38  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1ae0; insns off=0x1af0;registers is 2;insns size is 3~~~~~~~~

==!
001af0: 1300 6111                              |0000: const/16 v0, #int 4449 // #1161
001af4: 0f00                                   |0002: return v0
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
<<<<<<<<<<< code 39  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1af8; insns off=0x1b08;registers is 19;insns size is 241~~~~~~~~

==!
001b08: 1208                                   |0000: const/4 v8, #int 0 // #0
001b0a: 0800 1200                              |0001: move-object/from16 v0, v18
001b0e: 5200 1700                              |0003: iget v0, v0,field@0017
001b12: 010b                                   |0005: move v11, v0
001b14: 34b8 0300                              |0006: if-lt v8, v11, 0009 // +0003
001b18: 0f08                                   |0008: return v8
001b1a: 828b                                   |0009: int-to-float v11, v8
001b1c: 89bb                                   |000a: float-to-double v11, v11
001b1e: 180d 182d 4454 fb21 0940               |000b: const-wide v13, #double 3.141593 // #400921fb54442d18
001b28: cddb                                   |0010: mul-double/2addr v11, v13
001b2a: 180d 0000 0000 0080 6640               |0011: const-wide v13, #double 180.000000 // #4066800000000000
001b34: ae01 0b0d                              |0016: div-double v1, v11, v13
001b38: 7120 7700 2100                         |0018: invoke-static {v1, v2}, method@0077
001b3e: 0b03                                   |001b: move-result-wide v3
001b40: 7120 7400 2100                         |001c: invoke-static {v1, v2}, method@0074
001b46: 0b05                                   |001f: move-result-wide v5
001b48: 0800 1200                              |0020: move-object/from16 v0, v18
001b4c: 5400 1800                              |0022: iget-object v0, v0,field@0018
001b50: 070b                                   |0024: move-object v11, v0
001b52: 120c                                   |0025: const/4 v12, #int 0 // #0
001b54: 460b 0b0c                              |0026: aget-object v11, v11, v12
001b58: 120c                                   |0028: const/4 v12, #int 0 // #0
001b5a: 4c05 0b0c                              |0029: aput-wide v5, v11, v12
001b5e: 0800 1200                              |002b: move-object/from16 v0, v18
001b62: 5400 1800                              |002d: iget-object v0, v0,field@0018
001b66: 070b                                   |002f: move-object v11, v0
001b68: 121c                                   |0030: const/4 v12, #int 1 // #1
001b6a: 460b 0b0c                              |0031: aget-object v11, v11, v12
001b6e: 120c                                   |0033: const/4 v12, #int 0 // #0
001b70: 4c03 0b0c                              |0034: aput-wide v3, v11, v12
001b74: 0800 1200                              |0036: move-object/from16 v0, v18
001b78: 5400 1800                              |0038: iget-object v0, v0,field@0018
001b7c: 070b                                   |003a: move-object v11, v0
001b7e: 122c                                   |003b: const/4 v12, #int 2 // #2
001b80: 460b 0b0c                              |003c: aget-object v11, v11, v12
001b84: 120c                                   |003e: const/4 v12, #int 0 // #0
001b86: 160d 0000                              |003f: const-wide/16 v13, #int 0 // #0
001b8a: 4c0d 0b0c                              |0041: aput-wide v13, v11, v12
001b8e: 0800 1200                              |0043: move-object/from16 v0, v18
001b92: 5400 1800                              |0045: iget-object v0, v0,field@0018
001b96: 070b                                   |0047: move-object v11, v0
001b98: 120c                                   |0048: const/4 v12, #int 0 // #0
001b9a: 460b 0b0c                              |0049: aget-object v11, v11, v12
001b9e: 121c                                   |004b: const/4 v12, #int 1 // #1
001ba0: 803d                                   |004c: neg-double v13, v3
001ba2: 4c0d 0b0c                              |004d: aput-wide v13, v11, v12
001ba6: 0800 1200                              |004f: move-object/from16 v0, v18
001baa: 5400 1800                              |0051: iget-object v0, v0,field@0018
001bae: 070b                                   |0053: move-object v11, v0
001bb0: 121c                                   |0054: const/4 v12, #int 1 // #1
001bb2: 460b 0b0c                              |0055: aget-object v11, v11, v12
001bb6: 121c                                   |0057: const/4 v12, #int 1 // #1
001bb8: 4c05 0b0c                              |0058: aput-wide v5, v11, v12
001bbc: 0800 1200                              |005a: move-object/from16 v0, v18
001bc0: 5400 1800                              |005c: iget-object v0, v0,field@0018
001bc4: 070b                                   |005e: move-object v11, v0
001bc6: 122c                                   |005f: const/4 v12, #int 2 // #2
001bc8: 460b 0b0c                              |0060: aget-object v11, v11, v12
001bcc: 121c                                   |0062: const/4 v12, #int 1 // #1
001bce: 160d 0000                              |0063: const-wide/16 v13, #int 0 // #0
001bd2: 4c0d 0b0c                              |0065: aput-wide v13, v11, v12
001bd6: 0800 1200                              |0067: move-object/from16 v0, v18
001bda: 5400 1800                              |0069: iget-object v0, v0,field@0018
001bde: 070b                                   |006b: move-object v11, v0
001be0: 120c                                   |006c: const/4 v12, #int 0 // #0
001be2: 460b 0b0c                              |006d: aget-object v11, v11, v12
001be6: 122c                                   |006f: const/4 v12, #int 2 // #2
001be8: 160d 0000                              |0070: const-wide/16 v13, #int 0 // #0
001bec: 4c0d 0b0c                              |0072: aput-wide v13, v11, v12
001bf0: 0800 1200                              |0074: move-object/from16 v0, v18
001bf4: 5400 1800                              |0076: iget-object v0, v0,field@0018
001bf8: 070b                                   |0078: move-object v11, v0
001bfa: 121c                                   |0079: const/4 v12, #int 1 // #1
001bfc: 460b 0b0c                              |007a: aget-object v11, v11, v12
001c00: 122c                                   |007c: const/4 v12, #int 2 // #2
001c02: 160d 0000                              |007d: const-wide/16 v13, #int 0 // #0
001c06: 4c0d 0b0c                              |007f: aput-wide v13, v11, v12
001c0a: 0800 1200                              |0081: move-object/from16 v0, v18
001c0e: 5400 1800                              |0083: iget-object v0, v0,field@0018
001c12: 070b                                   |0085: move-object v11, v0
001c14: 122c                                   |0086: const/4 v12, #int 2 // #2
001c16: 460b 0b0c                              |0087: aget-object v11, v11, v12
001c1a: 122c                                   |0089: const/4 v12, #int 2 // #2
001c1c: 190d f03f                              |008a: const-wide/high16 v13, #long 4607182418800017408 // #3ff0
001c20: 4c0d 0b0c                              |008c: aput-wide v13, v11, v12
001c24: 1207                                   |008e: const/4 v7, #int 0 // #0
001c26: 0800 1200                              |008f: move-object/from16 v0, v18
001c2a: 5400 1600                              |0091: iget-object v0, v0,field@0016
001c2e: 070b                                   |0093: move-object v11, v0
001c30: 120c                                   |0094: const/4 v12, #int 0 // #0
001c32: 460b 0b0c                              |0095: aget-object v11, v11, v12
001c36: 160c 0000                              |0097: const-wide/16 v12, #int 0 // #0
001c3a: 4c0c 0b07                              |0099: aput-wide v12, v11, v7
001c3e: 0800 1200                              |009b: move-object/from16 v0, v18
001c42: 5400 1600                              |009d: iget-object v0, v0,field@0016
001c46: 070b                                   |009f: move-object v11, v0
001c48: 121c                                   |00a0: const/4 v12, #int 1 // #1
001c4a: 460b 0b0c                              |00a1: aget-object v11, v11, v12
001c4e: 160c 0000                              |00a3: const-wide/16 v12, #int 0 // #0
001c52: 4c0c 0b07                              |00a5: aput-wide v12, v11, v7
001c56: 0800 1200                              |00a7: move-object/from16 v0, v18
001c5a: 5400 1600                              |00a9: iget-object v0, v0,field@0016
001c5e: 070b                                   |00ab: move-object v11, v0
001c60: 122c                                   |00ac: const/4 v12, #int 2 // #2
001c62: 460b 0b0c                              |00ad: aget-object v11, v11, v12
001c66: 160c 0000                              |00af: const-wide/16 v12, #int 0 // #0
001c6a: 4c0c 0b07                              |00b1: aput-wide v12, v11, v7
001c6e: 120a                                   |00b3: const/4 v10, #int 0 // #0
001c70: 1209                                   |00b4: const/4 v9, #int 0 // #0
001c72: 0800 1200                              |00b5: move-object/from16 v0, v18
001c76: 5400 1600                              |00b7: iget-object v0, v0,field@0016
001c7a: 070b                                   |00b9: move-object v11, v0
001c7c: 460b 0b0a                              |00ba: aget-object v11, v11, v10
001c80: 0800 1200                              |00bc: move-object/from16 v0, v18
001c84: 5400 1600                              |00be: iget-object v0, v0,field@0016
001c88: 070c                                   |00c0: move-object v12, v0
001c8a: 460c 0c0a                              |00c1: aget-object v12, v12, v10
001c8e: 450c 0c07                              |00c3: aget-wide v12, v12, v7
001c92: 0800 1200                              |00c5: move-object/from16 v0, v18
001c96: 5400 1800                              |00c7: iget-object v0, v0,field@0018
001c9a: 070e                                   |00c9: move-object v14, v0
001c9c: 460e 0e09                              |00ca: aget-object v14, v14, v9
001ca0: 450e 0e0a                              |00cc: aget-wide v14, v14, v10
001ca4: 0800 1200                              |00ce: move-object/from16 v0, v18
001ca8: 5400 1600                              |00d0: iget-object v0, v0,field@0016
001cac: 0810 0000                              |00d2: move-object/from16 v16, v0
001cb0: 4610 100a                              |00d4: aget-object v16, v16, v10
001cb4: 4510 1007                              |00d6: aget-wide v16, v16, v7
001cb8: ad0e 0e10                              |00d8: mul-double v14, v14, v16
001cbc: cbec                                   |00da: add-double/2addr v12, v14
001cbe: 4c0c 0b07                              |00db: aput-wide v12, v11, v7
001cc2: d809 0901                              |00dd: add-int/lit8 v9, v9, #int 1 // #01
001cc6: 123b                                   |00df: const/4 v11, #int 3 // #3
001cc8: 34b9 d5ff                              |00e0: if-lt v9, v11, 00b5 // -002b
001ccc: d80a 0a01                              |00e2: add-int/lit8 v10, v10, #int 1 // #01
001cd0: 123b                                   |00e4: const/4 v11, #int 3 // #3
001cd2: 34ba cfff                              |00e5: if-lt v10, v11, 00b4 // -0031
001cd6: d807 0701                              |00e7: add-int/lit8 v7, v7, #int 1 // #01
001cda: 130b 1400                              |00e9: const/16 v11, #int 20 // #14
001cde: 34b7 a4ff                              |00eb: if-lt v7, v11, 008f // -005c
001ce2: d808 0805                              |00ed: add-int/lit8 v8, v8, #int 5 // #05
001ce6: 2900 12ff                              |00ef: goto/16 0001 // -00ee
BB begin is :  2--1   10--8   12--9   36--1b   3e--1f   11e--8f   168--b4   16a--b5   1c4--e2   1ce--e7   1da--ed  
start add mir ,first is 0 ; second is 1!
end with second!
start of BB is 0, 
before end of BB is 1 
count insns of BB is 1 
========================
end with jump
start of BB is 1, 
before end of BB is 6 
count insns of BB is 3 
========================
=::== -----------------------
=::==   001b0a: 0800 1200                              |0001: move-object/from16 v0, v18
=::==   001b0e: 5200 1700                              |0003: iget v0, v0,field@0017
=::==   001b12: 010b                                   |0005: move v11, v0
=::= -----------------------
BB startOffset is : 0x1b0aend with jump
start of BB is 8, 
before end of BB is 8 
count insns of BB is 0 
========================
end with jump
start of BB is 9, 
before end of BB is 18 
count insns of BB is 6 
========================
=::== -----------------------
=::==   001b1a: 828b                                   |0009: int-to-float v11, v8
=::==   001b1c: 89bb                                   |000a: float-to-double v11, v11
=::==   001b1e: 180d 182d 4454 fb21 0940               |000b: const-wide v13, #double 3.141593 // #400921fb54442d18
=::==   001b28: cddb                                   |0010: mul-double/2addr v11, v13
=::==   001b2a: 180d 0000 0000 0080 6640               |0011: const-wide v13, #double 180.000000 // #4066800000000000
=::==   001b34: ae01 0b0d                              |0016: div-double v1, v11, v13
=::= -----------------------
BB startOffset is : 0x1b1aend with jump
start of BB is 1b, 
before end of BB is 1c 
count insns of BB is 1 
========================
end with second!
start of BB is 1f, 
before end of BB is 8f 
count insns of BB is 71 
========================
=::== -----------------------
=::==   001b46: 0b05                                   |001f: move-result-wide v5
=::==   001b48: 0800 1200                              |0020: move-object/from16 v0, v18
=::==   001b4c: 5400 1800                              |0022: iget-object v0, v0,field@0018
=::==   001b50: 070b                                   |0024: move-object v11, v0
=::==   001b52: 120c                                   |0025: const/4 v12, #int 0 // #0
=::==   001b54: 460b 0b0c                              |0026: aget-object v11, v11, v12
=::==   001b58: 120c                                   |0028: const/4 v12, #int 0 // #0
=::==   001b5a: 4c05 0b0c                              |0029: aput-wide v5, v11, v12
=::==   001b5e: 0800 1200                              |002b: move-object/from16 v0, v18
=::==   001b62: 5400 1800                              |002d: iget-object v0, v0,field@0018
=::==   001b66: 070b                                   |002f: move-object v11, v0
=::==   001b68: 121c                                   |0030: const/4 v12, #int 1 // #1
=::==   001b6a: 460b 0b0c                              |0031: aget-object v11, v11, v12
=::==   001b6e: 120c                                   |0033: const/4 v12, #int 0 // #0
=::==   001b70: 4c03 0b0c                              |0034: aput-wide v3, v11, v12
=::==   001b74: 0800 1200                              |0036: move-object/from16 v0, v18
=::==   001b78: 5400 1800                              |0038: iget-object v0, v0,field@0018
=::==   001b7c: 070b                                   |003a: move-object v11, v0
=::==   001b7e: 122c                                   |003b: const/4 v12, #int 2 // #2
=::==   001b80: 460b 0b0c                              |003c: aget-object v11, v11, v12
=::==   001b84: 120c                                   |003e: const/4 v12, #int 0 // #0
=::==   001b86: 160d 0000                              |003f: const-wide/16 v13, #int 0 // #0
=::==   001b8a: 4c0d 0b0c                              |0041: aput-wide v13, v11, v12
=::==   001b8e: 0800 1200                              |0043: move-object/from16 v0, v18
=::==   001b92: 5400 1800                              |0045: iget-object v0, v0,field@0018
=::==   001b96: 070b                                   |0047: move-object v11, v0
=::==   001b98: 120c                                   |0048: const/4 v12, #int 0 // #0
=::==   001b9a: 460b 0b0c                              |0049: aget-object v11, v11, v12
=::==   001b9e: 121c                                   |004b: const/4 v12, #int 1 // #1
=::==   001ba0: 803d                                   |004c: neg-double v13, v3
=::==   001ba2: 4c0d 0b0c                              |004d: aput-wide v13, v11, v12
=::==   001ba6: 0800 1200                              |004f: move-object/from16 v0, v18
=::==   001baa: 5400 1800                              |0051: iget-object v0, v0,field@0018
=::==   001bae: 070b                                   |0053: move-object v11, v0
=::==   001bb0: 121c                                   |0054: const/4 v12, #int 1 // #1
=::==   001bb2: 460b 0b0c                              |0055: aget-object v11, v11, v12
=::==   001bb6: 121c                                   |0057: const/4 v12, #int 1 // #1
=::==   001bb8: 4c05 0b0c                              |0058: aput-wide v5, v11, v12
=::==   001bbc: 0800 1200                              |005a: move-object/from16 v0, v18
=::==   001bc0: 5400 1800                              |005c: iget-object v0, v0,field@0018
=::==   001bc4: 070b                                   |005e: move-object v11, v0
=::==   001bc6: 122c                                   |005f: const/4 v12, #int 2 // #2
=::==   001bc8: 460b 0b0c                              |0060: aget-object v11, v11, v12
=::==   001bcc: 121c                                   |0062: const/4 v12, #int 1 // #1
=::==   001bce: 160d 0000                              |0063: const-wide/16 v13, #int 0 // #0
=::==   001bd2: 4c0d 0b0c                              |0065: aput-wide v13, v11, v12
=::==   001bd6: 0800 1200                              |0067: move-object/from16 v0, v18
=::==   001bda: 5400 1800                              |0069: iget-object v0, v0,field@0018
=::==   001bde: 070b                                   |006b: move-object v11, v0
=::==   001be0: 120c                                   |006c: const/4 v12, #int 0 // #0
=::==   001be2: 460b 0b0c                              |006d: aget-object v11, v11, v12
=::==   001be6: 122c                                   |006f: const/4 v12, #int 2 // #2
=::==   001be8: 160d 0000                              |0070: const-wide/16 v13, #int 0 // #0
=::==   001bec: 4c0d 0b0c                              |0072: aput-wide v13, v11, v12
=::==   001bf0: 0800 1200                              |0074: move-object/from16 v0, v18
=::==   001bf4: 5400 1800                              |0076: iget-object v0, v0,field@0018
=::==   001bf8: 070b                                   |0078: move-object v11, v0
=::==   001bfa: 121c                                   |0079: const/4 v12, #int 1 // #1
=::==   001bfc: 460b 0b0c                              |007a: aget-object v11, v11, v12
=::==   001c00: 122c                                   |007c: const/4 v12, #int 2 // #2
=::==   001c02: 160d 0000                              |007d: const-wide/16 v13, #int 0 // #0
=::==   001c06: 4c0d 0b0c                              |007f: aput-wide v13, v11, v12
=::==   001c0a: 0800 1200                              |0081: move-object/from16 v0, v18
=::==   001c0e: 5400 1800                              |0083: iget-object v0, v0,field@0018
=::==   001c12: 070b                                   |0085: move-object v11, v0
=::==   001c14: 122c                                   |0086: const/4 v12, #int 2 // #2
=::==   001c16: 460b 0b0c                              |0087: aget-object v11, v11, v12
=::==   001c1a: 122c                                   |0089: const/4 v12, #int 2 // #2
=::==   001c1c: 190d f03f                              |008a: const-wide/high16 v13, #long 4607182418800017408 // #3ff0
=::==   001c20: 4c0d 0b0c                              |008c: aput-wide v13, v11, v12
=::==   001c24: 1207                                   |008e: const/4 v7, #int 0 // #0
=::= -----------------------
BB startOffset is : 0x1b46end with second!
start of BB is 8f, 
before end of BB is b4 
count insns of BB is 22 
========================
=::== -----------------------
=::==   001c26: 0800 1200                              |008f: move-object/from16 v0, v18
=::==   001c2a: 5400 1600                              |0091: iget-object v0, v0,field@0016
=::==   001c2e: 070b                                   |0093: move-object v11, v0
=::==   001c30: 120c                                   |0094: const/4 v12, #int 0 // #0
=::==   001c32: 460b 0b0c                              |0095: aget-object v11, v11, v12
=::==   001c36: 160c 0000                              |0097: const-wide/16 v12, #int 0 // #0
=::==   001c3a: 4c0c 0b07                              |0099: aput-wide v12, v11, v7
=::==   001c3e: 0800 1200                              |009b: move-object/from16 v0, v18
=::==   001c42: 5400 1600                              |009d: iget-object v0, v0,field@0016
=::==   001c46: 070b                                   |009f: move-object v11, v0
=::==   001c48: 121c                                   |00a0: const/4 v12, #int 1 // #1
=::==   001c4a: 460b 0b0c                              |00a1: aget-object v11, v11, v12
=::==   001c4e: 160c 0000                              |00a3: const-wide/16 v12, #int 0 // #0
=::==   001c52: 4c0c 0b07                              |00a5: aput-wide v12, v11, v7
=::==   001c56: 0800 1200                              |00a7: move-object/from16 v0, v18
=::==   001c5a: 5400 1600                              |00a9: iget-object v0, v0,field@0016
=::==   001c5e: 070b                                   |00ab: move-object v11, v0
=::==   001c60: 122c                                   |00ac: const/4 v12, #int 2 // #2
=::==   001c62: 460b 0b0c                              |00ad: aget-object v11, v11, v12
=::==   001c66: 160c 0000                              |00af: const-wide/16 v12, #int 0 // #0
=::==   001c6a: 4c0c 0b07                              |00b1: aput-wide v12, v11, v7
=::==   001c6e: 120a                                   |00b3: const/4 v10, #int 0 // #0
=::= -----------------------
BB startOffset is : 0x1c26end with second!
start of BB is b4, 
before end of BB is b5 
count insns of BB is 1 
========================
end with jump
start of BB is b5, 
before end of BB is e0 
count insns of BB is 24 
========================
=::== -----------------------
=::==   001c72: 0800 1200                              |00b5: move-object/from16 v0, v18
=::==   001c76: 5400 1600                              |00b7: iget-object v0, v0,field@0016
=::==   001c7a: 070b                                   |00b9: move-object v11, v0
=::==   001c7c: 460b 0b0a                              |00ba: aget-object v11, v11, v10
=::==   001c80: 0800 1200                              |00bc: move-object/from16 v0, v18
=::==   001c84: 5400 1600                              |00be: iget-object v0, v0,field@0016
=::==   001c88: 070c                                   |00c0: move-object v12, v0
=::==   001c8a: 460c 0c0a                              |00c1: aget-object v12, v12, v10
=::==   001c8e: 450c 0c07                              |00c3: aget-wide v12, v12, v7
=::==   001c92: 0800 1200                              |00c5: move-object/from16 v0, v18
=::==   001c96: 5400 1800                              |00c7: iget-object v0, v0,field@0018
=::==   001c9a: 070e                                   |00c9: move-object v14, v0
=::==   001c9c: 460e 0e09                              |00ca: aget-object v14, v14, v9
=::==   001ca0: 450e 0e0a                              |00cc: aget-wide v14, v14, v10
=::==   001ca4: 0800 1200                              |00ce: move-object/from16 v0, v18
=::==   001ca8: 5400 1600                              |00d0: iget-object v0, v0,field@0016
=::==   001cac: 0810 0000                              |00d2: move-object/from16 v16, v0
=::==   001cb0: 4610 100a                              |00d4: aget-object v16, v16, v10
=::==   001cb4: 4510 1007                              |00d6: aget-wide v16, v16, v7
=::==   001cb8: ad0e 0e10                              |00d8: mul-double v14, v14, v16
=::==   001cbc: cbec                                   |00da: add-double/2addr v12, v14
=::==   001cbe: 4c0c 0b07                              |00db: aput-wide v12, v11, v7
=::==   001cc2: d809 0901                              |00dd: add-int/lit8 v9, v9, #int 1 // #01
=::==   001cc6: 123b                                   |00df: const/4 v11, #int 3 // #3
=::= -----------------------
BB startOffset is : 0x1c72end with jump
start of BB is e2, 
before end of BB is e5 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001ccc: d80a 0a01                              |00e2: add-int/lit8 v10, v10, #int 1 // #01
=::==   001cd0: 123b                                   |00e4: const/4 v11, #int 3 // #3
=::= -----------------------
BB startOffset is : 0x1cccend with jump
start of BB is e7, 
before end of BB is eb 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001cd6: d807 0701                              |00e7: add-int/lit8 v7, v7, #int 1 // #01
=::==   001cda: 130b 1400                              |00e9: const/16 v11, #int 20 // #14
=::= -----------------------
BB startOffset is : 0x1cd6end with jump
start of BB is ed, 
before end of BB is ef 
count insns of BB is 1 
========================
<<<<<<<<<<< code 40  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1cec; insns off=0x1cfc;registers is 10;insns size is 86~~~~~~~~

==!
001cfc: 1217                                   |0000: const/4 v7, #int 1 // #1
001cfe: 1306 1400                              |0001: const/16 v6, #int 20 // #14
001d02: 1233                                   |0003: const/4 v3, #int 3 // #3
001d04: 3809 0400                              |0004: if-eqz v9, 0008 // +0004
001d08: 5989 1700                              |0006: iput v9, v8,field@0017
001d0c: 2420 3100 3300                         |0008: filled-new-array {v3, v3}, class@0031
001d12: 0c01                                   |000b: move-result-object v1
001d14: 6202 2f00                              |000c: sget-object v2,field@002f
001d18: 7120 8700 1200                         |000e: invoke-static {v2, v1}, method@0087
001d1e: 0c01                                   |0011: move-result-object v1
001d20: 1f01 3300                              |0012: check-cast v1,class@0033
001d24: 5b81 1800                              |0014: iput-object v1, v8,field@0018
001d28: 2420 3100 6300                         |0016: filled-new-array {v3, v6}, class@0031
001d2e: 0c01                                   |0019: move-result-object v1
001d30: 6202 2f00                              |001a: sget-object v2,field@002f
001d34: 7120 8700 1200                         |001c: invoke-static {v2, v1}, method@0087
001d3a: 0c01                                   |001f: move-result-object v1
001d3c: 1f01 3300                              |0020: check-cast v1,class@0033
001d40: 5b81 1500                              |0022: iput-object v1, v8,field@0015
001d44: 2420 3100 6300                         |0024: filled-new-array {v3, v6}, class@0031
001d4a: 0c01                                   |0027: move-result-object v1
001d4c: 6202 2f00                              |0028: sget-object v2,field@002f
001d50: 7120 8700 1200                         |002a: invoke-static {v2, v1}, method@0087
001d56: 0c01                                   |002d: move-result-object v1
001d58: 1f01 3300                              |002e: check-cast v1,class@0033
001d5c: 5b81 1600                              |0030: iput-object v1, v8,field@0016
001d60: 1200                                   |0032: const/4 v0, #int 0 // #0
001d62: 5481 1500                              |0033: iget-object v1, v8,field@0015
001d66: 1202                                   |0035: const/4 v2, #int 0 // #0
001d68: 4601 0102                              |0036: aget-object v1, v1, v2
001d6c: 8302                                   |0038: int-to-double v2, v0
001d6e: 4c02 0100                              |0039: aput-wide v2, v1, v0
001d72: 5481 1500                              |003b: iget-object v1, v8,field@0015
001d76: 4601 0107                              |003d: aget-object v1, v1, v7
001d7a: 7b02                                   |003f: neg-int v2, v0
001d7c: 8322                                   |0040: int-to-double v2, v2
001d7e: 4c02 0100                              |0041: aput-wide v2, v1, v0
001d82: 5481 1500                              |0043: iget-object v1, v8,field@0015
001d86: 1222                                   |0045: const/4 v2, #int 2 // #2
001d88: 4601 0102                              |0046: aget-object v1, v1, v2
001d8c: 8302                                   |0048: int-to-double v2, v0
001d8e: 1804 182d 4454 fb21 0940               |0049: const-wide v4, #double 3.141593 // #400921fb54442d18
001d98: cd42                                   |004e: mul-double/2addr v2, v4
001d9a: 4c02 0100                              |004f: aput-wide v2, v1, v0
001d9e: d800 0001                              |0051: add-int/lit8 v0, v0, #int 1 // #01
001da2: 3460 e0ff                              |0053: if-lt v0, v6, 0033 // -0020
001da6: 0f07                                   |0055: return v7
BB begin is :  c--6   10--8   22--11   3e--1f   5a--2d   66--33   aa--55  
start add mir ,first is 0 ; second is 6!
end with jump
start of BB is 0, 
before end of BB is 4 
count insns of BB is 3 
========================
=::== -----------------------
=::==   001cfc: 1217                                   |0000: const/4 v7, #int 1 // #1
=::==   001cfe: 1306 1400                              |0001: const/16 v6, #int 20 // #14
=::==   001d02: 1233                                   |0003: const/4 v3, #int 3 // #3
=::= -----------------------
BB startOffset is : 0x1cfcend with second!
start of BB is 6, 
before end of BB is 8 
count insns of BB is 1 
========================
end with jump
start of BB is 8, 
before end of BB is e 
count insns of BB is 3 
========================
=::== -----------------------
=::==   001d0c: 2420 3100 3300                         |0008: filled-new-array {v3, v3}, class@0031
=::==   001d12: 0c01                                   |000b: move-result-object v1
=::==   001d14: 6202 2f00                              |000c: sget-object v2,field@002f
=::= -----------------------
BB startOffset is : 0x1d0cend with jump
start of BB is 11, 
before end of BB is 1c 
count insns of BB is 6 
========================
=::== -----------------------
=::==   001d1e: 0c01                                   |0011: move-result-object v1
=::==   001d20: 1f01 3300                              |0012: check-cast v1,class@0033
=::==   001d24: 5b81 1800                              |0014: iput-object v1, v8,field@0018
=::==   001d28: 2420 3100 6300                         |0016: filled-new-array {v3, v6}, class@0031
=::==   001d2e: 0c01                                   |0019: move-result-object v1
=::==   001d30: 6202 2f00                              |001a: sget-object v2,field@002f
=::= -----------------------
BB startOffset is : 0x1d1eend with jump
start of BB is 1f, 
before end of BB is 2a 
count insns of BB is 6 
========================
=::== -----------------------
=::==   001d3a: 0c01                                   |001f: move-result-object v1
=::==   001d3c: 1f01 3300                              |0020: check-cast v1,class@0033
=::==   001d40: 5b81 1500                              |0022: iput-object v1, v8,field@0015
=::==   001d44: 2420 3100 6300                         |0024: filled-new-array {v3, v6}, class@0031
=::==   001d4a: 0c01                                   |0027: move-result-object v1
=::==   001d4c: 6202 2f00                              |0028: sget-object v2,field@002f
=::= -----------------------
BB startOffset is : 0x1d3aend with second!
start of BB is 2d, 
before end of BB is 33 
count insns of BB is 4 
========================
=::== -----------------------
=::==   001d56: 0c01                                   |002d: move-result-object v1
=::==   001d58: 1f01 3300                              |002e: check-cast v1,class@0033
=::==   001d5c: 5b81 1600                              |0030: iput-object v1, v8,field@0016
=::==   001d60: 1200                                   |0032: const/4 v0, #int 0 // #0
=::= -----------------------
BB startOffset is : 0x1d56end with jump
start of BB is 33, 
before end of BB is 53 
count insns of BB is 18 
========================
=::== -----------------------
=::==   001d62: 5481 1500                              |0033: iget-object v1, v8,field@0015
=::==   001d66: 1202                                   |0035: const/4 v2, #int 0 // #0
=::==   001d68: 4601 0102                              |0036: aget-object v1, v1, v2
=::==   001d6c: 8302                                   |0038: int-to-double v2, v0
=::==   001d6e: 4c02 0100                              |0039: aput-wide v2, v1, v0
=::==   001d72: 5481 1500                              |003b: iget-object v1, v8,field@0015
=::==   001d76: 4601 0107                              |003d: aget-object v1, v1, v7
=::==   001d7a: 7b02                                   |003f: neg-int v2, v0
=::==   001d7c: 8322                                   |0040: int-to-double v2, v2
=::==   001d7e: 4c02 0100                              |0041: aput-wide v2, v1, v0
=::==   001d82: 5481 1500                              |0043: iget-object v1, v8,field@0015
=::==   001d86: 1222                                   |0045: const/4 v2, #int 2 // #2
=::==   001d88: 4601 0102                              |0046: aget-object v1, v1, v2
=::==   001d8c: 8302                                   |0048: int-to-double v2, v0
=::==   001d8e: 1804 182d 4454 fb21 0940               |0049: const-wide v4, #double 3.141593 // #400921fb54442d18
=::==   001d98: cd42                                   |004e: mul-double/2addr v2, v4
=::==   001d9a: 4c02 0100                              |004f: aput-wide v2, v1, v0
=::==   001d9e: d800 0001                              |0051: add-int/lit8 v0, v0, #int 1 // #01
=::= -----------------------
BB startOffset is : 0x1d62end with jump
start of BB is 55, 
before end of BB is 55 
count insns of BB is 0 
========================
<<<<<<<<<<< code 41  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1da8; insns off=0x1db8;registers is 1;insns size is 1~~~~~~~~

==!
001db8: 0e00                                   |0000: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
<<<<<<<<<<< code 42  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1dbc; insns off=0x1dcc;registers is 1;insns size is 1~~~~~~~~

==!
001dcc: 0e00                                   |0000: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
<<<<<<<<<<< code 43  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1dd0; insns off=0x1de0;registers is 3;insns size is 8~~~~~~~~

==!
001de0: 2200 2700                              |0000: new-instance v0,class@0027
001de4: 1a01 1c00                              |0002: const-string v1, string@001c
001de8: 7020 7900 1000                         |0004: invoke-direct {v0, v1}, method@0079
001dee: 1100                                   |0007: return-object v0
BB begin is :  e--7  
start add mir ,first is 0 ; second is 7!
end with jump
start of BB is 0, 
before end of BB is 4 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001de0: 2200 2700                              |0000: new-instance v0,class@0027
=::==   001de4: 1a01 1c00                              |0002: const-string v1, string@001c
=::= -----------------------
BB startOffset is : 0x1de0end with jump
start of BB is 7, 
before end of BB is 7 
count insns of BB is 0 
========================
<<<<<<<<<<< code 44  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1df0; insns off=0x1e00;registers is 2;insns size is 8~~~~~~~~

==!
001e00: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
001e06: 1300 b004                              |0003: const/16 v0, #int 1200 // #4b0
001e0a: 5910 1a00                              |0005: iput v0, v1,field@001a
001e0e: 0e00                                   |0007: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 7 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001e06: 1300 b004                              |0003: const/16 v0, #int 1200 // #4b0
=::==   001e0a: 5910 1a00                              |0005: iput v0, v1,field@001a
=::= -----------------------
BB startOffset is : 0x1e06<<<<<<<<<<< code 45  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1e10; insns off=0x1e20;registers is 2;insns size is 2~~~~~~~~

==!
001e20: 1200                                   |0000: const/4 v0, #int 0 // #0
001e22: 0f00                                   |0001: return v0
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 1 
count insns of BB is 1 
========================
<<<<<<<<<<< code 46  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1e24; insns off=0x1e34;registers is 2;insns size is 3~~~~~~~~

==!
001e34: 1300 e50e                              |0000: const/16 v0, #int 3813 // #ee5
001e38: 0f00                                   |0002: return v0
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
<<<<<<<<<<< code 47  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x1e3c; insns off=0x1e4c;registers is 19;insns size is 492~~~~~~~~

==!
001e4c: 121c                                   |0000: const/4 v12, #int 1 // #1
001e4e: 121d                                   |0001: const/4 v13, #int 1 // #1
001e50: 121e                                   |0002: const/4 v14, #int 1 // #1
001e52: 1214                                   |0003: const/4 v4, #int 1 // #1
001e54: 1215                                   |0004: const/4 v5, #int 1 // #1
001e56: 1216                                   |0005: const/4 v6, #int 1 // #1
001e58: 121b                                   |0006: const/4 v11, #int 1 // #1
001e5a: 1212                                   |0007: const/4 v2, #int 1 // #1
001e5c: 1213                                   |0008: const/4 v3, #int 1 // #1
001e5e: 1217                                   |0009: const/4 v7, #int 1 // #1
001e60: 1218                                   |000a: const/4 v8, #int 1 // #1
001e62: 1219                                   |000b: const/4 v9, #int 1 // #1
001e64: 121a                                   |000c: const/4 v10, #int 1 // #1
001e66: 121c                                   |000d: const/4 v12, #int 1 // #1
001e68: 121d                                   |000e: const/4 v13, #int 1 // #1
001e6a: 121e                                   |000f: const/4 v14, #int 1 // #1
001e6c: 1214                                   |0010: const/4 v4, #int 1 // #1
001e6e: 1215                                   |0011: const/4 v5, #int 1 // #1
001e70: 1216                                   |0012: const/4 v6, #int 1 // #1
001e72: 120f                                   |0013: const/4 v15, #int 0 // #0
001e74: 0800 1200                              |0014: move-object/from16 v0, v18
001e78: 5200 1a00                              |0016: iget v0, v0,field@001a
001e7c: 0211 0000                              |0018: move/from16 v17, v0
001e80: 01f0                                   |001a: move v0, v15
001e82: 0201 1100                              |001b: move/from16 v1, v17
001e86: 3410 1b00                              |001d: if-lt v0, v1, 0038 // +001b
001e8a: 1212                                   |001f: const/4 v2, #int 1 // #1
001e8c: 1203                                   |0020: const/4 v3, #int 0 // #0
001e8e: 1217                                   |0021: const/4 v7, #int 1 // #1
001e90: 1208                                   |0022: const/4 v8, #int 0 // #0
001e92: 1219                                   |0023: const/4 v9, #int 1 // #1
001e94: 120a                                   |0024: const/4 v10, #int 0 // #0
001e96: 1310 0000                              |0025: const/16 v16, #int 0 // #0
001e9a: 0800 1200                              |0027: move-object/from16 v0, v18
001e9e: 5200 1a00                              |0029: iget v0, v0,field@001a
001ea2: 0211 0000                              |002b: move/from16 v17, v0
001ea6: 0200 1000                              |002d: move/from16 v0, v16
001eaa: 0201 1100                              |002f: move/from16 v1, v17
001eae: 3410 df00                              |0031: if-lt v0, v1, 0110 // +00df
001eb2: 390c b501                              |0033: if-nez v12, 01e8 // +01b5
001eb6: 1311 0100                              |0035: const/16 v17, #int 1 // #1
001eba: 0f11                                   |0037: return v17
001ebc: 3902 0400                              |0038: if-nez v2, 003c // +0004
001ec0: 3803 7800                              |003a: if-eqz v3, 00b2 // +0078
001ec4: 3907 0400                              |003c: if-nez v7, 0040 // +0004
001ec8: 3808 7400                              |003e: if-eqz v8, 00b2 // +0074
001ecc: 3909 0600                              |0040: if-nez v9, 0046 // +0006
001ed0: 390a 0400                              |0042: if-nez v10, 0046 // +0004
001ed4: 380b 6e00                              |0044: if-eqz v11, 00b2 // +006e
001ed8: 380c 7000                              |0046: if-eqz v12, 00b6 // +0070
001edc: 1311 0000                              |0048: const/16 v17, #int 0 // #0
001ee0: 020c 1100                              |004a: move/from16 v12, v17
001ee4: 380d 6f00                              |004c: if-eqz v13, 00bb // +006f
001ee8: 1311 0000                              |004e: const/16 v17, #int 0 // #0
001eec: 020d 1100                              |0050: move/from16 v13, v17
001ef0: 380e 6e00                              |0052: if-eqz v14, 00c0 // +006e
001ef4: 1311 0000                              |0054: const/16 v17, #int 0 // #0
001ef8: 020e 1100                              |0056: move/from16 v14, v17
001efc: 3804 6d00                              |0058: if-eqz v4, 00c5 // +006d
001f00: 1311 0000                              |005a: const/16 v17, #int 0 // #0
001f04: 0204 1100                              |005c: move/from16 v4, v17
001f08: 3805 6c00                              |005e: if-eqz v5, 00ca // +006c
001f0c: 1311 0000                              |0060: const/16 v17, #int 0 // #0
001f10: 0205 1100                              |0062: move/from16 v5, v17
001f14: 3806 6b00                              |0064: if-eqz v6, 00cf // +006b
001f18: 1311 0000                              |0066: const/16 v17, #int 0 // #0
001f1c: 0206 1100                              |0068: move/from16 v6, v17
001f20: 3802 6a00                              |006a: if-eqz v2, 00d4 // +006a
001f24: 1311 0000                              |006c: const/16 v17, #int 0 // #0
001f28: 0202 1100                              |006e: move/from16 v2, v17
001f2c: 3803 6900                              |0070: if-eqz v3, 00d9 // +0069
001f30: 1311 0000                              |0072: const/16 v17, #int 0 // #0
001f34: 0203 1100                              |0074: move/from16 v3, v17
001f38: 3807 6800                              |0076: if-eqz v7, 00de // +0068
001f3c: 1311 0000                              |0078: const/16 v17, #int 0 // #0
001f40: 0207 1100                              |007a: move/from16 v7, v17
001f44: 3808 6700                              |007c: if-eqz v8, 00e3 // +0067
001f48: 1311 0000                              |007e: const/16 v17, #int 0 // #0
001f4c: 0208 1100                              |0080: move/from16 v8, v17
001f50: 3809 6600                              |0082: if-eqz v9, 00e8 // +0066
001f54: 1311 0000                              |0084: const/16 v17, #int 0 // #0
001f58: 0209 1100                              |0086: move/from16 v9, v17
001f5c: 380a 6500                              |0088: if-eqz v10, 00ed // +0065
001f60: 1311 0000                              |008a: const/16 v17, #int 0 // #0
001f64: 020a 1100                              |008c: move/from16 v10, v17
001f68: 3802 6400                              |008e: if-eqz v2, 00f2 // +0064
001f6c: 1311 0000                              |0090: const/16 v17, #int 0 // #0
001f70: 0202 1100                              |0092: move/from16 v2, v17
001f74: 3803 6300                              |0094: if-eqz v3, 00f7 // +0063
001f78: 1311 0000                              |0096: const/16 v17, #int 0 // #0
001f7c: 0203 1100                              |0098: move/from16 v3, v17
001f80: 3807 6200                              |009a: if-eqz v7, 00fc // +0062
001f84: 1311 0000                              |009c: const/16 v17, #int 0 // #0
001f88: 0207 1100                              |009e: move/from16 v7, v17
001f8c: 3808 6100                              |00a0: if-eqz v8, 0101 // +0061
001f90: 1311 0000                              |00a2: const/16 v17, #int 0 // #0
001f94: 0208 1100                              |00a4: move/from16 v8, v17
001f98: 3809 6000                              |00a6: if-eqz v9, 0106 // +0060
001f9c: 1311 0000                              |00a8: const/16 v17, #int 0 // #0
001fa0: 0209 1100                              |00aa: move/from16 v9, v17
001fa4: 380a 5f00                              |00ac: if-eqz v10, 010b // +005f
001fa8: 1311 0000                              |00ae: const/16 v17, #int 0 // #0
001fac: 020a 1100                              |00b0: move/from16 v10, v17
001fb0: d80f 0f01                              |00b2: add-int/lit8 v15, v15, #int 1 // #01
001fb4: 2900 60ff                              |00b4: goto/16 0014 // -00a0
001fb8: 1311 0100                              |00b6: const/16 v17, #int 1 // #1
001fbc: 020c 1100                              |00b8: move/from16 v12, v17
001fc0: 2892                                   |00ba: goto 004c // -006e
001fc2: 1311 0100                              |00bb: const/16 v17, #int 1 // #1
001fc6: 020d 1100                              |00bd: move/from16 v13, v17
001fca: 2893                                   |00bf: goto 0052 // -006d
001fcc: 1311 0100                              |00c0: const/16 v17, #int 1 // #1
001fd0: 020e 1100                              |00c2: move/from16 v14, v17
001fd4: 2894                                   |00c4: goto 0058 // -006c
001fd6: 1311 0100                              |00c5: const/16 v17, #int 1 // #1
001fda: 0204 1100                              |00c7: move/from16 v4, v17
001fde: 2895                                   |00c9: goto 005e // -006b
001fe0: 1311 0100                              |00ca: const/16 v17, #int 1 // #1
001fe4: 0205 1100                              |00cc: move/from16 v5, v17
001fe8: 2896                                   |00ce: goto 0064 // -006a
001fea: 1311 0100                              |00cf: const/16 v17, #int 1 // #1
001fee: 0206 1100                              |00d1: move/from16 v6, v17
001ff2: 2897                                   |00d3: goto 006a // -0069
001ff4: 1311 0100                              |00d4: const/16 v17, #int 1 // #1
001ff8: 0202 1100                              |00d6: move/from16 v2, v17
001ffc: 2898                                   |00d8: goto 0070 // -0068
001ffe: 1311 0100                              |00d9: const/16 v17, #int 1 // #1
002002: 0203 1100                              |00db: move/from16 v3, v17
002006: 2899                                   |00dd: goto 0076 // -0067
002008: 1311 0100                              |00de: const/16 v17, #int 1 // #1
00200c: 0207 1100                              |00e0: move/from16 v7, v17
002010: 289a                                   |00e2: goto 007c // -0066
002012: 1311 0100                              |00e3: const/16 v17, #int 1 // #1
002016: 0208 1100                              |00e5: move/from16 v8, v17
00201a: 289b                                   |00e7: goto 0082 // -0065
00201c: 1311 0100                              |00e8: const/16 v17, #int 1 // #1
002020: 0209 1100                              |00ea: move/from16 v9, v17
002024: 289c                                   |00ec: goto 0088 // -0064
002026: 1311 0100                              |00ed: const/16 v17, #int 1 // #1
00202a: 020a 1100                              |00ef: move/from16 v10, v17
00202e: 289d                                   |00f1: goto 008e // -0063
002030: 1311 0100                              |00f2: const/16 v17, #int 1 // #1
002034: 0202 1100                              |00f4: move/from16 v2, v17
002038: 289e                                   |00f6: goto 0094 // -0062
00203a: 1311 0100                              |00f7: const/16 v17, #int 1 // #1
00203e: 0203 1100                              |00f9: move/from16 v3, v17
002042: 289f                                   |00fb: goto 009a // -0061
002044: 1311 0100                              |00fc: const/16 v17, #int 1 // #1
002048: 0207 1100                              |00fe: move/from16 v7, v17
00204c: 28a0                                   |0100: goto 00a0 // -0060
00204e: 1311 0100                              |0101: const/16 v17, #int 1 // #1
002052: 0208 1100                              |0103: move/from16 v8, v17
002056: 28a1                                   |0105: goto 00a6 // -005f
002058: 1311 0100                              |0106: const/16 v17, #int 1 // #1
00205c: 0209 1100                              |0108: move/from16 v9, v17
002060: 28a2                                   |010a: goto 00ac // -005e
002062: 1311 0100                              |010b: const/16 v17, #int 1 // #1
002066: 020a 1100                              |010d: move/from16 v10, v17
00206a: 28a3                                   |010f: goto 00b2 // -005d
00206c: 3902 0400                              |0110: if-nez v2, 0114 // +0004
002070: 3803 7800                              |0112: if-eqz v3, 018a // +0078
002074: 3907 0400                              |0114: if-nez v7, 0118 // +0004
002078: 3808 7400                              |0116: if-eqz v8, 018a // +0074
00207c: 3909 0600                              |0118: if-nez v9, 011e // +0006
002080: 390a 0400                              |011a: if-nez v10, 011e // +0004
002084: 380b 6e00                              |011c: if-eqz v11, 018a // +006e
002088: 3802 7000                              |011e: if-eqz v2, 018e // +0070
00208c: 1311 0000                              |0120: const/16 v17, #int 0 // #0
002090: 0202 1100                              |0122: move/from16 v2, v17
002094: 3803 6f00                              |0124: if-eqz v3, 0193 // +006f
002098: 1311 0000                              |0126: const/16 v17, #int 0 // #0
00209c: 0203 1100                              |0128: move/from16 v3, v17
0020a0: 3807 6e00                              |012a: if-eqz v7, 0198 // +006e
0020a4: 1311 0000                              |012c: const/16 v17, #int 0 // #0
0020a8: 0207 1100                              |012e: move/from16 v7, v17
0020ac: 3808 6d00                              |0130: if-eqz v8, 019d // +006d
0020b0: 1311 0000                              |0132: const/16 v17, #int 0 // #0
0020b4: 0208 1100                              |0134: move/from16 v8, v17
0020b8: 3809 6c00                              |0136: if-eqz v9, 01a2 // +006c
0020bc: 1311 0000                              |0138: const/16 v17, #int 0 // #0
0020c0: 0209 1100                              |013a: move/from16 v9, v17
0020c4: 380a 6b00                              |013c: if-eqz v10, 01a7 // +006b
0020c8: 1311 0000                              |013e: const/16 v17, #int 0 // #0
0020cc: 020a 1100                              |0140: move/from16 v10, v17
0020d0: 380c 6a00                              |0142: if-eqz v12, 01ac // +006a
0020d4: 1311 0000                              |0144: const/16 v17, #int 0 // #0
0020d8: 020c 1100                              |0146: move/from16 v12, v17
0020dc: 380d 6900                              |0148: if-eqz v13, 01b1 // +0069
0020e0: 1311 0000                              |014a: const/16 v17, #int 0 // #0
0020e4: 020d 1100                              |014c: move/from16 v13, v17
0020e8: 380e 6800                              |014e: if-eqz v14, 01b6 // +0068
0020ec: 1311 0000                              |0150: const/16 v17, #int 0 // #0
0020f0: 020e 1100                              |0152: move/from16 v14, v17
0020f4: 3804 6700                              |0154: if-eqz v4, 01bb // +0067
0020f8: 1311 0000                              |0156: const/16 v17, #int 0 // #0
0020fc: 0204 1100                              |0158: move/from16 v4, v17
002100: 3805 6600                              |015a: if-eqz v5, 01c0 // +0066
002104: 1311 0000                              |015c: const/16 v17, #int 0 // #0
002108: 0205 1100                              |015e: move/from16 v5, v17
00210c: 3806 6500                              |0160: if-eqz v6, 01c5 // +0065
002110: 1311 0000                              |0162: const/16 v17, #int 0 // #0
002114: 0206 1100                              |0164: move/from16 v6, v17
002118: 380c 6400                              |0166: if-eqz v12, 01ca // +0064
00211c: 1311 0000                              |0168: const/16 v17, #int 0 // #0
002120: 020c 1100                              |016a: move/from16 v12, v17
002124: 380d 6300                              |016c: if-eqz v13, 01cf // +0063
002128: 1311 0000                              |016e: const/16 v17, #int 0 // #0
00212c: 020d 1100                              |0170: move/from16 v13, v17
002130: 380e 6200                              |0172: if-eqz v14, 01d4 // +0062
002134: 1311 0000                              |0174: const/16 v17, #int 0 // #0
002138: 020e 1100                              |0176: move/from16 v14, v17
00213c: 3804 6100                              |0178: if-eqz v4, 01d9 // +0061
002140: 1311 0000                              |017a: const/16 v17, #int 0 // #0
002144: 0204 1100                              |017c: move/from16 v4, v17
002148: 3805 6000                              |017e: if-eqz v5, 01de // +0060
00214c: 1311 0000                              |0180: const/16 v17, #int 0 // #0
002150: 0205 1100                              |0182: move/from16 v5, v17
002154: 3806 5f00                              |0184: if-eqz v6, 01e3 // +005f
002158: 1311 0000                              |0186: const/16 v17, #int 0 // #0
00215c: 0206 1100                              |0188: move/from16 v6, v17
002160: d810 1001                              |018a: add-int/lit8 v16, v16, #int 1 // #01
002164: 2900 9bfe                              |018c: goto/16 0027 // -0165
002168: 1311 0100                              |018e: const/16 v17, #int 1 // #1
00216c: 0202 1100                              |0190: move/from16 v2, v17
002170: 2892                                   |0192: goto 0124 // -006e
002172: 1311 0100                              |0193: const/16 v17, #int 1 // #1
002176: 0203 1100                              |0195: move/from16 v3, v17
00217a: 2893                                   |0197: goto 012a // -006d
00217c: 1311 0100                              |0198: const/16 v17, #int 1 // #1
002180: 0207 1100                              |019a: move/from16 v7, v17
002184: 2894                                   |019c: goto 0130 // -006c
002186: 1311 0100                              |019d: const/16 v17, #int 1 // #1
00218a: 0208 1100                              |019f: move/from16 v8, v17
00218e: 2895                                   |01a1: goto 0136 // -006b
002190: 1311 0100                              |01a2: const/16 v17, #int 1 // #1
002194: 0209 1100                              |01a4: move/from16 v9, v17
002198: 2896                                   |01a6: goto 013c // -006a
00219a: 1311 0100                              |01a7: const/16 v17, #int 1 // #1
00219e: 020a 1100                              |01a9: move/from16 v10, v17
0021a2: 2897                                   |01ab: goto 0142 // -0069
0021a4: 1311 0100                              |01ac: const/16 v17, #int 1 // #1
0021a8: 020c 1100                              |01ae: move/from16 v12, v17
0021ac: 2898                                   |01b0: goto 0148 // -0068
0021ae: 1311 0100                              |01b1: const/16 v17, #int 1 // #1
0021b2: 020d 1100                              |01b3: move/from16 v13, v17
0021b6: 2899                                   |01b5: goto 014e // -0067
0021b8: 1311 0100                              |01b6: const/16 v17, #int 1 // #1
0021bc: 020e 1100                              |01b8: move/from16 v14, v17
0021c0: 289a                                   |01ba: goto 0154 // -0066
0021c2: 1311 0100                              |01bb: const/16 v17, #int 1 // #1
0021c6: 0204 1100                              |01bd: move/from16 v4, v17
0021ca: 289b                                   |01bf: goto 015a // -0065
0021cc: 1311 0100                              |01c0: const/16 v17, #int 1 // #1
0021d0: 0205 1100                              |01c2: move/from16 v5, v17
0021d4: 289c                                   |01c4: goto 0160 // -0064
0021d6: 1311 0100                              |01c5: const/16 v17, #int 1 // #1
0021da: 0206 1100                              |01c7: move/from16 v6, v17
0021de: 289d                                   |01c9: goto 0166 // -0063
0021e0: 1311 0100                              |01ca: const/16 v17, #int 1 // #1
0021e4: 020c 1100                              |01cc: move/from16 v12, v17
0021e8: 289e                                   |01ce: goto 016c // -0062
0021ea: 1311 0100                              |01cf: const/16 v17, #int 1 // #1
0021ee: 020d 1100                              |01d1: move/from16 v13, v17
0021f2: 289f                                   |01d3: goto 0172 // -0061
0021f4: 1311 0100                              |01d4: const/16 v17, #int 1 // #1
0021f8: 020e 1100                              |01d6: move/from16 v14, v17
0021fc: 28a0                                   |01d8: goto 0178 // -0060
0021fe: 1311 0100                              |01d9: const/16 v17, #int 1 // #1
002202: 0204 1100                              |01db: move/from16 v4, v17
002206: 28a1                                   |01dd: goto 017e // -005f
002208: 1311 0100                              |01de: const/16 v17, #int 1 // #1
00220c: 0205 1100                              |01e0: move/from16 v5, v17
002210: 28a2                                   |01e2: goto 0184 // -005e
002212: 1311 0100                              |01e3: const/16 v17, #int 1 // #1
002216: 0206 1100                              |01e5: move/from16 v6, v17
00221a: 28a3                                   |01e7: goto 018a // -005d
00221c: 1311 0000                              |01e8: const/16 v17, #int 0 // #0
002220: 2900 4dfe                              |01ea: goto/16 0037 // -01b3
BB begin is :  28--14   3e--1f   4e--27   66--33   6a--35   6e--37   70--38   74--3a   78--3c   7c--3e   80--40   84--42   88--44   8c--46   90--48   98--4c   9c--4e   a4--52   a8--54   b0--58   b4--5a   bc--5e   c0--60   c8--64   cc--66   d4--6a   d8--6c   e0--70   e4--72   ec--76   f0--78   f8--7c   fc--7e   104--82   108--84   110--88   114--8a   11c--8e   120--90   128--94   12c--96   134--9a   138--9c   140--a0   144--a2   14c--a6   150--a8   158--ac   15c--ae   164--b2   16c--b6   176--bb   180--c0   18a--c5   194--ca   19e--cf   1a8--d4   1b2--d9   1bc--de   1c6--e3   1d0--e8   1da--ed   1e4--f2   1ee--f7   1f8--fc   202--101   20c--106   216--10b   220--110   224--112   228--114   22c--116   230--118   234--11a   238--11c   23c--11e   240--120   248--124   24c--126   254--12a   258--12c   260--130   264--132   26c--136   270--138   278--13c   27c--13e   284--142   288--144   290--148   294--14a   29c--14e   2a0--150   2a8--154   2ac--156   2b4--15a   2b8--15c   2c0--160   2c4--162   2cc--166   2d0--168   2d8--16c   2dc--16e   2e4--172   2e8--174   2f0--178   2f4--17a   2fc--17e   300--180   308--184   30c--186   314--18a   31c--18e   326--193   330--198   33a--19d   344--1a2   34e--1a7   358--1ac   362--1b1   36c--1b6   376--1bb   380--1c0   38a--1c5   394--1ca   39e--1cf   3a8--1d4   3b2--1d9   3bc--1de   3c6--1e3   3d0--1e8  
start add mir ,first is 0 ; second is 14!
end with second!
start of BB is 0, 
before end of BB is 14 
count insns of BB is 20 
========================
=::== -----------------------
=::==   001e4c: 121c                                   |0000: const/4 v12, #int 1 // #1
=::==   001e4e: 121d                                   |0001: const/4 v13, #int 1 // #1
=::==   001e50: 121e                                   |0002: const/4 v14, #int 1 // #1
=::==   001e52: 1214                                   |0003: const/4 v4, #int 1 // #1
=::==   001e54: 1215                                   |0004: const/4 v5, #int 1 // #1
=::==   001e56: 1216                                   |0005: const/4 v6, #int 1 // #1
=::==   001e58: 121b                                   |0006: const/4 v11, #int 1 // #1
=::==   001e5a: 1212                                   |0007: const/4 v2, #int 1 // #1
=::==   001e5c: 1213                                   |0008: const/4 v3, #int 1 // #1
=::==   001e5e: 1217                                   |0009: const/4 v7, #int 1 // #1
=::==   001e60: 1218                                   |000a: const/4 v8, #int 1 // #1
=::==   001e62: 1219                                   |000b: const/4 v9, #int 1 // #1
=::==   001e64: 121a                                   |000c: const/4 v10, #int 1 // #1
=::==   001e66: 121c                                   |000d: const/4 v12, #int 1 // #1
=::==   001e68: 121d                                   |000e: const/4 v13, #int 1 // #1
=::==   001e6a: 121e                                   |000f: const/4 v14, #int 1 // #1
=::==   001e6c: 1214                                   |0010: const/4 v4, #int 1 // #1
=::==   001e6e: 1215                                   |0011: const/4 v5, #int 1 // #1
=::==   001e70: 1216                                   |0012: const/4 v6, #int 1 // #1
=::==   001e72: 120f                                   |0013: const/4 v15, #int 0 // #0
=::= -----------------------
BB startOffset is : 0x1e4cend with jump
start of BB is 14, 
before end of BB is 1d 
count insns of BB is 5 
========================
=::== -----------------------
=::==   001e74: 0800 1200                              |0014: move-object/from16 v0, v18
=::==   001e78: 5200 1a00                              |0016: iget v0, v0,field@001a
=::==   001e7c: 0211 0000                              |0018: move/from16 v17, v0
=::==   001e80: 01f0                                   |001a: move v0, v15
=::==   001e82: 0201 1100                              |001b: move/from16 v1, v17
=::= -----------------------
BB startOffset is : 0x1e74end with second!
start of BB is 1f, 
before end of BB is 27 
count insns of BB is 7 
========================
=::== -----------------------
=::==   001e8a: 1212                                   |001f: const/4 v2, #int 1 // #1
=::==   001e8c: 1203                                   |0020: const/4 v3, #int 0 // #0
=::==   001e8e: 1217                                   |0021: const/4 v7, #int 1 // #1
=::==   001e90: 1208                                   |0022: const/4 v8, #int 0 // #0
=::==   001e92: 1219                                   |0023: const/4 v9, #int 1 // #1
=::==   001e94: 120a                                   |0024: const/4 v10, #int 0 // #0
=::==   001e96: 1310 0000                              |0025: const/16 v16, #int 0 // #0
=::= -----------------------
BB startOffset is : 0x1e8aend with jump
start of BB is 27, 
before end of BB is 31 
count insns of BB is 5 
========================
=::== -----------------------
=::==   001e9a: 0800 1200                              |0027: move-object/from16 v0, v18
=::==   001e9e: 5200 1a00                              |0029: iget v0, v0,field@001a
=::==   001ea2: 0211 0000                              |002b: move/from16 v17, v0
=::==   001ea6: 0200 1000                              |002d: move/from16 v0, v16
=::==   001eaa: 0201 1100                              |002f: move/from16 v1, v17
=::= -----------------------
BB startOffset is : 0x1e9aend with jump
start of BB is 33, 
before end of BB is 33 
count insns of BB is 0 
========================
end with jump
start of BB is 35, 
before end of BB is 37 
count insns of BB is 1 
========================
end with jump
start of BB is 37, 
before end of BB is 37 
count insns of BB is 0 
========================
end with jump
start of BB is 38, 
before end of BB is 38 
count insns of BB is 0 
========================
end with jump
start of BB is 3a, 
before end of BB is 3a 
count insns of BB is 0 
========================
end with jump
start of BB is 3c, 
before end of BB is 3c 
count insns of BB is 0 
========================
end with jump
start of BB is 3e, 
before end of BB is 3e 
count insns of BB is 0 
========================
end with jump
start of BB is 40, 
before end of BB is 40 
count insns of BB is 0 
========================
end with jump
start of BB is 42, 
before end of BB is 42 
count insns of BB is 0 
========================
end with jump
start of BB is 44, 
before end of BB is 44 
count insns of BB is 0 
========================
end with jump
start of BB is 46, 
before end of BB is 46 
count insns of BB is 0 
========================
end with jump
start of BB is 48, 
before end of BB is 4c 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001edc: 1311 0000                              |0048: const/16 v17, #int 0 // #0
=::==   001ee0: 020c 1100                              |004a: move/from16 v12, v17
=::= -----------------------
BB startOffset is : 0x1edcend with jump
start of BB is 4c, 
before end of BB is 4c 
count insns of BB is 0 
========================
end with jump
start of BB is 4e, 
before end of BB is 52 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001ee8: 1311 0000                              |004e: const/16 v17, #int 0 // #0
=::==   001eec: 020d 1100                              |0050: move/from16 v13, v17
=::= -----------------------
BB startOffset is : 0x1ee8end with jump
start of BB is 52, 
before end of BB is 52 
count insns of BB is 0 
========================
end with jump
start of BB is 54, 
before end of BB is 58 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001ef4: 1311 0000                              |0054: const/16 v17, #int 0 // #0
=::==   001ef8: 020e 1100                              |0056: move/from16 v14, v17
=::= -----------------------
BB startOffset is : 0x1ef4end with jump
start of BB is 58, 
before end of BB is 58 
count insns of BB is 0 
========================
end with jump
start of BB is 5a, 
before end of BB is 5e 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f00: 1311 0000                              |005a: const/16 v17, #int 0 // #0
=::==   001f04: 0204 1100                              |005c: move/from16 v4, v17
=::= -----------------------
BB startOffset is : 0x1f00end with jump
start of BB is 5e, 
before end of BB is 5e 
count insns of BB is 0 
========================
end with jump
start of BB is 60, 
before end of BB is 64 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f0c: 1311 0000                              |0060: const/16 v17, #int 0 // #0
=::==   001f10: 0205 1100                              |0062: move/from16 v5, v17
=::= -----------------------
BB startOffset is : 0x1f0cend with jump
start of BB is 64, 
before end of BB is 64 
count insns of BB is 0 
========================
end with jump
start of BB is 66, 
before end of BB is 6a 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f18: 1311 0000                              |0066: const/16 v17, #int 0 // #0
=::==   001f1c: 0206 1100                              |0068: move/from16 v6, v17
=::= -----------------------
BB startOffset is : 0x1f18end with jump
start of BB is 6a, 
before end of BB is 6a 
count insns of BB is 0 
========================
end with jump
start of BB is 6c, 
before end of BB is 70 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f24: 1311 0000                              |006c: const/16 v17, #int 0 // #0
=::==   001f28: 0202 1100                              |006e: move/from16 v2, v17
=::= -----------------------
BB startOffset is : 0x1f24end with jump
start of BB is 70, 
before end of BB is 70 
count insns of BB is 0 
========================
end with jump
start of BB is 72, 
before end of BB is 76 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f30: 1311 0000                              |0072: const/16 v17, #int 0 // #0
=::==   001f34: 0203 1100                              |0074: move/from16 v3, v17
=::= -----------------------
BB startOffset is : 0x1f30end with jump
start of BB is 76, 
before end of BB is 76 
count insns of BB is 0 
========================
end with jump
start of BB is 78, 
before end of BB is 7c 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f3c: 1311 0000                              |0078: const/16 v17, #int 0 // #0
=::==   001f40: 0207 1100                              |007a: move/from16 v7, v17
=::= -----------------------
BB startOffset is : 0x1f3cend with jump
start of BB is 7c, 
before end of BB is 7c 
count insns of BB is 0 
========================
end with jump
start of BB is 7e, 
before end of BB is 82 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f48: 1311 0000                              |007e: const/16 v17, #int 0 // #0
=::==   001f4c: 0208 1100                              |0080: move/from16 v8, v17
=::= -----------------------
BB startOffset is : 0x1f48end with jump
start of BB is 82, 
before end of BB is 82 
count insns of BB is 0 
========================
end with jump
start of BB is 84, 
before end of BB is 88 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f54: 1311 0000                              |0084: const/16 v17, #int 0 // #0
=::==   001f58: 0209 1100                              |0086: move/from16 v9, v17
=::= -----------------------
BB startOffset is : 0x1f54end with jump
start of BB is 88, 
before end of BB is 88 
count insns of BB is 0 
========================
end with jump
start of BB is 8a, 
before end of BB is 8e 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f60: 1311 0000                              |008a: const/16 v17, #int 0 // #0
=::==   001f64: 020a 1100                              |008c: move/from16 v10, v17
=::= -----------------------
BB startOffset is : 0x1f60end with jump
start of BB is 8e, 
before end of BB is 8e 
count insns of BB is 0 
========================
end with jump
start of BB is 90, 
before end of BB is 94 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f6c: 1311 0000                              |0090: const/16 v17, #int 0 // #0
=::==   001f70: 0202 1100                              |0092: move/from16 v2, v17
=::= -----------------------
BB startOffset is : 0x1f6cend with jump
start of BB is 94, 
before end of BB is 94 
count insns of BB is 0 
========================
end with jump
start of BB is 96, 
before end of BB is 9a 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f78: 1311 0000                              |0096: const/16 v17, #int 0 // #0
=::==   001f7c: 0203 1100                              |0098: move/from16 v3, v17
=::= -----------------------
BB startOffset is : 0x1f78end with jump
start of BB is 9a, 
before end of BB is 9a 
count insns of BB is 0 
========================
end with jump
start of BB is 9c, 
before end of BB is a0 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f84: 1311 0000                              |009c: const/16 v17, #int 0 // #0
=::==   001f88: 0207 1100                              |009e: move/from16 v7, v17
=::= -----------------------
BB startOffset is : 0x1f84end with jump
start of BB is a0, 
before end of BB is a0 
count insns of BB is 0 
========================
end with jump
start of BB is a2, 
before end of BB is a6 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f90: 1311 0000                              |00a2: const/16 v17, #int 0 // #0
=::==   001f94: 0208 1100                              |00a4: move/from16 v8, v17
=::= -----------------------
BB startOffset is : 0x1f90end with jump
start of BB is a6, 
before end of BB is a6 
count insns of BB is 0 
========================
end with jump
start of BB is a8, 
before end of BB is ac 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001f9c: 1311 0000                              |00a8: const/16 v17, #int 0 // #0
=::==   001fa0: 0209 1100                              |00aa: move/from16 v9, v17
=::= -----------------------
BB startOffset is : 0x1f9cend with jump
start of BB is ac, 
before end of BB is ac 
count insns of BB is 0 
========================
end with second!
start of BB is ae, 
before end of BB is b2 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001fa8: 1311 0000                              |00ae: const/16 v17, #int 0 // #0
=::==   001fac: 020a 1100                              |00b0: move/from16 v10, v17
=::= -----------------------
BB startOffset is : 0x1fa8end with jump
start of BB is b2, 
before end of BB is b4 
count insns of BB is 1 
========================
end with jump
start of BB is b6, 
before end of BB is ba 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001fb8: 1311 0100                              |00b6: const/16 v17, #int 1 // #1
=::==   001fbc: 020c 1100                              |00b8: move/from16 v12, v17
=::= -----------------------
BB startOffset is : 0x1fb8end with jump
start of BB is bb, 
before end of BB is bf 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001fc2: 1311 0100                              |00bb: const/16 v17, #int 1 // #1
=::==   001fc6: 020d 1100                              |00bd: move/from16 v13, v17
=::= -----------------------
BB startOffset is : 0x1fc2end with jump
start of BB is c0, 
before end of BB is c4 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001fcc: 1311 0100                              |00c0: const/16 v17, #int 1 // #1
=::==   001fd0: 020e 1100                              |00c2: move/from16 v14, v17
=::= -----------------------
BB startOffset is : 0x1fccend with jump
start of BB is c5, 
before end of BB is c9 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001fd6: 1311 0100                              |00c5: const/16 v17, #int 1 // #1
=::==   001fda: 0204 1100                              |00c7: move/from16 v4, v17
=::= -----------------------
BB startOffset is : 0x1fd6end with jump
start of BB is ca, 
before end of BB is ce 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001fe0: 1311 0100                              |00ca: const/16 v17, #int 1 // #1
=::==   001fe4: 0205 1100                              |00cc: move/from16 v5, v17
=::= -----------------------
BB startOffset is : 0x1fe0end with jump
start of BB is cf, 
before end of BB is d3 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001fea: 1311 0100                              |00cf: const/16 v17, #int 1 // #1
=::==   001fee: 0206 1100                              |00d1: move/from16 v6, v17
=::= -----------------------
BB startOffset is : 0x1feaend with jump
start of BB is d4, 
before end of BB is d8 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001ff4: 1311 0100                              |00d4: const/16 v17, #int 1 // #1
=::==   001ff8: 0202 1100                              |00d6: move/from16 v2, v17
=::= -----------------------
BB startOffset is : 0x1ff4end with jump
start of BB is d9, 
before end of BB is dd 
count insns of BB is 2 
========================
=::== -----------------------
=::==   001ffe: 1311 0100                              |00d9: const/16 v17, #int 1 // #1
=::==   002002: 0203 1100                              |00db: move/from16 v3, v17
=::= -----------------------
BB startOffset is : 0x1ffeend with jump
start of BB is de, 
before end of BB is e2 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002008: 1311 0100                              |00de: const/16 v17, #int 1 // #1
=::==   00200c: 0207 1100                              |00e0: move/from16 v7, v17
=::= -----------------------
BB startOffset is : 0x2008end with jump
start of BB is e3, 
before end of BB is e7 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002012: 1311 0100                              |00e3: const/16 v17, #int 1 // #1
=::==   002016: 0208 1100                              |00e5: move/from16 v8, v17
=::= -----------------------
BB startOffset is : 0x2012end with jump
start of BB is e8, 
before end of BB is ec 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00201c: 1311 0100                              |00e8: const/16 v17, #int 1 // #1
=::==   002020: 0209 1100                              |00ea: move/from16 v9, v17
=::= -----------------------
BB startOffset is : 0x201cend with jump
start of BB is ed, 
before end of BB is f1 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002026: 1311 0100                              |00ed: const/16 v17, #int 1 // #1
=::==   00202a: 020a 1100                              |00ef: move/from16 v10, v17
=::= -----------------------
BB startOffset is : 0x2026end with jump
start of BB is f2, 
before end of BB is f6 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002030: 1311 0100                              |00f2: const/16 v17, #int 1 // #1
=::==   002034: 0202 1100                              |00f4: move/from16 v2, v17
=::= -----------------------
BB startOffset is : 0x2030end with jump
start of BB is f7, 
before end of BB is fb 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00203a: 1311 0100                              |00f7: const/16 v17, #int 1 // #1
=::==   00203e: 0203 1100                              |00f9: move/from16 v3, v17
=::= -----------------------
BB startOffset is : 0x203aend with jump
start of BB is fc, 
before end of BB is 100 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002044: 1311 0100                              |00fc: const/16 v17, #int 1 // #1
=::==   002048: 0207 1100                              |00fe: move/from16 v7, v17
=::= -----------------------
BB startOffset is : 0x2044end with jump
start of BB is 101, 
before end of BB is 105 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00204e: 1311 0100                              |0101: const/16 v17, #int 1 // #1
=::==   002052: 0208 1100                              |0103: move/from16 v8, v17
=::= -----------------------
BB startOffset is : 0x204eend with jump
start of BB is 106, 
before end of BB is 10a 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002058: 1311 0100                              |0106: const/16 v17, #int 1 // #1
=::==   00205c: 0209 1100                              |0108: move/from16 v9, v17
=::= -----------------------
BB startOffset is : 0x2058end with jump
start of BB is 10b, 
before end of BB is 10f 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002062: 1311 0100                              |010b: const/16 v17, #int 1 // #1
=::==   002066: 020a 1100                              |010d: move/from16 v10, v17
=::= -----------------------
BB startOffset is : 0x2062end with jump
start of BB is 110, 
before end of BB is 110 
count insns of BB is 0 
========================
end with jump
start of BB is 112, 
before end of BB is 112 
count insns of BB is 0 
========================
end with jump
start of BB is 114, 
before end of BB is 114 
count insns of BB is 0 
========================
end with jump
start of BB is 116, 
before end of BB is 116 
count insns of BB is 0 
========================
end with jump
start of BB is 118, 
before end of BB is 118 
count insns of BB is 0 
========================
end with jump
start of BB is 11a, 
before end of BB is 11a 
count insns of BB is 0 
========================
end with jump
start of BB is 11c, 
before end of BB is 11c 
count insns of BB is 0 
========================
end with jump
start of BB is 11e, 
before end of BB is 11e 
count insns of BB is 0 
========================
end with jump
start of BB is 120, 
before end of BB is 124 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00208c: 1311 0000                              |0120: const/16 v17, #int 0 // #0
=::==   002090: 0202 1100                              |0122: move/from16 v2, v17
=::= -----------------------
BB startOffset is : 0x208cend with jump
start of BB is 124, 
before end of BB is 124 
count insns of BB is 0 
========================
end with jump
start of BB is 126, 
before end of BB is 12a 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002098: 1311 0000                              |0126: const/16 v17, #int 0 // #0
=::==   00209c: 0203 1100                              |0128: move/from16 v3, v17
=::= -----------------------
BB startOffset is : 0x2098end with jump
start of BB is 12a, 
before end of BB is 12a 
count insns of BB is 0 
========================
end with jump
start of BB is 12c, 
before end of BB is 130 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0020a4: 1311 0000                              |012c: const/16 v17, #int 0 // #0
=::==   0020a8: 0207 1100                              |012e: move/from16 v7, v17
=::= -----------------------
BB startOffset is : 0x20a4end with jump
start of BB is 130, 
before end of BB is 130 
count insns of BB is 0 
========================
end with jump
start of BB is 132, 
before end of BB is 136 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0020b0: 1311 0000                              |0132: const/16 v17, #int 0 // #0
=::==   0020b4: 0208 1100                              |0134: move/from16 v8, v17
=::= -----------------------
BB startOffset is : 0x20b0end with jump
start of BB is 136, 
before end of BB is 136 
count insns of BB is 0 
========================
end with jump
start of BB is 138, 
before end of BB is 13c 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0020bc: 1311 0000                              |0138: const/16 v17, #int 0 // #0
=::==   0020c0: 0209 1100                              |013a: move/from16 v9, v17
=::= -----------------------
BB startOffset is : 0x20bcend with jump
start of BB is 13c, 
before end of BB is 13c 
count insns of BB is 0 
========================
end with jump
start of BB is 13e, 
before end of BB is 142 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0020c8: 1311 0000                              |013e: const/16 v17, #int 0 // #0
=::==   0020cc: 020a 1100                              |0140: move/from16 v10, v17
=::= -----------------------
BB startOffset is : 0x20c8end with jump
start of BB is 142, 
before end of BB is 142 
count insns of BB is 0 
========================
end with jump
start of BB is 144, 
before end of BB is 148 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0020d4: 1311 0000                              |0144: const/16 v17, #int 0 // #0
=::==   0020d8: 020c 1100                              |0146: move/from16 v12, v17
=::= -----------------------
BB startOffset is : 0x20d4end with jump
start of BB is 148, 
before end of BB is 148 
count insns of BB is 0 
========================
end with jump
start of BB is 14a, 
before end of BB is 14e 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0020e0: 1311 0000                              |014a: const/16 v17, #int 0 // #0
=::==   0020e4: 020d 1100                              |014c: move/from16 v13, v17
=::= -----------------------
BB startOffset is : 0x20e0end with jump
start of BB is 14e, 
before end of BB is 14e 
count insns of BB is 0 
========================
end with jump
start of BB is 150, 
before end of BB is 154 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0020ec: 1311 0000                              |0150: const/16 v17, #int 0 // #0
=::==   0020f0: 020e 1100                              |0152: move/from16 v14, v17
=::= -----------------------
BB startOffset is : 0x20ecend with jump
start of BB is 154, 
before end of BB is 154 
count insns of BB is 0 
========================
end with jump
start of BB is 156, 
before end of BB is 15a 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0020f8: 1311 0000                              |0156: const/16 v17, #int 0 // #0
=::==   0020fc: 0204 1100                              |0158: move/from16 v4, v17
=::= -----------------------
BB startOffset is : 0x20f8end with jump
start of BB is 15a, 
before end of BB is 15a 
count insns of BB is 0 
========================
end with jump
start of BB is 15c, 
before end of BB is 160 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002104: 1311 0000                              |015c: const/16 v17, #int 0 // #0
=::==   002108: 0205 1100                              |015e: move/from16 v5, v17
=::= -----------------------
BB startOffset is : 0x2104end with jump
start of BB is 160, 
before end of BB is 160 
count insns of BB is 0 
========================
end with jump
start of BB is 162, 
before end of BB is 166 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002110: 1311 0000                              |0162: const/16 v17, #int 0 // #0
=::==   002114: 0206 1100                              |0164: move/from16 v6, v17
=::= -----------------------
BB startOffset is : 0x2110end with jump
start of BB is 166, 
before end of BB is 166 
count insns of BB is 0 
========================
end with jump
start of BB is 168, 
before end of BB is 16c 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00211c: 1311 0000                              |0168: const/16 v17, #int 0 // #0
=::==   002120: 020c 1100                              |016a: move/from16 v12, v17
=::= -----------------------
BB startOffset is : 0x211cend with jump
start of BB is 16c, 
before end of BB is 16c 
count insns of BB is 0 
========================
end with jump
start of BB is 16e, 
before end of BB is 172 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002128: 1311 0000                              |016e: const/16 v17, #int 0 // #0
=::==   00212c: 020d 1100                              |0170: move/from16 v13, v17
=::= -----------------------
BB startOffset is : 0x2128end with jump
start of BB is 172, 
before end of BB is 172 
count insns of BB is 0 
========================
end with jump
start of BB is 174, 
before end of BB is 178 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002134: 1311 0000                              |0174: const/16 v17, #int 0 // #0
=::==   002138: 020e 1100                              |0176: move/from16 v14, v17
=::= -----------------------
BB startOffset is : 0x2134end with jump
start of BB is 178, 
before end of BB is 178 
count insns of BB is 0 
========================
end with jump
start of BB is 17a, 
before end of BB is 17e 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002140: 1311 0000                              |017a: const/16 v17, #int 0 // #0
=::==   002144: 0204 1100                              |017c: move/from16 v4, v17
=::= -----------------------
BB startOffset is : 0x2140end with jump
start of BB is 17e, 
before end of BB is 17e 
count insns of BB is 0 
========================
end with jump
start of BB is 180, 
before end of BB is 184 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00214c: 1311 0000                              |0180: const/16 v17, #int 0 // #0
=::==   002150: 0205 1100                              |0182: move/from16 v5, v17
=::= -----------------------
BB startOffset is : 0x214cend with jump
start of BB is 184, 
before end of BB is 184 
count insns of BB is 0 
========================
end with second!
start of BB is 186, 
before end of BB is 18a 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002158: 1311 0000                              |0186: const/16 v17, #int 0 // #0
=::==   00215c: 0206 1100                              |0188: move/from16 v6, v17
=::= -----------------------
BB startOffset is : 0x2158end with jump
start of BB is 18a, 
before end of BB is 18c 
count insns of BB is 1 
========================
end with jump
start of BB is 18e, 
before end of BB is 192 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002168: 1311 0100                              |018e: const/16 v17, #int 1 // #1
=::==   00216c: 0202 1100                              |0190: move/from16 v2, v17
=::= -----------------------
BB startOffset is : 0x2168end with jump
start of BB is 193, 
before end of BB is 197 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002172: 1311 0100                              |0193: const/16 v17, #int 1 // #1
=::==   002176: 0203 1100                              |0195: move/from16 v3, v17
=::= -----------------------
BB startOffset is : 0x2172end with jump
start of BB is 198, 
before end of BB is 19c 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00217c: 1311 0100                              |0198: const/16 v17, #int 1 // #1
=::==   002180: 0207 1100                              |019a: move/from16 v7, v17
=::= -----------------------
BB startOffset is : 0x217cend with jump
start of BB is 19d, 
before end of BB is 1a1 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002186: 1311 0100                              |019d: const/16 v17, #int 1 // #1
=::==   00218a: 0208 1100                              |019f: move/from16 v8, v17
=::= -----------------------
BB startOffset is : 0x2186end with jump
start of BB is 1a2, 
before end of BB is 1a6 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002190: 1311 0100                              |01a2: const/16 v17, #int 1 // #1
=::==   002194: 0209 1100                              |01a4: move/from16 v9, v17
=::= -----------------------
BB startOffset is : 0x2190end with jump
start of BB is 1a7, 
before end of BB is 1ab 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00219a: 1311 0100                              |01a7: const/16 v17, #int 1 // #1
=::==   00219e: 020a 1100                              |01a9: move/from16 v10, v17
=::= -----------------------
BB startOffset is : 0x219aend with jump
start of BB is 1ac, 
before end of BB is 1b0 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0021a4: 1311 0100                              |01ac: const/16 v17, #int 1 // #1
=::==   0021a8: 020c 1100                              |01ae: move/from16 v12, v17
=::= -----------------------
BB startOffset is : 0x21a4end with jump
start of BB is 1b1, 
before end of BB is 1b5 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0021ae: 1311 0100                              |01b1: const/16 v17, #int 1 // #1
=::==   0021b2: 020d 1100                              |01b3: move/from16 v13, v17
=::= -----------------------
BB startOffset is : 0x21aeend with jump
start of BB is 1b6, 
before end of BB is 1ba 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0021b8: 1311 0100                              |01b6: const/16 v17, #int 1 // #1
=::==   0021bc: 020e 1100                              |01b8: move/from16 v14, v17
=::= -----------------------
BB startOffset is : 0x21b8end with jump
start of BB is 1bb, 
before end of BB is 1bf 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0021c2: 1311 0100                              |01bb: const/16 v17, #int 1 // #1
=::==   0021c6: 0204 1100                              |01bd: move/from16 v4, v17
=::= -----------------------
BB startOffset is : 0x21c2end with jump
start of BB is 1c0, 
before end of BB is 1c4 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0021cc: 1311 0100                              |01c0: const/16 v17, #int 1 // #1
=::==   0021d0: 0205 1100                              |01c2: move/from16 v5, v17
=::= -----------------------
BB startOffset is : 0x21ccend with jump
start of BB is 1c5, 
before end of BB is 1c9 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0021d6: 1311 0100                              |01c5: const/16 v17, #int 1 // #1
=::==   0021da: 0206 1100                              |01c7: move/from16 v6, v17
=::= -----------------------
BB startOffset is : 0x21d6end with jump
start of BB is 1ca, 
before end of BB is 1ce 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0021e0: 1311 0100                              |01ca: const/16 v17, #int 1 // #1
=::==   0021e4: 020c 1100                              |01cc: move/from16 v12, v17
=::= -----------------------
BB startOffset is : 0x21e0end with jump
start of BB is 1cf, 
before end of BB is 1d3 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0021ea: 1311 0100                              |01cf: const/16 v17, #int 1 // #1
=::==   0021ee: 020d 1100                              |01d1: move/from16 v13, v17
=::= -----------------------
BB startOffset is : 0x21eaend with jump
start of BB is 1d4, 
before end of BB is 1d8 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0021f4: 1311 0100                              |01d4: const/16 v17, #int 1 // #1
=::==   0021f8: 020e 1100                              |01d6: move/from16 v14, v17
=::= -----------------------
BB startOffset is : 0x21f4end with jump
start of BB is 1d9, 
before end of BB is 1dd 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0021fe: 1311 0100                              |01d9: const/16 v17, #int 1 // #1
=::==   002202: 0204 1100                              |01db: move/from16 v4, v17
=::= -----------------------
BB startOffset is : 0x21feend with jump
start of BB is 1de, 
before end of BB is 1e2 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002208: 1311 0100                              |01de: const/16 v17, #int 1 // #1
=::==   00220c: 0205 1100                              |01e0: move/from16 v5, v17
=::= -----------------------
BB startOffset is : 0x2208end with jump
start of BB is 1e3, 
before end of BB is 1e7 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002212: 1311 0100                              |01e3: const/16 v17, #int 1 // #1
=::==   002216: 0206 1100                              |01e5: move/from16 v6, v17
=::= -----------------------
BB startOffset is : 0x2212end with jump
start of BB is 1e8, 
before end of BB is 1ea 
count insns of BB is 1 
========================
<<<<<<<<<<< code 48  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2224; insns off=0x2234;registers is 3;insns size is 6~~~~~~~~

==!
002234: 3802 0400                              |0000: if-eqz v2, 0004 // +0004
002238: 5912 1a00                              |0002: iput v2, v1,field@001a
00223c: 1210                                   |0004: const/4 v0, #int 1 // #1
00223e: 0f00                                   |0005: return v0
BB begin is :  4--2   8--4  
start add mir ,first is 0 ; second is 2!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with second!
start of BB is 2, 
before end of BB is 4 
count insns of BB is 1 
========================
end with jump
start of BB is 4, 
before end of BB is 5 
count insns of BB is 1 
========================
<<<<<<<<<<< code 49  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2240; insns off=0x2250;registers is 1;insns size is 1~~~~~~~~

==!
002250: 0e00                                   |0000: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
<<<<<<<<<<< code 50  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2254; insns off=0x2264;registers is 1;insns size is 1~~~~~~~~

==!
002264: 0e00                                   |0000: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
<<<<<<<<<<< code 51  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2268; insns off=0x2278;registers is 3;insns size is 8~~~~~~~~

==!
002278: 2200 2700                              |0000: new-instance v0,class@0027
00227c: 1a01 5400                              |0002: const-string v1, string@0054
002280: 7020 7900 1000                         |0004: invoke-direct {v0, v1}, method@0079
002286: 1100                                   |0007: return-object v0
BB begin is :  e--7  
start add mir ,first is 0 ; second is 7!
end with jump
start of BB is 0, 
before end of BB is 4 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002278: 2200 2700                              |0000: new-instance v0,class@0027
=::==   00227c: 1a01 5400                              |0002: const-string v1, string@0054
=::= -----------------------
BB startOffset is : 0x2278end with jump
start of BB is 7, 
before end of BB is 7 
count insns of BB is 0 
========================
<<<<<<<<<<< code 52  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2288; insns off=0x2298;registers is 2;insns size is 12~~~~~~~~

==!
002298: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
00229e: 1300 0c00                              |0003: const/16 v0, #int 12 // #c
0022a2: 5910 1c00                              |0005: iput v0, v1,field@001c
0022a6: 1300 4000                              |0007: const/16 v0, #int 64 // #40
0022aa: 5910 1b00                              |0009: iput v0, v1,field@001b
0022ae: 0e00                                   |000b: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is b 
count insns of BB is 4 
========================
=::== -----------------------
=::==   00229e: 1300 0c00                              |0003: const/16 v0, #int 12 // #c
=::==   0022a2: 5910 1c00                              |0005: iput v0, v1,field@001c
=::==   0022a6: 1300 4000                              |0007: const/16 v0, #int 64 // #40
=::==   0022aa: 5910 1b00                              |0009: iput v0, v1,field@001b
=::= -----------------------
BB startOffset is : 0x229e<<<<<<<<<<< code 53  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x22b0; insns off=0x22c0;registers is 2;insns size is 2~~~~~~~~

==!
0022c0: 1200                                   |0000: const/4 v0, #int 0 // #0
0022c2: 0f00                                   |0001: return v0
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 1 
count insns of BB is 1 
========================
<<<<<<<<<<< code 54  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x22c4; insns off=0x22d4;registers is 2;insns size is 3~~~~~~~~

==!
0022d4: 1300 840a                              |0000: const/16 v0, #int 2692 // #a84
0022d8: 0f00                                   |0002: return v0
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
<<<<<<<<<<< code 55  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x22dc; insns off=0x22ec;registers is 13;insns size is 93~~~~~~~~

==!
0022ec: 120b                                   |0000: const/4 v11, #int 0 // #0
0022ee: 121a                                   |0001: const/4 v10, #int 1 // #1
0022f0: 54c7 1d00                              |0002: iget-object v7, v12,field@001d
0022f4: 4b0a 070b                              |0004: aput v10, v7, v11
0022f8: 1210                                   |0006: const/4 v0, #int 1 // #1
0022fa: 52c7 1b00                              |0007: iget v7, v12,field@001b
0022fe: 3470 1200                              |0009: if-lt v0, v7, 001b // +0012
002302: 1203                                   |000b: const/4 v3, #int 0 // #0
002304: 1205                                   |000c: const/4 v5, #int 0 // #0
002306: 1202                                   |000d: const/4 v2, #int 0 // #0
002308: 52c7 1b00                              |000e: iget v7, v12,field@001b
00230c: 3472 1900                              |0010: if-lt v2, v7, 0029 // +0019
002310: 59c3 1e00                              |0012: iput v3, v12,field@001e
002314: 59c5 1f00                              |0014: iput v5, v12,field@001f
002318: 54c7 1d00                              |0016: iget-object v7, v12,field@001d
00231c: 4407 070b                              |0018: aget v7, v7, v11
002320: 0f07                                   |001a: return v7
002322: 54c7 1d00                              |001b: iget-object v7, v12,field@001d
002326: 54c8 1d00                              |001d: iget-object v8, v12,field@001d
00232a: 9109 000a                              |001f: sub-int v9, v0, v10
00232e: 4408 0809                              |0021: aget v8, v8, v9
002332: b008                                   |0023: add-int/2addr v8, v0
002334: 4b08 0700                              |0024: aput v8, v7, v0
002338: d800 0001                              |0026: add-int/lit8 v0, v0, #int 1 // #01
00233c: 28df                                   |0028: goto 0007 // -0021
00233e: 1214                                   |0029: const/4 v4, #int 1 // #1
002340: 52c7 1b00                              |002a: iget v7, v12,field@001b
002344: 3474 0500                              |002c: if-lt v4, v7, 0031 // +0005
002348: d802 0201                              |002e: add-int/lit8 v2, v2, #int 1 // #01
00234c: 28de                                   |0030: goto 000e // -0022
00234e: 52c7 1b00                              |0031: iget v7, v12,field@001b
002352: 52c8 1c00                              |0033: iget v8, v12,field@001c
002356: 9006 0708                              |0035: add-int v6, v7, v8
00235a: b063                                   |0037: add-int/2addr v3, v6
00235c: d805 0502                              |0038: add-int/lit8 v5, v5, #int 2 // #02
002360: 54c7 1d00                              |003a: iget-object v7, v12,field@001d
002364: 9108 040a                              |003c: sub-int v8, v4, v10
002368: 4407 0708                              |003e: aget v7, v7, v8
00236c: 54c8 1d00                              |0040: iget-object v8, v12,field@001d
002370: 4408 0804                              |0042: aget v8, v8, v4
002374: 3587 1600                              |0044: if-ge v7, v8, 005a // +0016
002378: 54c7 1d00                              |0046: iget-object v7, v12,field@001d
00237c: 9108 040a                              |0048: sub-int v8, v4, v10
002380: 4401 0708                              |004a: aget v1, v7, v8
002384: 54c7 1d00                              |004c: iget-object v7, v12,field@001d
002388: 9108 040a                              |004e: sub-int v8, v4, v10
00238c: 54c9 1d00                              |0050: iget-object v9, v12,field@001d
002390: 4409 0904                              |0052: aget v9, v9, v4
002394: 4b09 0708                              |0054: aput v9, v7, v8
002398: 54c7 1d00                              |0056: iget-object v7, v12,field@001d
00239c: 4b01 0704                              |0058: aput v1, v7, v4
0023a0: d804 0401                              |005a: add-int/lit8 v4, v4, #int 1 // #01
0023a4: 28ce                                   |005c: goto 002a // -0032
BB begin is :  e--7   16--b   1c--e   24--12   36--1b   52--29   54--2a   5c--2e   62--31   8c--46   b4--5a  
start add mir ,first is 0 ; second is 7!
end with second!
start of BB is 0, 
before end of BB is 7 
count insns of BB is 5 
========================
=::== -----------------------
=::==   0022ec: 120b                                   |0000: const/4 v11, #int 0 // #0
=::==   0022ee: 121a                                   |0001: const/4 v10, #int 1 // #1
=::==   0022f0: 54c7 1d00                              |0002: iget-object v7, v12,field@001d
=::==   0022f4: 4b0a 070b                              |0004: aput v10, v7, v11
=::==   0022f8: 1210                                   |0006: const/4 v0, #int 1 // #1
=::= -----------------------
BB startOffset is : 0x22ecend with jump
start of BB is 7, 
before end of BB is 9 
count insns of BB is 1 
========================
end with second!
start of BB is b, 
before end of BB is e 
count insns of BB is 3 
========================
=::== -----------------------
=::==   002302: 1203                                   |000b: const/4 v3, #int 0 // #0
=::==   002304: 1205                                   |000c: const/4 v5, #int 0 // #0
=::==   002306: 1202                                   |000d: const/4 v2, #int 0 // #0
=::= -----------------------
BB startOffset is : 0x2302end with jump
start of BB is e, 
before end of BB is 10 
count insns of BB is 1 
========================
end with jump
start of BB is 12, 
before end of BB is 1a 
count insns of BB is 4 
========================
=::== -----------------------
=::==   002310: 59c3 1e00                              |0012: iput v3, v12,field@001e
=::==   002314: 59c5 1f00                              |0014: iput v5, v12,field@001f
=::==   002318: 54c7 1d00                              |0016: iget-object v7, v12,field@001d
=::==   00231c: 4407 070b                              |0018: aget v7, v7, v11
=::= -----------------------
BB startOffset is : 0x2310end with jump
start of BB is 1b, 
before end of BB is 28 
count insns of BB is 7 
========================
=::== -----------------------
=::==   002322: 54c7 1d00                              |001b: iget-object v7, v12,field@001d
=::==   002326: 54c8 1d00                              |001d: iget-object v8, v12,field@001d
=::==   00232a: 9109 000a                              |001f: sub-int v9, v0, v10
=::==   00232e: 4408 0809                              |0021: aget v8, v8, v9
=::==   002332: b008                                   |0023: add-int/2addr v8, v0
=::==   002334: 4b08 0700                              |0024: aput v8, v7, v0
=::==   002338: d800 0001                              |0026: add-int/lit8 v0, v0, #int 1 // #01
=::= -----------------------
BB startOffset is : 0x2322end with second!
start of BB is 29, 
before end of BB is 2a 
count insns of BB is 1 
========================
end with jump
start of BB is 2a, 
before end of BB is 2c 
count insns of BB is 1 
========================
end with jump
start of BB is 2e, 
before end of BB is 30 
count insns of BB is 1 
========================
end with jump
start of BB is 31, 
before end of BB is 44 
count insns of BB is 10 
========================
=::== -----------------------
=::==   00234e: 52c7 1b00                              |0031: iget v7, v12,field@001b
=::==   002352: 52c8 1c00                              |0033: iget v8, v12,field@001c
=::==   002356: 9006 0708                              |0035: add-int v6, v7, v8
=::==   00235a: b063                                   |0037: add-int/2addr v3, v6
=::==   00235c: d805 0502                              |0038: add-int/lit8 v5, v5, #int 2 // #02
=::==   002360: 54c7 1d00                              |003a: iget-object v7, v12,field@001d
=::==   002364: 9108 040a                              |003c: sub-int v8, v4, v10
=::==   002368: 4407 0708                              |003e: aget v7, v7, v8
=::==   00236c: 54c8 1d00                              |0040: iget-object v8, v12,field@001d
=::==   002370: 4408 0804                              |0042: aget v8, v8, v4
=::= -----------------------
BB startOffset is : 0x234eend with second!
start of BB is 46, 
before end of BB is 5a 
count insns of BB is 10 
========================
=::== -----------------------
=::==   002378: 54c7 1d00                              |0046: iget-object v7, v12,field@001d
=::==   00237c: 9108 040a                              |0048: sub-int v8, v4, v10
=::==   002380: 4401 0708                              |004a: aget v1, v7, v8
=::==   002384: 54c7 1d00                              |004c: iget-object v7, v12,field@001d
=::==   002388: 9108 040a                              |004e: sub-int v8, v4, v10
=::==   00238c: 54c9 1d00                              |0050: iget-object v9, v12,field@001d
=::==   002390: 4409 0904                              |0052: aget v9, v9, v4
=::==   002394: 4b09 0708                              |0054: aput v9, v7, v8
=::==   002398: 54c7 1d00                              |0056: iget-object v7, v12,field@001d
=::==   00239c: 4b01 0704                              |0058: aput v1, v7, v4
=::= -----------------------
BB startOffset is : 0x2378end with jump
start of BB is 5a, 
before end of BB is 5c 
count insns of BB is 1 
========================
<<<<<<<<<<< code 56  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x23a8; insns off=0x23b8;registers is 3;insns size is 12~~~~~~~~

==!
0023b8: 3802 0400                              |0000: if-eqz v2, 0004 // +0004
0023bc: 5912 1b00                              |0002: iput v2, v1,field@001b
0023c0: 5210 1b00                              |0004: iget v0, v1,field@001b
0023c4: 2300 3100                              |0006: new-array v0, v0, class@0031
0023c8: 5b10 1d00                              |0008: iput-object v0, v1,field@001d
0023cc: 1210                                   |000a: const/4 v0, #int 1 // #1
0023ce: 0f00                                   |000b: return v0
BB begin is :  4--2   8--4  
start add mir ,first is 0 ; second is 2!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with second!
start of BB is 2, 
before end of BB is 4 
count insns of BB is 1 
========================
end with jump
start of BB is 4, 
before end of BB is b 
count insns of BB is 4 
========================
=::== -----------------------
=::==   0023c0: 5210 1b00                              |0004: iget v0, v1,field@001b
=::==   0023c4: 2300 3100                              |0006: new-array v0, v0, class@0031
=::==   0023c8: 5b10 1d00                              |0008: iput-object v0, v1,field@001d
=::==   0023cc: 1210                                   |000a: const/4 v0, #int 1 // #1
=::= -----------------------
BB startOffset is : 0x23c0<<<<<<<<<<< code 57  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x23d0; insns off=0x23e0;registers is 1;insns size is 1~~~~~~~~

==!
0023e0: 0e00                                   |0000: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
<<<<<<<<<<< code 58  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x23e4; insns off=0x23f4;registers is 1;insns size is 1~~~~~~~~

==!
0023f4: 0e00                                   |0000: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
<<<<<<<<<<< code 59  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x23f8; insns off=0x2408;registers is 3;insns size is 8~~~~~~~~

==!
002408: 2200 2700                              |0000: new-instance v0,class@0027
00240c: 1a01 5700                              |0002: const-string v1, string@0057
002410: 7020 7900 1000                         |0004: invoke-direct {v0, v1}, method@0079
002416: 1100                                   |0007: return-object v0
BB begin is :  e--7  
start add mir ,first is 0 ; second is 7!
end with jump
start of BB is 0, 
before end of BB is 4 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002408: 2200 2700                              |0000: new-instance v0,class@0027
=::==   00240c: 1a01 5700                              |0002: const-string v1, string@0057
=::= -----------------------
BB startOffset is : 0x2408end with jump
start of BB is 7, 
before end of BB is 7 
count insns of BB is 0 
========================
<<<<<<<<<<< code 60  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2418; insns off=0x2428;registers is 2;insns size is 8~~~~~~~~

==!
002428: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
00242e: 1300 6400                              |0003: const/16 v0, #int 100 // #64
002432: 5910 2100                              |0005: iput v0, v1,field@0021
002436: 0e00                                   |0007: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 7 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00242e: 1300 6400                              |0003: const/16 v0, #int 100 // #64
=::==   002432: 5910 2100                              |0005: iput v0, v1,field@0021
=::= -----------------------
BB startOffset is : 0x242e<<<<<<<<<<< code 61  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2438; insns off=0x2448;registers is 3;insns size is 13~~~~~~~~

==!
002448: 3902 0400                              |0000: if-nez v2, 0004 // +0004
00244c: 1200                                   |0002: const/4 v0, #int 0 // #0
00244e: 0f00                                   |0003: return v0
002450: 1210                                   |0004: const/4 v0, #int 1 // #1
002452: 9100 0200                              |0005: sub-int v0, v2, v0
002456: 6e20 4b00 0100                         |0007: invoke-virtual {v1, v0}, method@004b
00245c: 0a00                                   |000a: move-result v0
00245e: b020                                   |000b: add-int/2addr v0, v2
002460: 28f7                                   |000c: goto 0003 // -0009
BB begin is :  4--2   6--3   8--4   14--a  
start add mir ,first is 0 ; second is 2!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 2, 
before end of BB is 3 
count insns of BB is 1 
========================
end with jump
start of BB is 3, 
before end of BB is 3 
count insns of BB is 0 
========================
end with jump
start of BB is 4, 
before end of BB is 7 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002450: 1210                                   |0004: const/4 v0, #int 1 // #1
=::==   002452: 9100 0200                              |0005: sub-int v0, v2, v0
=::= -----------------------
BB startOffset is : 0x2450end with jump
start of BB is a, 
before end of BB is c 
count insns of BB is 2 
========================
<<<<<<<<<<< code 62  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2464; insns off=0x2474;registers is 2;insns size is 2~~~~~~~~

==!
002474: 1200                                   |0000: const/4 v0, #int 0 // #0
002476: 0f00                                   |0001: return v0
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 1 
count insns of BB is 1 
========================
<<<<<<<<<<< code 63  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2478; insns off=0x2488;registers is 2;insns size is 3~~~~~~~~

==!
002488: 1300 900e                              |0000: const/16 v0, #int 3728 // #e90
00248c: 0f00                                   |0002: return v0
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
<<<<<<<<<<< code 64  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2490; insns off=0x24a0;registers is 6;insns size is 23~~~~~~~~

==!
0024a0: 1201                                   |0000: const/4 v1, #int 0 // #0
0024a2: 1200                                   |0001: const/4 v0, #int 0 // #0
0024a4: 5254 2100                              |0002: iget v4, v5,field@0021
0024a8: 3440 0300                              |0004: if-lt v0, v4, 0007 // +0003
0024ac: 0f01                                   |0006: return v1
0024ae: 6e20 4b00 0500                         |0007: invoke-virtual {v5, v0}, method@004b
0024b4: 0a02                                   |000a: move-result v2
0024b6: 6e20 5000 0500                         |000b: invoke-virtual {v5, v0}, method@0050
0024bc: 0a03                                   |000e: move-result v3
0024be: 3732 0600                              |000f: if-le v2, v3, 0015 // +0006
0024c2: b031                                   |0011: add-int/2addr v1, v3
0024c4: d800 0001                              |0012: add-int/lit8 v0, v0, #int 1 // #01
0024c8: 28ee                                   |0014: goto 0002 // -0012
0024ca: b021                                   |0015: add-int/2addr v1, v2
0024cc: 28fc                                   |0016: goto 0012 // -0004
BB begin is :  4--2   c--6   e--7   14--a   1c--e   22--11   24--12   2a--15  
start add mir ,first is 0 ; second is 2!
end with second!
start of BB is 0, 
before end of BB is 2 
count insns of BB is 2 
========================
end with jump
start of BB is 2, 
before end of BB is 4 
count insns of BB is 1 
========================
end with jump
start of BB is 6, 
before end of BB is 6 
count insns of BB is 0 
========================
end with jump
start of BB is 7, 
before end of BB is 7 
count insns of BB is 0 
========================
end with jump
start of BB is a, 
before end of BB is b 
count insns of BB is 1 
========================
end with jump
start of BB is e, 
before end of BB is f 
count insns of BB is 1 
========================
end with second!
start of BB is 11, 
before end of BB is 12 
count insns of BB is 1 
========================
end with jump
start of BB is 12, 
before end of BB is 14 
count insns of BB is 1 
========================
end with jump
start of BB is 15, 
before end of BB is 16 
count insns of BB is 1 
========================
<<<<<<<<<<< code 65  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x24d0; insns off=0x24e0;registers is 3;insns size is 6~~~~~~~~

==!
0024e0: 3802 0400                              |0000: if-eqz v2, 0004 // +0004
0024e4: 5912 2100                              |0002: iput v2, v1,field@0021
0024e8: 1210                                   |0004: const/4 v0, #int 1 // #1
0024ea: 0f00                                   |0005: return v0
BB begin is :  4--2   8--4  
start add mir ,first is 0 ; second is 2!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with second!
start of BB is 2, 
before end of BB is 4 
count insns of BB is 1 
========================
end with jump
start of BB is 4, 
before end of BB is 5 
count insns of BB is 1 
========================
<<<<<<<<<<< code 66  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x24ec; insns off=0x24fc;registers is 6;insns size is 35~~~~~~~~

==!
0024fc: 1213                                   |0000: const/4 v3, #int 1 // #1
0024fe: 0150                                   |0001: move v0, v5
002500: 5242 2000                              |0002: iget v2, v4,field@0020
002504: d802 0201                              |0004: add-int/lit8 v2, v2, #int 1 // #01
002508: 5942 2000                              |0006: iput v2, v4,field@0020
00250c: 3905 0400                              |0008: if-nez v5, 000c // +0004
002510: 0101                                   |000a: move v1, v0
002512: 0f01                                   |000b: return v1
002514: dd02 0001                              |000c: and-int/lit8 v2, v0, #int 1 // #01
002518: 3802 0b00                              |000e: if-eqz v2, 0019 // +000b
00251c: 9102 0503                              |0010: sub-int v2, v5, v3
002520: 6e20 5000 2400                         |0012: invoke-virtual {v4, v2}, method@0050
002526: 0a02                                   |0015: move-result v2
002528: b020                                   |0016: add-int/2addr v0, v2
00252a: 0101                                   |0017: move v1, v0
00252c: 28f3                                   |0018: goto 000b // -000d
00252e: 9102 0503                              |0019: sub-int v2, v5, v3
002532: 6e20 5000 2400                         |001b: invoke-virtual {v4, v2}, method@0050
002538: 0a02                                   |001e: move-result v2
00253a: d802 0201                              |001f: add-int/lit8 v2, v2, #int 1 // #01
00253e: b020                                   |0021: add-int/2addr v0, v2
002540: 28f5                                   |0022: goto 0017 // -000b
BB begin is :  14--a   16--b   18--c   20--10   2a--15   2e--17   32--19   3c--1e  
start add mir ,first is 0 ; second is a!
end with jump
start of BB is 0, 
before end of BB is 8 
count insns of BB is 5 
========================
=::== -----------------------
=::==   0024fc: 1213                                   |0000: const/4 v3, #int 1 // #1
=::==   0024fe: 0150                                   |0001: move v0, v5
=::==   002500: 5242 2000                              |0002: iget v2, v4,field@0020
=::==   002504: d802 0201                              |0004: add-int/lit8 v2, v2, #int 1 // #01
=::==   002508: 5942 2000                              |0006: iput v2, v4,field@0020
=::= -----------------------
BB startOffset is : 0x24fcend with jump
start of BB is a, 
before end of BB is b 
count insns of BB is 1 
========================
end with jump
start of BB is b, 
before end of BB is b 
count insns of BB is 0 
========================
end with jump
start of BB is c, 
before end of BB is e 
count insns of BB is 1 
========================
end with jump
start of BB is 10, 
before end of BB is 12 
count insns of BB is 1 
========================
end with second!
start of BB is 15, 
before end of BB is 17 
count insns of BB is 2 
========================
end with jump
start of BB is 17, 
before end of BB is 18 
count insns of BB is 1 
========================
end with jump
start of BB is 19, 
before end of BB is 1b 
count insns of BB is 1 
========================
end with jump
start of BB is 1e, 
before end of BB is 22 
count insns of BB is 3 
========================
=::== -----------------------
=::==   002538: 0a02                                   |001e: move-result v2
=::==   00253a: d802 0201                              |001f: add-int/lit8 v2, v2, #int 1 // #01
=::==   00253e: b020                                   |0021: add-int/2addr v0, v2
=::= -----------------------
BB startOffset is : 0x2538<<<<<<<<<<< code 67  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2544; insns off=0x2554;registers is 1;insns size is 1~~~~~~~~

==!
002554: 0e00                                   |0000: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
<<<<<<<<<<< code 68  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2558; insns off=0x2568;registers is 1;insns size is 1~~~~~~~~

==!
002568: 0e00                                   |0000: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
<<<<<<<<<<< code 69  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x256c; insns off=0x257c;registers is 3;insns size is 8~~~~~~~~

==!
00257c: 2200 2700                              |0000: new-instance v0,class@0027
002580: 1a01 5a00                              |0002: const-string v1, string@005a
002584: 7020 7900 1000                         |0004: invoke-direct {v0, v1}, method@0079
00258a: 1100                                   |0007: return-object v0
BB begin is :  e--7  
start add mir ,first is 0 ; second is 7!
end with jump
start of BB is 0, 
before end of BB is 4 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00257c: 2200 2700                              |0000: new-instance v0,class@0027
=::==   002580: 1a01 5a00                              |0002: const-string v1, string@005a
=::= -----------------------
BB startOffset is : 0x257cend with jump
start of BB is 7, 
before end of BB is 7 
count insns of BB is 0 
========================
<<<<<<<<<<< code 70  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x258c; insns off=0x259c;registers is 1;insns size is 4~~~~~~~~

==!
00259c: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
0025a2: 0e00                                   |0003: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 3 
count insns of BB is 0 
========================
<<<<<<<<<<< code 71  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x25a4; insns off=0x25b4;registers is 1;insns size is 4~~~~~~~~

==!
0025b4: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
0025ba: 0e00                                   |0003: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 3 
count insns of BB is 0 
========================
<<<<<<<<<<< code 72  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x25bc; insns off=0x25cc;registers is 1;insns size is 4~~~~~~~~

==!
0025cc: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
0025d2: 0e00                                   |0003: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 3 
count insns of BB is 0 
========================
<<<<<<<<<<< code 73  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x25d4; insns off=0x25e4;registers is 1;insns size is 4~~~~~~~~

==!
0025e4: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
0025ea: 0e00                                   |0003: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 3 
count insns of BB is 0 
========================
<<<<<<<<<<< code 74  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x25ec; insns off=0x25fc;registers is 1;insns size is 4~~~~~~~~

==!
0025fc: 7010 7800 0000                         |0000: invoke-direct {v0}, method@0078
002602: 0e00                                   |0003: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 3 
count insns of BB is 0 
========================
<<<<<<<<<<< code 75  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2604; insns off=0x2614;registers is 2;insns size is 8~~~~~~~~

==!
002614: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
00261a: 1300 0002                              |0003: const/16 v0, #int 512 // #200
00261e: 5910 2600                              |0005: iput v0, v1,field@0026
002622: 0e00                                   |0007: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 7 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00261a: 1300 0002                              |0003: const/16 v0, #int 512 // #200
=::==   00261e: 5910 2600                              |0005: iput v0, v1,field@0026
=::= -----------------------
BB startOffset is : 0x261a<<<<<<<<<<< code 76  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2624; insns off=0x2634;registers is 2;insns size is 2~~~~~~~~

==!
002634: 1200                                   |0000: const/4 v0, #int 0 // #0
002636: 0f00                                   |0001: return v0
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 1 
count insns of BB is 1 
========================
<<<<<<<<<<< code 77  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2638; insns off=0x2648;registers is 2;insns size is 3~~~~~~~~

==!
002648: 1300 d30a                              |0000: const/16 v0, #int 2771 // #ad3
00264c: 0f00                                   |0002: return v0
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
<<<<<<<<<<< code 78  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2650; insns off=0x2660;registers is 9;insns size is 65~~~~~~~~

==!
002660: 1217                                   |0000: const/4 v7, #int 1 // #1
002662: 1213                                   |0001: const/4 v3, #int 1 // #1
002664: 1201                                   |0002: const/4 v1, #int 0 // #0
002666: 5485 2700                              |0003: iget-object v5, v8,field@0027
00266a: 1206                                   |0005: const/4 v6, #int 0 // #0
00266c: 4b07 0506                              |0006: aput v7, v5, v6
002670: 5485 2700                              |0008: iget-object v5, v8,field@0027
002674: 1226                                   |000a: const/4 v6, #int 2 // #2
002676: 4b06 0507                              |000b: aput v6, v5, v7
00267a: 1223                                   |000d: const/4 v3, #int 2 // #2
00267c: 1232                                   |000e: const/4 v2, #int 3 // #3
00267e: 5285 2600                              |000f: iget v5, v8,field@0026
002682: 3452 0300                              |0011: if-lt v2, v5, 0014 // +0003
002686: 0f03                                   |0013: return v3
002688: 1214                                   |0014: const/4 v4, #int 1 // #1
00268a: 1210                                   |0015: const/4 v0, #int 1 // #1
00268c: 3534 0400                              |0016: if-ge v4, v3, 001a // +0004
002690: 3900 0f00                              |0018: if-nez v0, 0027 // +000f
002694: 3800 0a00                              |001a: if-eqz v0, 0024 // +000a
002698: d803 0301                              |001c: add-int/lit8 v3, v3, #int 1 // #01
00269c: 5485 2700                              |001e: iget-object v5, v8,field@0027
0026a0: 9106 0307                              |0020: sub-int v6, v3, v7
0026a4: 4b02 0506                              |0022: aput v2, v5, v6
0026a8: d802 0201                              |0024: add-int/lit8 v2, v2, #int 1 // #01
0026ac: 28e9                                   |0026: goto 000f // -0017
0026ae: 5485 2700                              |0027: iget-object v5, v8,field@0027
0026b2: 4405 0504                              |0029: aget v5, v5, v4
0026b6: 3d05 1300                              |002b: if-lez v5, 003e // +0013
0026ba: 5485 2700                              |002d: iget-object v5, v8,field@0027
0026be: 4405 0504                              |002f: aget v5, v5, v4
0026c2: db06 0202                              |0031: div-int/lit8 v6, v2, #int 2 // #02
0026c6: 3665 0b00                              |0033: if-gt v5, v6, 003e // +000b
0026ca: 5485 2700                              |0035: iget-object v5, v8,field@0027
0026ce: 4405 0504                              |0037: aget v5, v5, v4
0026d2: 9405 0205                              |0039: rem-int v5, v2, v5
0026d6: 3905 0300                              |003b: if-nez v5, 003e // +0003
0026da: 1200                                   |003d: const/4 v0, #int 0 // #0
0026dc: d804 0401                              |003e: add-int/lit8 v4, v4, #int 1 // #01
0026e0: 28d6                                   |0040: goto 0016 // -002a
BB begin is :  1e--f   26--13   28--14   2c--16   30--18   34--1a   38--1c   48--24   4e--27   5a--2d   6a--35   7a--3d   7c--3e  
start add mir ,first is 0 ; second is f!
end with second!
start of BB is 0, 
before end of BB is f 
count insns of BB is 11 
========================
=::== -----------------------
=::==   002660: 1217                                   |0000: const/4 v7, #int 1 // #1
=::==   002662: 1213                                   |0001: const/4 v3, #int 1 // #1
=::==   002664: 1201                                   |0002: const/4 v1, #int 0 // #0
=::==   002666: 5485 2700                              |0003: iget-object v5, v8,field@0027
=::==   00266a: 1206                                   |0005: const/4 v6, #int 0 // #0
=::==   00266c: 4b07 0506                              |0006: aput v7, v5, v6
=::==   002670: 5485 2700                              |0008: iget-object v5, v8,field@0027
=::==   002674: 1226                                   |000a: const/4 v6, #int 2 // #2
=::==   002676: 4b06 0507                              |000b: aput v6, v5, v7
=::==   00267a: 1223                                   |000d: const/4 v3, #int 2 // #2
=::==   00267c: 1232                                   |000e: const/4 v2, #int 3 // #3
=::= -----------------------
BB startOffset is : 0x2660end with jump
start of BB is f, 
before end of BB is 11 
count insns of BB is 1 
========================
end with jump
start of BB is 13, 
before end of BB is 13 
count insns of BB is 0 
========================
end with jump
start of BB is 14, 
before end of BB is 16 
count insns of BB is 2 
========================
end with jump
start of BB is 16, 
before end of BB is 16 
count insns of BB is 0 
========================
end with jump
start of BB is 18, 
before end of BB is 18 
count insns of BB is 0 
========================
end with jump
start of BB is 1a, 
before end of BB is 1a 
count insns of BB is 0 
========================
end with second!
start of BB is 1c, 
before end of BB is 24 
count insns of BB is 4 
========================
=::== -----------------------
=::==   002698: d803 0301                              |001c: add-int/lit8 v3, v3, #int 1 // #01
=::==   00269c: 5485 2700                              |001e: iget-object v5, v8,field@0027
=::==   0026a0: 9106 0307                              |0020: sub-int v6, v3, v7
=::==   0026a4: 4b02 0506                              |0022: aput v2, v5, v6
=::= -----------------------
BB startOffset is : 0x2698end with jump
start of BB is 24, 
before end of BB is 26 
count insns of BB is 1 
========================
end with jump
start of BB is 27, 
before end of BB is 2b 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0026ae: 5485 2700                              |0027: iget-object v5, v8,field@0027
=::==   0026b2: 4405 0504                              |0029: aget v5, v5, v4
=::= -----------------------
BB startOffset is : 0x26aeend with jump
start of BB is 2d, 
before end of BB is 33 
count insns of BB is 3 
========================
=::== -----------------------
=::==   0026ba: 5485 2700                              |002d: iget-object v5, v8,field@0027
=::==   0026be: 4405 0504                              |002f: aget v5, v5, v4
=::==   0026c2: db06 0202                              |0031: div-int/lit8 v6, v2, #int 2 // #02
=::= -----------------------
BB startOffset is : 0x26baend with jump
start of BB is 35, 
before end of BB is 3b 
count insns of BB is 3 
========================
=::== -----------------------
=::==   0026ca: 5485 2700                              |0035: iget-object v5, v8,field@0027
=::==   0026ce: 4405 0504                              |0037: aget v5, v5, v4
=::==   0026d2: 9405 0205                              |0039: rem-int v5, v2, v5
=::= -----------------------
BB startOffset is : 0x26caend with second!
start of BB is 3d, 
before end of BB is 3e 
count insns of BB is 1 
========================
end with jump
start of BB is 3e, 
before end of BB is 40 
count insns of BB is 1 
========================
<<<<<<<<<<< code 79  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x26e4; insns off=0x26f4;registers is 3;insns size is 12~~~~~~~~

==!
0026f4: 3802 0400                              |0000: if-eqz v2, 0004 // +0004
0026f8: 5912 2600                              |0002: iput v2, v1,field@0026
0026fc: 5210 2600                              |0004: iget v0, v1,field@0026
002700: 2300 3100                              |0006: new-array v0, v0, class@0031
002704: 5b10 2700                              |0008: iput-object v0, v1,field@0027
002708: 1210                                   |000a: const/4 v0, #int 1 // #1
00270a: 0f00                                   |000b: return v0
BB begin is :  4--2   8--4  
start add mir ,first is 0 ; second is 2!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with second!
start of BB is 2, 
before end of BB is 4 
count insns of BB is 1 
========================
end with jump
start of BB is 4, 
before end of BB is b 
count insns of BB is 4 
========================
=::== -----------------------
=::==   0026fc: 5210 2600                              |0004: iget v0, v1,field@0026
=::==   002700: 2300 3100                              |0006: new-array v0, v0, class@0031
=::==   002704: 5b10 2700                              |0008: iput-object v0, v1,field@0027
=::==   002708: 1210                                   |000a: const/4 v0, #int 1 // #1
=::= -----------------------
BB startOffset is : 0x26fc<<<<<<<<<<< code 80  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x270c; insns off=0x271c;registers is 1;insns size is 1~~~~~~~~

==!
00271c: 0e00                                   |0000: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
<<<<<<<<<<< code 81  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2720; insns off=0x2730;registers is 1;insns size is 1~~~~~~~~

==!
002730: 0e00                                   |0000: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
<<<<<<<<<<< code 82  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2734; insns off=0x2744;registers is 3;insns size is 8~~~~~~~~

==!
002744: 2200 2700                              |0000: new-instance v0,class@0027
002748: 1a01 6000                              |0002: const-string v1, string@0060
00274c: 7020 7900 1000                         |0004: invoke-direct {v0, v1}, method@0079
002752: 1100                                   |0007: return-object v0
BB begin is :  e--7  
start add mir ,first is 0 ; second is 7!
end with jump
start of BB is 0, 
before end of BB is 4 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002744: 2200 2700                              |0000: new-instance v0,class@0027
=::==   002748: 1a01 6000                              |0002: const-string v1, string@0060
=::= -----------------------
BB startOffset is : 0x2744end with jump
start of BB is 7, 
before end of BB is 7 
count insns of BB is 0 
========================
<<<<<<<<<<< code 83  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2754; insns off=0x2764;registers is 3;insns size is 13~~~~~~~~

==!
002764: 1600 0000                              |0000: const-wide/16 v0, #int 0 // #0
002768: 7010 7800 0200                         |0002: invoke-direct {v2}, method@0078
00276e: 5a20 2900                              |0005: iput-wide v0, v2,field@0029
002772: 5a20 2a00                              |0007: iput-wide v0, v2,field@002a
002776: 1200                                   |0009: const/4 v0, #int 0 // #0
002778: 5c20 2800                              |000a: iput-boolean v0, v2,field@0028
00277c: 0e00                                   |000c: return-void
BB begin is :  a--5  
start add mir ,first is 0 ; second is 5!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
end with jump
start of BB is 5, 
before end of BB is c 
count insns of BB is 4 
========================
=::== -----------------------
=::==   00276e: 5a20 2900                              |0005: iput-wide v0, v2,field@0029
=::==   002772: 5a20 2a00                              |0007: iput-wide v0, v2,field@002a
=::==   002776: 1200                                   |0009: const/4 v0, #int 0 // #0
=::==   002778: 5c20 2800                              |000a: iput-boolean v0, v2,field@0028
=::= -----------------------
BB startOffset is : 0x276e<<<<<<<<<<< code 84  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2780; insns off=0x2790;registers is 3;insns size is 8~~~~~~~~

==!
002790: 6e10 6500 0200                         |0000: invoke-virtual {v2}, method@0065
002796: 5320 2a00                              |0003: iget-wide v0, v2,field@002a
00279a: 5a20 2900                              |0005: iput-wide v0, v2,field@0029
00279e: 0e00                                   |0007: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 7 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002796: 5320 2a00                              |0003: iget-wide v0, v2,field@002a
=::==   00279a: 5a20 2900                              |0005: iput-wide v0, v2,field@0029
=::= -----------------------
BB startOffset is : 0x2796<<<<<<<<<<< code 85  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x27a0; insns off=0x27b0;registers is 6;insns size is 21~~~~~~~~

==!
0027b0: 5551 2800                              |0000: iget-boolean v1, v5,field@0028
0027b4: 3801 0d00                              |0002: if-eqz v1, 000f // +000d
0027b8: 2200 2d00                              |0004: new-instance v0,class@002d
0027bc: 7010 8800 0000                         |0006: invoke-direct {v0}, method@0088
0027c2: 6e10 8900 0000                         |0009: invoke-virtual {v0}, method@0089
0027c8: 0b01                                   |000c: move-result-wide v1
0027ca: 5a51 2a00                              |000d: iput-wide v1, v5,field@002a
0027ce: 5351 2a00                              |000f: iget-wide v1, v5,field@002a
0027d2: 5353 2900                              |0011: iget-wide v3, v5,field@0029
0027d6: bc31                                   |0013: sub-long/2addr v1, v3
0027d8: 1001                                   |0014: return-wide v1
BB begin is :  8--4   12--9   18--c   1e--f  
start add mir ,first is 0 ; second is 4!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
end with jump
start of BB is 4, 
before end of BB is 6 
count insns of BB is 1 
========================
end with jump
start of BB is 9, 
before end of BB is 9 
count insns of BB is 0 
========================
end with second!
start of BB is c, 
before end of BB is f 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0027c8: 0b01                                   |000c: move-result-wide v1
=::==   0027ca: 5a51 2a00                              |000d: iput-wide v1, v5,field@002a
=::= -----------------------
BB startOffset is : 0x27c8end with jump
start of BB is f, 
before end of BB is 14 
count insns of BB is 3 
========================
=::== -----------------------
=::==   0027ce: 5351 2a00                              |000f: iget-wide v1, v5,field@002a
=::==   0027d2: 5353 2900                              |0011: iget-wide v3, v5,field@0029
=::==   0027d6: bc31                                   |0013: sub-long/2addr v1, v3
=::= -----------------------
BB startOffset is : 0x27ce<<<<<<<<<<< code 86  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x27dc; insns off=0x27ec;registers is 4;insns size is 23~~~~~~~~

==!
0027ec: 5531 2800                              |0000: iget-boolean v1, v3,field@0028
0027f0: 3901 1400                              |0002: if-nez v1, 0016 // +0014
0027f4: 1211                                   |0004: const/4 v1, #int 1 // #1
0027f6: 5c31 2800                              |0005: iput-boolean v1, v3,field@0028
0027fa: 2200 2d00                              |0007: new-instance v0,class@002d
0027fe: 7010 8800 0000                         |0009: invoke-direct {v0}, method@0088
002804: 6e10 8900 0000                         |000c: invoke-virtual {v0}, method@0089
00280a: 0b01                                   |000f: move-result-wide v1
00280c: 5a31 2900                              |0010: iput-wide v1, v3,field@0029
002810: 5331 2900                              |0012: iget-wide v1, v3,field@0029
002814: 5a31 2a00                              |0014: iput-wide v1, v3,field@002a
002818: 0e00                                   |0016: return-void
BB begin is :  8--4   18--c   1e--f   2c--16  
start add mir ,first is 0 ; second is 4!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
end with jump
start of BB is 4, 
before end of BB is 9 
count insns of BB is 3 
========================
=::== -----------------------
=::==   0027f4: 1211                                   |0004: const/4 v1, #int 1 // #1
=::==   0027f6: 5c31 2800                              |0005: iput-boolean v1, v3,field@0028
=::==   0027fa: 2200 2d00                              |0007: new-instance v0,class@002d
=::= -----------------------
BB startOffset is : 0x27f4end with jump
start of BB is c, 
before end of BB is c 
count insns of BB is 0 
========================
end with jump
start of BB is f, 
before end of BB is 16 
count insns of BB is 4 
========================
=::== -----------------------
=::==   00280a: 0b01                                   |000f: move-result-wide v1
=::==   00280c: 5a31 2900                              |0010: iput-wide v1, v3,field@0029
=::==   002810: 5331 2900                              |0012: iget-wide v1, v3,field@0029
=::==   002814: 5a31 2a00                              |0014: iput-wide v1, v3,field@002a
=::= -----------------------
BB startOffset is : 0x280aend with jump
start of BB is 16, 
before end of BB is 16 
count insns of BB is 0 
========================
<<<<<<<<<<< code 87  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x281c; insns off=0x282c;registers is 4;insns size is 19~~~~~~~~

==!
00282c: 5531 2800                              |0000: iget-boolean v1, v3,field@0028
002830: 3801 1000                              |0002: if-eqz v1, 0012 // +0010
002834: 1201                                   |0004: const/4 v1, #int 0 // #0
002836: 5c31 2800                              |0005: iput-boolean v1, v3,field@0028
00283a: 2200 2d00                              |0007: new-instance v0,class@002d
00283e: 7010 8800 0000                         |0009: invoke-direct {v0}, method@0088
002844: 6e10 8900 0000                         |000c: invoke-virtual {v0}, method@0089
00284a: 0b01                                   |000f: move-result-wide v1
00284c: 5a31 2a00                              |0010: iput-wide v1, v3,field@002a
002850: 0e00                                   |0012: return-void
BB begin is :  8--4   18--c   1e--f   24--12  
start add mir ,first is 0 ; second is 4!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
end with jump
start of BB is 4, 
before end of BB is 9 
count insns of BB is 3 
========================
=::== -----------------------
=::==   002834: 1201                                   |0004: const/4 v1, #int 0 // #0
=::==   002836: 5c31 2800                              |0005: iput-boolean v1, v3,field@0028
=::==   00283a: 2200 2d00                              |0007: new-instance v0,class@002d
=::= -----------------------
BB startOffset is : 0x2834end with jump
start of BB is c, 
before end of BB is c 
count insns of BB is 0 
========================
end with jump
start of BB is f, 
before end of BB is 12 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00284a: 0b01                                   |000f: move-result-wide v1
=::==   00284c: 5a31 2a00                              |0010: iput-wide v1, v3,field@002a
=::= -----------------------
BB startOffset is : 0x284aend with jump
start of BB is 12, 
before end of BB is 12 
count insns of BB is 0 
========================
<<<<<<<<<<< code 88  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2854; insns off=0x2864;registers is 2;insns size is 8~~~~~~~~

==!
002864: 7010 7800 0100                         |0000: invoke-direct {v1}, method@0078
00286a: 1300 3200                              |0003: const/16 v0, #int 50 // #32
00286e: 5910 2e00                              |0005: iput v0, v1,field@002e
002872: 0e00                                   |0007: return-void
BB begin is :  6--3  
start add mir ,first is 0 ; second is 3!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with jump
start of BB is 3, 
before end of BB is 7 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00286a: 1300 3200                              |0003: const/16 v0, #int 50 // #32
=::==   00286e: 5910 2e00                              |0005: iput v0, v1,field@002e
=::= -----------------------
BB startOffset is : 0x286a<<<<<<<<<<< code 89  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2874; insns off=0x2884;registers is 2;insns size is 2~~~~~~~~

==!
002884: 1200                                   |0000: const/4 v0, #int 0 // #0
002886: 0f00                                   |0001: return v0
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 1 
count insns of BB is 1 
========================
<<<<<<<<<<< code 90  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2888; insns off=0x2898;registers is 2;insns size is 3~~~~~~~~

==!
002898: 1300 d30a                              |0000: const/16 v0, #int 2771 // #ad3
00289c: 0f00                                   |0002: return v0
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 2 
count insns of BB is 1 
========================
<<<<<<<<<<< code 91  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x28a0; insns off=0x28b0;registers is 7;insns size is 63~~~~~~~~

==!
0028b0: 1a05 a800                              |0000: const-string v5, string@00a8
0028b4: 2202 2800                              |0002: new-instance v2,class@0028
0028b8: 1a03 6a00                              |0004: const-string v3, string@006a
0028bc: 7020 7b00 3200                         |0006: invoke-direct {v2, v3}, method@007b
0028c2: 1200                                   |0009: const/4 v0, #int 0 // #0
0028c4: 5263 2e00                              |000a: iget v3, v6,field@002e
0028c8: 3430 1100                              |000c: if-lt v0, v3, 001d // +0011
0028cc: 1a03 a800                              |000e: const-string v3, string@00a8
0028d0: 6e20 7c00 5200                         |0010: invoke-virtual {v2, v5}, method@007c
0028d6: 1201                                   |0013: const/4 v1, #int 0 // #0
0028d8: 5263 2e00                              |0014: iget v3, v6,field@002e
0028dc: 3431 1b00                              |0016: if-lt v1, v3, 0031 // +001b
0028e0: 6e10 7d00 0200                         |0018: invoke-virtual {v2}, method@007d
0028e6: 0a03                                   |001b: move-result v3
0028e8: 0f03                                   |001c: return v3
0028ea: 5463 2b00                              |001d: iget-object v3, v6,field@002b
0028ee: 6e20 7c00 3200                         |001f: invoke-virtual {v2, v3}, method@007c
0028f4: 0c03                                   |0022: move-result-object v3
0028f6: 5464 2c00                              |0023: iget-object v4, v6,field@002c
0028fa: 6e20 7c00 4300                         |0025: invoke-virtual {v3, v4}, method@007c
002900: 0c03                                   |0028: move-result-object v3
002902: 5464 2d00                              |0029: iget-object v4, v6,field@002d
002906: 6e20 7c00 4300                         |002b: invoke-virtual {v3, v4}, method@007c
00290c: d800 0001                              |002e: add-int/lit8 v0, v0, #int 1 // #01
002910: 28da                                   |0030: goto 000a // -0026
002912: 6e10 7e00 0200                         |0031: invoke-virtual {v2}, method@007e
002918: 0c03                                   |0034: move-result-object v3
00291a: 1a04 a800                              |0035: const-string v4, string@00a8
00291e: da04 0141                              |0037: mul-int/lit8 v4, v1, #int 65 // #41
002922: 6e30 7a00 5304                         |0039: invoke-virtual {v3, v5, v4}, method@007a
002928: d801 0101                              |003c: add-int/lit8 v1, v1, #int 1 // #01
00292c: 28d6                                   |003e: goto 0014 // -002a
BB begin is :  12--9   14--a   1c--e   26--13   28--14   30--18   36--1b   3a--1d   44--22   50--28   5c--2e   62--31   68--34   78--3c  
start add mir ,first is 0 ; second is 9!
end with jump
start of BB is 0, 
before end of BB is 6 
count insns of BB is 3 
========================
=::== -----------------------
=::==   0028b0: 1a05 a800                              |0000: const-string v5, string@00a8
=::==   0028b4: 2202 2800                              |0002: new-instance v2,class@0028
=::==   0028b8: 1a03 6a00                              |0004: const-string v3, string@006a
=::= -----------------------
BB startOffset is : 0x28b0end with second!
start of BB is 9, 
before end of BB is a 
count insns of BB is 1 
========================
end with jump
start of BB is a, 
before end of BB is c 
count insns of BB is 1 
========================
end with jump
start of BB is e, 
before end of BB is 10 
count insns of BB is 1 
========================
end with second!
start of BB is 13, 
before end of BB is 14 
count insns of BB is 1 
========================
end with jump
start of BB is 14, 
before end of BB is 16 
count insns of BB is 1 
========================
end with jump
start of BB is 18, 
before end of BB is 18 
count insns of BB is 0 
========================
end with jump
start of BB is 1b, 
before end of BB is 1c 
count insns of BB is 1 
========================
end with jump
start of BB is 1d, 
before end of BB is 1f 
count insns of BB is 1 
========================
end with jump
start of BB is 22, 
before end of BB is 25 
count insns of BB is 2 
========================
=::== -----------------------
=::==   0028f4: 0c03                                   |0022: move-result-object v3
=::==   0028f6: 5464 2c00                              |0023: iget-object v4, v6,field@002c
=::= -----------------------
BB startOffset is : 0x28f4end with jump
start of BB is 28, 
before end of BB is 2b 
count insns of BB is 2 
========================
=::== -----------------------
=::==   002900: 0c03                                   |0028: move-result-object v3
=::==   002902: 5464 2d00                              |0029: iget-object v4, v6,field@002d
=::= -----------------------
BB startOffset is : 0x2900end with jump
start of BB is 2e, 
before end of BB is 30 
count insns of BB is 1 
========================
end with jump
start of BB is 31, 
before end of BB is 31 
count insns of BB is 0 
========================
end with jump
start of BB is 34, 
before end of BB is 39 
count insns of BB is 3 
========================
=::== -----------------------
=::==   002918: 0c03                                   |0034: move-result-object v3
=::==   00291a: 1a04 a800                              |0035: const-string v4, string@00a8
=::==   00291e: da04 0141                              |0037: mul-int/lit8 v4, v1, #int 65 // #41
=::= -----------------------
BB startOffset is : 0x2918end with jump
start of BB is 3c, 
before end of BB is 3e 
count insns of BB is 1 
========================
<<<<<<<<<<< code 92  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2930; insns off=0x2940;registers is 3;insns size is 18~~~~~~~~

==!
002940: 3802 0400                              |0000: if-eqz v2, 0004 // +0004
002944: 5912 2e00                              |0002: iput v2, v1,field@002e
002948: 1a00 d100                              |0004: const-string v0, string@00d1
00294c: 5b10 2b00                              |0006: iput-object v0, v1,field@002b
002950: 1a00 f700                              |0008: const-string v0, string@00f7
002954: 5b10 2c00                              |000a: iput-object v0, v1,field@002c
002958: 1a00 f300                              |000c: const-string v0, string@00f3
00295c: 5b10 2d00                              |000e: iput-object v0, v1,field@002d
002960: 1210                                   |0010: const/4 v0, #int 1 // #1
002962: 0f00                                   |0011: return v0
BB begin is :  4--2   8--4  
start add mir ,first is 0 ; second is 2!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
end with second!
start of BB is 2, 
before end of BB is 4 
count insns of BB is 1 
========================
end with jump
start of BB is 4, 
before end of BB is 11 
count insns of BB is 7 
========================
=::== -----------------------
=::==   002948: 1a00 d100                              |0004: const-string v0, string@00d1
=::==   00294c: 5b10 2b00                              |0006: iput-object v0, v1,field@002b
=::==   002950: 1a00 f700                              |0008: const-string v0, string@00f7
=::==   002954: 5b10 2c00                              |000a: iput-object v0, v1,field@002c
=::==   002958: 1a00 f300                              |000c: const-string v0, string@00f3
=::==   00295c: 5b10 2d00                              |000e: iput-object v0, v1,field@002d
=::==   002960: 1210                                   |0010: const/4 v0, #int 1 // #1
=::= -----------------------
BB startOffset is : 0x2948<<<<<<<<<<< code 93  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2964; insns off=0x2974;registers is 1;insns size is 1~~~~~~~~

==!
002974: 0e00                                   |0000: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
<<<<<<<<<<< code 94  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x2978; insns off=0x2988;registers is 1;insns size is 1~~~~~~~~

==!
002988: 0e00                                   |0000: return-void
BB begin is : 
start add mir ,first is 0 ; second is 7f!
end with jump
start of BB is 0, 
before end of BB is 0 
count insns of BB is 0 
========================
<<<<<<<<<<< code 95  processing BB >>>>>>>>>>>
=::= 
=::= ~~~~~~codeoffset=0x298c; insns off=0x299c;registers is 3;insns size is 8~~~~~~~~

==!
00299c: 2200 2700                              |0000: new-instance v0,class@0027
0029a0: 1a01 6600                              |0002: const-string v1, string@0066
0029a4: 7020 7900 1000                         |0004: invoke-direct {v0, v1}, method@0079
0029aa: 1100                                   |0007: return-object v0
BB begin is :  e--7  
start add mir ,first is 0 ; second is 7!
end with jump
start of BB is 0, 
before end of BB is 4 
count insns of BB is 2 
========================
=::== -----------------------
=::==   00299c: 2200 2700                              |0000: new-instance v0,class@0027
=::==   0029a0: 1a01 6600                              |0002: const-string v1, string@0066
=::= -----------------------
BB startOffset is : 0x299cend with jump
start of BB is 7, 
before end of BB is 7 
count insns of BB is 0 
========================
[mirs of bb] =====startoffset is f88  ======
[mirs of bb] | const/16 v0, #int 1000 // #3e8
[mirs of bb] | sput v0,field@0004
[mirs of bb] =====startoffset is faa  ======
[mirs of bb] | const/16 v0, #int 1000 // #3e8
[mirs of bb] | iput v0, v1,field@0002
[mirs of bb] | iput-object v2, v1,field@0003
[mirs of bb] =====startoffset is fbc  ======
[mirs of bb] | move-result v0
[mirs of bb] | iput v0, v1,field@0002
[mirs of bb] =====startoffset is fee  ======
[mirs of bb] | mul-int/lit8 v2, v1, #int 100 // #64
[mirs of bb] | mul-int/lit8 v3, v0, #int 3 // #03
[mirs of bb] | div-int/2addr v2, v3
[mirs of bb] | iput v2, v4,field@0002
[mirs of bb] =====startoffset is ffe  ======
[mirs of bb] | const/4 v2, #int 0 // #0
[mirs of bb] | iput v2, v4,field@0002
[mirs of bb] =====startoffset is 1018  ======
[mirs of bb] | const/4 v3, #int 0 // #0
[mirs of bb] | const/4 v0, #int 0 // #0
[mirs of bb] | new-instance v1,class@001b
[mirs of bb] =====startoffset is 1046  ======
[mirs of bb] | move-result-wide v2
[mirs of bb] | sget v4,field@0004
[mirs of bb] | int-to-long v4, v4
[mirs of bb] | cmp-long v2, v2, v4
[mirs of bb] =====startoffset is 106a  ======
[mirs of bb] | add-int/lit8 v0, v0, #int 1 // #01
[mirs of bb] | iget-object v2, v6,field@0003
[mirs of bb] =====startoffset is 1078  ======
[mirs of bb] | move-result v2
[mirs of bb] | iput v2, v6,field@0000
[mirs of bb] =====startoffset is 10c8  ======
[mirs of bb] | const/4 v4, #int 0 // #0
[mirs of bb] | const/4 v0, #int 0 // #0
[mirs of bb] | iget-object v3, v5,field@0003
[mirs of bb] =====startoffset is 10f0  ======
[mirs of bb] | mul-int/lit8 v1, v6, #int 3 // #03
[mirs of bb] | const/4 v0, #int 0 // #0
[mirs of bb] =====startoffset is 1116  ======
[mirs of bb] | add-int/lit8 v1, v1, #int -1 // #ff
[mirs of bb] | add-int/lit8 v0, v0, #int 1 // #01
[mirs of bb] | iget-object v3, v5,field@0003
[mirs of bb] =====startoffset is 1128  ======
[mirs of bb] | move-result v3
[mirs of bb] | iput v3, v5,field@0000
[mirs of bb] =====startoffset is 1180  ======
[mirs of bb] | iget v2, v4,field@0002
[mirs of bb] | mul-int/lit8 v3, v0, #int 3 // #03
[mirs of bb] | mul-int/2addr v2, v3
[mirs of bb] | div-int v1, v2, v1
[mirs of bb] =====startoffset is 118e  ======
[mirs of bb] | iput v1, v4,field@0001
[mirs of bb] | move v2, v1
[mirs of bb] =====startoffset is 121a  ======
[mirs of bb] | new-instance v3,class@0029
[mirs of bb] | const-string v4, string@0002
[mirs of bb] =====startoffset is 1246  ======
[mirs of bb] | new-instance v3,class@0029
[mirs of bb] | const-string v4, string@0001
[mirs of bb] =====startoffset is 1262  ======
[mirs of bb] | move-result-object v3
[mirs of bb] | const-string v4, string@0003
[mirs of bb] =====startoffset is 127e  ======
[mirs of bb] | add-int/lit8 v1, v1, #int 1 // #01
[mirs of bb] | const/4 v3, #int 5 // #5
[mirs of bb] =====startoffset is 1288  ======
[mirs of bb] | new-instance v3,class@0029
[mirs of bb] | const-string v4, string@0000
[mirs of bb] =====startoffset is 12d6  ======
[mirs of bb] | sput-object v0,field@0011
[mirs of bb] | new-instance v0,class@002e
[mirs of bb] =====startoffset is 1314  ======
[mirs of bb] | const/4 v8, #int 0 // #0
[mirs of bb] | const-wide/16 v0, #int 0 // #0
[mirs of bb] | const-wide/16 v2, #int 0 // #0
[mirs of bb] | sget-boolean v6,field@000b
[mirs of bb] =====startoffset is 1342  ======
[mirs of bb] | move-result-object v5
[mirs of bb] | check-cast v5,class@0024
[mirs of bb] =====startoffset is 1354  ======
[mirs of bb] | const-wide/high16 v6, #long 4607182418800017408 // #3ff0
[mirs of bb] | add-double/2addr v2, v6
[mirs of bb] =====startoffset is 136a  ======
[mirs of bb] | move-result-wide v6
[mirs of bb] | add-double/2addr v0, v6
[mirs of bb] | add-int/lit8 v4, v4, #int 1 // #01
[mirs of bb] | const/4 v6, #int 5 // #5
[mirs of bb] =====startoffset is 1378  ======
[mirs of bb] | const-wide/high16 v6, #long 4602678819172646912 // #3fe0
[mirs of bb] | cmpl-double v6, v2, v6
[mirs of bb] =====startoffset is 1384  ======
[mirs of bb] | div-double/2addr v0, v2
[mirs of bb] | new-instance v6,class@0023
[mirs of bb] =====startoffset is 13c0  ======
[mirs of bb] | const/4 v3, #int 0 // #0
[mirs of bb] | sput-boolean v3,field@000e
[mirs of bb] | sput-boolean v3,field@000b
[mirs of bb] =====startoffset is 13d2  ======
[mirs of bb] | sget-object v0,field@0011
[mirs of bb] | new-instance v1,class@000b
[mirs of bb] | new-instance v2,class@001a
[mirs of bb] =====startoffset is 13f0  ======
[mirs of bb] | sget-object v0,field@0010
[mirs of bb] | new-instance v1,class@0024
[mirs of bb] =====startoffset is 1406  ======
[mirs of bb] | sget-object v0,field@0011
[mirs of bb] | new-instance v1,class@000b
[mirs of bb] | new-instance v2,class@0013
[mirs of bb] =====startoffset is 1424  ======
[mirs of bb] | sget-object v0,field@0010
[mirs of bb] | new-instance v1,class@0024
[mirs of bb] =====startoffset is 143a  ======
[mirs of bb] | sget-object v0,field@0011
[mirs of bb] | new-instance v1,class@000b
[mirs of bb] | new-instance v2,class@0012
[mirs of bb] =====startoffset is 1458  ======
[mirs of bb] | sget-object v0,field@0010
[mirs of bb] | new-instance v1,class@0024
[mirs of bb] =====startoffset is 146e  ======
[mirs of bb] | sget-object v0,field@0011
[mirs of bb] | new-instance v1,class@000b
[mirs of bb] | new-instance v2,class@001c
[mirs of bb] =====startoffset is 148c  ======
[mirs of bb] | sget-object v0,field@0010
[mirs of bb] | new-instance v1,class@0024
[mirs of bb] =====startoffset is 14a2  ======
[mirs of bb] | sget-object v0,field@0011
[mirs of bb] | new-instance v1,class@000b
[mirs of bb] | new-instance v2,class@0011
[mirs of bb] =====startoffset is 14c0  ======
[mirs of bb] | sget-object v0,field@0010
[mirs of bb] | new-instance v1,class@0024
[mirs of bb] =====startoffset is 14d8  ======
[mirs of bb] | sget-object v0,field@0011
[mirs of bb] | new-instance v1,class@000b
[mirs of bb] | new-instance v2,class@0014
[mirs of bb] =====startoffset is 14f6  ======
[mirs of bb] | sget-object v0,field@0010
[mirs of bb] | new-instance v1,class@0024
[mirs of bb] =====startoffset is 1540  ======
[mirs of bb] | const/4 v0, #int 0 // #0
[mirs of bb] | sput-boolean v0,field@000e
[mirs of bb] | sget-object v0,field@0011
[mirs of bb] =====startoffset is 15c6  ======
[mirs of bb] | move-result-object v0
[mirs of bb] | check-cast v0,class@000b
[mirs of bb] | iget v1, v0,field@0000
[mirs of bb] =====startoffset is 1604  ======
[mirs of bb] | move-result-object v0
[mirs of bb] | check-cast v0,class@000b
[mirs of bb] =====startoffset is 1642  ======
[mirs of bb] | move-result-object v0
[mirs of bb] | check-cast v0,class@0024
[mirs of bb] =====startoffset is 1682  ======
[mirs of bb] | move-result-object v0
[mirs of bb] | check-cast v0,class@000b
[mirs of bb] =====startoffset is 16c2  ======
[mirs of bb] | move-result-object v0
[mirs of bb] | check-cast v0,class@000b
[mirs of bb] =====startoffset is 16e4  ======
[mirs of bb] | const/4 v0, #int 1 // #1
[mirs of bb] | sput-boolean v0,field@000d
[mirs of bb] =====startoffset is 16fc  ======
[mirs of bb] | const/4 v1, #int 1 // #1
[mirs of bb] | sget-object v0,field@0011
[mirs of bb] =====startoffset is 1772  ======
[mirs of bb] | sget-object v2,field@000f
[mirs of bb] | sget-object v3,field@0011
[mirs of bb] =====startoffset is 1790  ======
[mirs of bb] | const/4 v2, #int 1 // #1
[mirs of bb] | sput-boolean v2,field@000b
[mirs of bb] =====startoffset is 17a6  ======
[mirs of bb] | sget-object v2,field@000f
[mirs of bb] | sget-object v3,field@0011
[mirs of bb] =====startoffset is 17d2  ======
[mirs of bb] | move-result-object v0
[mirs of bb] | check-cast v0,class@000b
[mirs of bb] | sget-boolean v2,field@000d
[mirs of bb] =====startoffset is 17e6  ======
[mirs of bb] | sget-object v2,field@0010
[mirs of bb] | new-instance v3,class@0024
[mirs of bb] =====startoffset is 1866  ======
[mirs of bb] | move-result-wide v0
[mirs of bb] | check-cast v5,class@000e
[mirs of bb] =====startoffset is 1872  ======
[mirs of bb] | move-result-wide v2
[mirs of bb] | cmp-long v0, v0, v2
[mirs of bb] =====startoffset is 18b2  ======
[mirs of bb] | move-result-wide v0
[mirs of bb] | long-to-int v2, v0
[mirs of bb] | const/16 v3, #int 32 // #20
[mirs of bb] | shr-long v3, v0, v3
[mirs of bb] | long-to-int v3, v3
[mirs of bb] | xor-int/2addr v2, v3
[mirs of bb] =====startoffset is 190e  ======
[mirs of bb] | sget-object v3,field@0030
[mirs of bb] | const-string v4, string@000f
[mirs of bb] =====startoffset is 191e  ======
[mirs of bb] | const v3, #float 0.000000 // #000f4240
[mirs of bb] =====startoffset is 1928  ======
[mirs of bb] | sget-object v3,field@0030
[mirs of bb] | new-instance v4,class@0029
[mirs of bb] | const-string v5, string@0007
[mirs of bb] =====startoffset is 195a  ======
[mirs of bb] | const v3, #float 0.000000 // #00989680
[mirs of bb] =====startoffset is 1964  ======
[mirs of bb] | sget-object v3,field@0030
[mirs of bb] | new-instance v4,class@0029
[mirs of bb] | const-string v5, string@0006
[mirs of bb] =====startoffset is 19cc  ======
[mirs of bb] | sget-object v7,field@0030
[mirs of bb] | const-string v8, string@006b
[mirs of bb] =====startoffset is 19e0  ======
[mirs of bb] | move-result-wide v5
[mirs of bb] | sget-object v7,field@0030
[mirs of bb] | new-instance v8,class@0029
[mirs of bb] | const-string v9, string@00e6
[mirs of bb] =====startoffset is 1a0c  ======
[mirs of bb] | const v7, #float 0.000000 // #000f4240
[mirs of bb] =====startoffset is 1a1c  ======
[mirs of bb] | move-result-wide v2
[mirs of bb] | sget-object v7,field@0030
[mirs of bb] | new-instance v8,class@0029
[mirs of bb] | const-string v9, string@0095
[mirs of bb] =====startoffset is 1a46  ======
[mirs of bb] | sub-long v0, v2, v5
[mirs of bb] | sget-object v7,field@0030
[mirs of bb] | new-instance v8,class@0029
[mirs of bb] | const-string v9, string@0017
[mirs of bb] =====startoffset is 1a72  ======
[mirs of bb] | const-wide/16 v7, #int 0 // #0
[mirs of bb] | cmp-long v7, v0, v7
[mirs of bb] =====startoffset is 1a7e  ======
[mirs of bb] | sget-object v7,field@0030
[mirs of bb] | const-string v8, string@0016
[mirs of bb] =====startoffset is 1a94  ======
[mirs of bb] | sget-object v7,field@0030
[mirs of bb] | const-string v8, string@0015
[mirs of bb] =====startoffset is 1aba  ======
[mirs of bb] | const/16 v0, #int 20 // #14
[mirs of bb] | iput v0, v1,field@0014
[mirs of bb] | const/16 v0, #int 185 // #b9
[mirs of bb] | iput v0, v1,field@0017
[mirs of bb] =====startoffset is 1b0a  ======
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget v0, v0,field@0017
[mirs of bb] | move v11, v0
[mirs of bb] =====startoffset is 1b1a  ======
[mirs of bb] | int-to-float v11, v8
[mirs of bb] | float-to-double v11, v11
[mirs of bb] | const-wide v13, #double 3.141593 // #400921fb54442d18
[mirs of bb] | mul-double/2addr v11, v13
[mirs of bb] | const-wide v13, #double 180.000000 // #4066800000000000
[mirs of bb] | div-double v1, v11, v13
[mirs of bb] =====startoffset is 1b46  ======
[mirs of bb] | move-result-wide v5
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0018
[mirs of bb] | move-object v11, v0
[mirs of bb] | const/4 v12, #int 0 // #0
[mirs of bb] | aget-object v11, v11, v12
[mirs of bb] | const/4 v12, #int 0 // #0
[mirs of bb] | aput-wide v5, v11, v12
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0018
[mirs of bb] | move-object v11, v0
[mirs of bb] | const/4 v12, #int 1 // #1
[mirs of bb] | aget-object v11, v11, v12
[mirs of bb] | const/4 v12, #int 0 // #0
[mirs of bb] | aput-wide v3, v11, v12
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0018
[mirs of bb] | move-object v11, v0
[mirs of bb] | const/4 v12, #int 2 // #2
[mirs of bb] | aget-object v11, v11, v12
[mirs of bb] | const/4 v12, #int 0 // #0
[mirs of bb] | const-wide/16 v13, #int 0 // #0
[mirs of bb] | aput-wide v13, v11, v12
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0018
[mirs of bb] | move-object v11, v0
[mirs of bb] | const/4 v12, #int 0 // #0
[mirs of bb] | aget-object v11, v11, v12
[mirs of bb] | const/4 v12, #int 1 // #1
[mirs of bb] | neg-double v13, v3
[mirs of bb] | aput-wide v13, v11, v12
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0018
[mirs of bb] | move-object v11, v0
[mirs of bb] | const/4 v12, #int 1 // #1
[mirs of bb] | aget-object v11, v11, v12
[mirs of bb] | const/4 v12, #int 1 // #1
[mirs of bb] | aput-wide v5, v11, v12
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0018
[mirs of bb] | move-object v11, v0
[mirs of bb] | const/4 v12, #int 2 // #2
[mirs of bb] | aget-object v11, v11, v12
[mirs of bb] | const/4 v12, #int 1 // #1
[mirs of bb] | const-wide/16 v13, #int 0 // #0
[mirs of bb] | aput-wide v13, v11, v12
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0018
[mirs of bb] | move-object v11, v0
[mirs of bb] | const/4 v12, #int 0 // #0
[mirs of bb] | aget-object v11, v11, v12
[mirs of bb] | const/4 v12, #int 2 // #2
[mirs of bb] | const-wide/16 v13, #int 0 // #0
[mirs of bb] | aput-wide v13, v11, v12
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0018
[mirs of bb] | move-object v11, v0
[mirs of bb] | const/4 v12, #int 1 // #1
[mirs of bb] | aget-object v11, v11, v12
[mirs of bb] | const/4 v12, #int 2 // #2
[mirs of bb] | const-wide/16 v13, #int 0 // #0
[mirs of bb] | aput-wide v13, v11, v12
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0018
[mirs of bb] | move-object v11, v0
[mirs of bb] | const/4 v12, #int 2 // #2
[mirs of bb] | aget-object v11, v11, v12
[mirs of bb] | const/4 v12, #int 2 // #2
[mirs of bb] | const-wide/high16 v13, #long 4607182418800017408 // #3ff0
[mirs of bb] | aput-wide v13, v11, v12
[mirs of bb] | const/4 v7, #int 0 // #0
[mirs of bb] =====startoffset is 1c26  ======
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0016
[mirs of bb] | move-object v11, v0
[mirs of bb] | const/4 v12, #int 0 // #0
[mirs of bb] | aget-object v11, v11, v12
[mirs of bb] | const-wide/16 v12, #int 0 // #0
[mirs of bb] | aput-wide v12, v11, v7
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0016
[mirs of bb] | move-object v11, v0
[mirs of bb] | const/4 v12, #int 1 // #1
[mirs of bb] | aget-object v11, v11, v12
[mirs of bb] | const-wide/16 v12, #int 0 // #0
[mirs of bb] | aput-wide v12, v11, v7
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0016
[mirs of bb] | move-object v11, v0
[mirs of bb] | const/4 v12, #int 2 // #2
[mirs of bb] | aget-object v11, v11, v12
[mirs of bb] | const-wide/16 v12, #int 0 // #0
[mirs of bb] | aput-wide v12, v11, v7
[mirs of bb] | const/4 v10, #int 0 // #0
[mirs of bb] =====startoffset is 1c72  ======
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0016
[mirs of bb] | move-object v11, v0
[mirs of bb] | aget-object v11, v11, v10
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0016
[mirs of bb] | move-object v12, v0
[mirs of bb] | aget-object v12, v12, v10
[mirs of bb] | aget-wide v12, v12, v7
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0018
[mirs of bb] | move-object v14, v0
[mirs of bb] | aget-object v14, v14, v9
[mirs of bb] | aget-wide v14, v14, v10
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget-object v0, v0,field@0016
[mirs of bb] | move-object/from16 v16, v0
[mirs of bb] | aget-object v16, v16, v10
[mirs of bb] | aget-wide v16, v16, v7
[mirs of bb] | mul-double v14, v14, v16
[mirs of bb] | add-double/2addr v12, v14
[mirs of bb] | aput-wide v12, v11, v7
[mirs of bb] | add-int/lit8 v9, v9, #int 1 // #01
[mirs of bb] | const/4 v11, #int 3 // #3
[mirs of bb] =====startoffset is 1ccc  ======
[mirs of bb] | add-int/lit8 v10, v10, #int 1 // #01
[mirs of bb] | const/4 v11, #int 3 // #3
[mirs of bb] =====startoffset is 1cd6  ======
[mirs of bb] | add-int/lit8 v7, v7, #int 1 // #01
[mirs of bb] | const/16 v11, #int 20 // #14
[mirs of bb] =====startoffset is 1cfc  ======
[mirs of bb] | const/4 v7, #int 1 // #1
[mirs of bb] | const/16 v6, #int 20 // #14
[mirs of bb] | const/4 v3, #int 3 // #3
[mirs of bb] =====startoffset is 1d0c  ======
[mirs of bb] | filled-new-array {v3, v3}, class@0031
[mirs of bb] | move-result-object v1
[mirs of bb] | sget-object v2,field@002f
[mirs of bb] =====startoffset is 1d1e  ======
[mirs of bb] | move-result-object v1
[mirs of bb] | check-cast v1,class@0033
[mirs of bb] | iput-object v1, v8,field@0018
[mirs of bb] | filled-new-array {v3, v6}, class@0031
[mirs of bb] | move-result-object v1
[mirs of bb] | sget-object v2,field@002f
[mirs of bb] =====startoffset is 1d3a  ======
[mirs of bb] | move-result-object v1
[mirs of bb] | check-cast v1,class@0033
[mirs of bb] | iput-object v1, v8,field@0015
[mirs of bb] | filled-new-array {v3, v6}, class@0031
[mirs of bb] | move-result-object v1
[mirs of bb] | sget-object v2,field@002f
[mirs of bb] =====startoffset is 1d56  ======
[mirs of bb] | move-result-object v1
[mirs of bb] | check-cast v1,class@0033
[mirs of bb] | iput-object v1, v8,field@0016
[mirs of bb] | const/4 v0, #int 0 // #0
[mirs of bb] =====startoffset is 1d62  ======
[mirs of bb] | iget-object v1, v8,field@0015
[mirs of bb] | const/4 v2, #int 0 // #0
[mirs of bb] | aget-object v1, v1, v2
[mirs of bb] | int-to-double v2, v0
[mirs of bb] | aput-wide v2, v1, v0
[mirs of bb] | iget-object v1, v8,field@0015
[mirs of bb] | aget-object v1, v1, v7
[mirs of bb] | neg-int v2, v0
[mirs of bb] | int-to-double v2, v2
[mirs of bb] | aput-wide v2, v1, v0
[mirs of bb] | iget-object v1, v8,field@0015
[mirs of bb] | const/4 v2, #int 2 // #2
[mirs of bb] | aget-object v1, v1, v2
[mirs of bb] | int-to-double v2, v0
[mirs of bb] | const-wide v4, #double 3.141593 // #400921fb54442d18
[mirs of bb] | mul-double/2addr v2, v4
[mirs of bb] | aput-wide v2, v1, v0
[mirs of bb] | add-int/lit8 v0, v0, #int 1 // #01
[mirs of bb] =====startoffset is 1de0  ======
[mirs of bb] | new-instance v0,class@0027
[mirs of bb] | const-string v1, string@001c
[mirs of bb] =====startoffset is 1e06  ======
[mirs of bb] | const/16 v0, #int 1200 // #4b0
[mirs of bb] | iput v0, v1,field@001a
[mirs of bb] =====startoffset is 1e4c  ======
[mirs of bb] | const/4 v12, #int 1 // #1
[mirs of bb] | const/4 v13, #int 1 // #1
[mirs of bb] | const/4 v14, #int 1 // #1
[mirs of bb] | const/4 v4, #int 1 // #1
[mirs of bb] | const/4 v5, #int 1 // #1
[mirs of bb] | const/4 v6, #int 1 // #1
[mirs of bb] | const/4 v11, #int 1 // #1
[mirs of bb] | const/4 v2, #int 1 // #1
[mirs of bb] | const/4 v3, #int 1 // #1
[mirs of bb] | const/4 v7, #int 1 // #1
[mirs of bb] | const/4 v8, #int 1 // #1
[mirs of bb] | const/4 v9, #int 1 // #1
[mirs of bb] | const/4 v10, #int 1 // #1
[mirs of bb] | const/4 v12, #int 1 // #1
[mirs of bb] | const/4 v13, #int 1 // #1
[mirs of bb] | const/4 v14, #int 1 // #1
[mirs of bb] | const/4 v4, #int 1 // #1
[mirs of bb] | const/4 v5, #int 1 // #1
[mirs of bb] | const/4 v6, #int 1 // #1
[mirs of bb] | const/4 v15, #int 0 // #0
[mirs of bb] =====startoffset is 1e74  ======
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget v0, v0,field@001a
[mirs of bb] | move/from16 v17, v0
[mirs of bb] | move v0, v15
[mirs of bb] | move/from16 v1, v17
[mirs of bb] =====startoffset is 1e8a  ======
[mirs of bb] | const/4 v2, #int 1 // #1
[mirs of bb] | const/4 v3, #int 0 // #0
[mirs of bb] | const/4 v7, #int 1 // #1
[mirs of bb] | const/4 v8, #int 0 // #0
[mirs of bb] | const/4 v9, #int 1 // #1
[mirs of bb] | const/4 v10, #int 0 // #0
[mirs of bb] | const/16 v16, #int 0 // #0
[mirs of bb] =====startoffset is 1e9a  ======
[mirs of bb] | move-object/from16 v0, v18
[mirs of bb] | iget v0, v0,field@001a
[mirs of bb] | move/from16 v17, v0
[mirs of bb] | move/from16 v0, v16
[mirs of bb] | move/from16 v1, v17
[mirs of bb] =====startoffset is 1edc  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v12, v17
[mirs of bb] =====startoffset is 1ee8  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v13, v17
[mirs of bb] =====startoffset is 1ef4  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v14, v17
[mirs of bb] =====startoffset is 1f00  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v4, v17
[mirs of bb] =====startoffset is 1f0c  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v5, v17
[mirs of bb] =====startoffset is 1f18  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v6, v17
[mirs of bb] =====startoffset is 1f24  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v2, v17
[mirs of bb] =====startoffset is 1f30  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v3, v17
[mirs of bb] =====startoffset is 1f3c  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v7, v17
[mirs of bb] =====startoffset is 1f48  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v8, v17
[mirs of bb] =====startoffset is 1f54  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v9, v17
[mirs of bb] =====startoffset is 1f60  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v10, v17
[mirs of bb] =====startoffset is 1f6c  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v2, v17
[mirs of bb] =====startoffset is 1f78  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v3, v17
[mirs of bb] =====startoffset is 1f84  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v7, v17
[mirs of bb] =====startoffset is 1f90  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v8, v17
[mirs of bb] =====startoffset is 1f9c  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v9, v17
[mirs of bb] =====startoffset is 1fa8  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v10, v17
[mirs of bb] =====startoffset is 1fb8  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v12, v17
[mirs of bb] =====startoffset is 1fc2  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v13, v17
[mirs of bb] =====startoffset is 1fcc  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v14, v17
[mirs of bb] =====startoffset is 1fd6  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v4, v17
[mirs of bb] =====startoffset is 1fe0  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v5, v17
[mirs of bb] =====startoffset is 1fea  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v6, v17
[mirs of bb] =====startoffset is 1ff4  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v2, v17
[mirs of bb] =====startoffset is 1ffe  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v3, v17
[mirs of bb] =====startoffset is 2008  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v7, v17
[mirs of bb] =====startoffset is 2012  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v8, v17
[mirs of bb] =====startoffset is 201c  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v9, v17
[mirs of bb] =====startoffset is 2026  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v10, v17
[mirs of bb] =====startoffset is 2030  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v2, v17
[mirs of bb] =====startoffset is 203a  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v3, v17
[mirs of bb] =====startoffset is 2044  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v7, v17
[mirs of bb] =====startoffset is 204e  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v8, v17
[mirs of bb] =====startoffset is 2058  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v9, v17
[mirs of bb] =====startoffset is 2062  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v10, v17
[mirs of bb] =====startoffset is 208c  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v2, v17
[mirs of bb] =====startoffset is 2098  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v3, v17
[mirs of bb] =====startoffset is 20a4  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v7, v17
[mirs of bb] =====startoffset is 20b0  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v8, v17
[mirs of bb] =====startoffset is 20bc  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v9, v17
[mirs of bb] =====startoffset is 20c8  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v10, v17
[mirs of bb] =====startoffset is 20d4  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v12, v17
[mirs of bb] =====startoffset is 20e0  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v13, v17
[mirs of bb] =====startoffset is 20ec  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v14, v17
[mirs of bb] =====startoffset is 20f8  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v4, v17
[mirs of bb] =====startoffset is 2104  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v5, v17
[mirs of bb] =====startoffset is 2110  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v6, v17
[mirs of bb] =====startoffset is 211c  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v12, v17
[mirs of bb] =====startoffset is 2128  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v13, v17
[mirs of bb] =====startoffset is 2134  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v14, v17
[mirs of bb] =====startoffset is 2140  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v4, v17
[mirs of bb] =====startoffset is 214c  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v5, v17
[mirs of bb] =====startoffset is 2158  ======
[mirs of bb] | const/16 v17, #int 0 // #0
[mirs of bb] | move/from16 v6, v17
[mirs of bb] =====startoffset is 2168  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v2, v17
[mirs of bb] =====startoffset is 2172  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v3, v17
[mirs of bb] =====startoffset is 217c  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v7, v17
[mirs of bb] =====startoffset is 2186  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v8, v17
[mirs of bb] =====startoffset is 2190  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v9, v17
[mirs of bb] =====startoffset is 219a  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v10, v17
[mirs of bb] =====startoffset is 21a4  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v12, v17
[mirs of bb] =====startoffset is 21ae  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v13, v17
[mirs of bb] =====startoffset is 21b8  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v14, v17
[mirs of bb] =====startoffset is 21c2  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v4, v17
[mirs of bb] =====startoffset is 21cc  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v5, v17
[mirs of bb] =====startoffset is 21d6  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v6, v17
[mirs of bb] =====startoffset is 21e0  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v12, v17
[mirs of bb] =====startoffset is 21ea  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v13, v17
[mirs of bb] =====startoffset is 21f4  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v14, v17
[mirs of bb] =====startoffset is 21fe  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v4, v17
[mirs of bb] =====startoffset is 2208  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v5, v17
[mirs of bb] =====startoffset is 2212  ======
[mirs of bb] | const/16 v17, #int 1 // #1
[mirs of bb] | move/from16 v6, v17
[mirs of bb] =====startoffset is 2278  ======
[mirs of bb] | new-instance v0,class@0027
[mirs of bb] | const-string v1, string@0054
[mirs of bb] =====startoffset is 229e  ======
[mirs of bb] | const/16 v0, #int 12 // #c
[mirs of bb] | iput v0, v1,field@001c
[mirs of bb] | const/16 v0, #int 64 // #40
[mirs of bb] | iput v0, v1,field@001b
[mirs of bb] =====startoffset is 22ec  ======
[mirs of bb] | const/4 v11, #int 0 // #0
[mirs of bb] | const/4 v10, #int 1 // #1
[mirs of bb] | iget-object v7, v12,field@001d
[mirs of bb] | aput v10, v7, v11
[mirs of bb] | const/4 v0, #int 1 // #1
[mirs of bb] =====startoffset is 2302  ======
[mirs of bb] | const/4 v3, #int 0 // #0
[mirs of bb] | const/4 v5, #int 0 // #0
[mirs of bb] | const/4 v2, #int 0 // #0
[mirs of bb] =====startoffset is 2310  ======
[mirs of bb] | iput v3, v12,field@001e
[mirs of bb] | iput v5, v12,field@001f
[mirs of bb] | iget-object v7, v12,field@001d
[mirs of bb] | aget v7, v7, v11
[mirs of bb] =====startoffset is 2322  ======
[mirs of bb] | iget-object v7, v12,field@001d
[mirs of bb] | iget-object v8, v12,field@001d
[mirs of bb] | sub-int v9, v0, v10
[mirs of bb] | aget v8, v8, v9
[mirs of bb] | add-int/2addr v8, v0
[mirs of bb] | aput v8, v7, v0
[mirs of bb] | add-int/lit8 v0, v0, #int 1 // #01
[mirs of bb] =====startoffset is 234e  ======
[mirs of bb] | iget v7, v12,field@001b
[mirs of bb] | iget v8, v12,field@001c
[mirs of bb] | add-int v6, v7, v8
[mirs of bb] | add-int/2addr v3, v6
[mirs of bb] | add-int/lit8 v5, v5, #int 2 // #02
[mirs of bb] | iget-object v7, v12,field@001d
[mirs of bb] | sub-int v8, v4, v10
[mirs of bb] | aget v7, v7, v8
[mirs of bb] | iget-object v8, v12,field@001d
[mirs of bb] | aget v8, v8, v4
[mirs of bb] =====startoffset is 2378  ======
[mirs of bb] | iget-object v7, v12,field@001d
[mirs of bb] | sub-int v8, v4, v10
[mirs of bb] | aget v1, v7, v8
[mirs of bb] | iget-object v7, v12,field@001d
[mirs of bb] | sub-int v8, v4, v10
[mirs of bb] | iget-object v9, v12,field@001d
[mirs of bb] | aget v9, v9, v4
[mirs of bb] | aput v9, v7, v8
[mirs of bb] | iget-object v7, v12,field@001d
[mirs of bb] | aput v1, v7, v4
[mirs of bb] =====startoffset is 23c0  ======
[mirs of bb] | iget v0, v1,field@001b
[mirs of bb] | new-array v0, v0, class@0031
[mirs of bb] | iput-object v0, v1,field@001d
[mirs of bb] | const/4 v0, #int 1 // #1
[mirs of bb] =====startoffset is 2408  ======
[mirs of bb] | new-instance v0,class@0027
[mirs of bb] | const-string v1, string@0057
[mirs of bb] =====startoffset is 242e  ======
[mirs of bb] | const/16 v0, #int 100 // #64
[mirs of bb] | iput v0, v1,field@0021
[mirs of bb] =====startoffset is 2450  ======
[mirs of bb] | const/4 v0, #int 1 // #1
[mirs of bb] | sub-int v0, v2, v0
[mirs of bb] =====startoffset is 24fc  ======
[mirs of bb] | const/4 v3, #int 1 // #1
[mirs of bb] | move v0, v5
[mirs of bb] | iget v2, v4,field@0020
[mirs of bb] | add-int/lit8 v2, v2, #int 1 // #01
[mirs of bb] | iput v2, v4,field@0020
[mirs of bb] =====startoffset is 2538  ======
[mirs of bb] | move-result v2
[mirs of bb] | add-int/lit8 v2, v2, #int 1 // #01
[mirs of bb] | add-int/2addr v0, v2
[mirs of bb] =====startoffset is 257c  ======
[mirs of bb] | new-instance v0,class@0027
[mirs of bb] | const-string v1, string@005a
[mirs of bb] =====startoffset is 261a  ======
[mirs of bb] | const/16 v0, #int 512 // #200
[mirs of bb] | iput v0, v1,field@0026
[mirs of bb] =====startoffset is 2660  ======
[mirs of bb] | const/4 v7, #int 1 // #1
[mirs of bb] | const/4 v3, #int 1 // #1
[mirs of bb] | const/4 v1, #int 0 // #0
[mirs of bb] | iget-object v5, v8,field@0027
[mirs of bb] | const/4 v6, #int 0 // #0
[mirs of bb] | aput v7, v5, v6
[mirs of bb] | iget-object v5, v8,field@0027
[mirs of bb] | const/4 v6, #int 2 // #2
[mirs of bb] | aput v6, v5, v7
[mirs of bb] | const/4 v3, #int 2 // #2
[mirs of bb] | const/4 v2, #int 3 // #3
[mirs of bb] =====startoffset is 2698  ======
[mirs of bb] | add-int/lit8 v3, v3, #int 1 // #01
[mirs of bb] | iget-object v5, v8,field@0027
[mirs of bb] | sub-int v6, v3, v7
[mirs of bb] | aput v2, v5, v6
[mirs of bb] =====startoffset is 26ae  ======
[mirs of bb] | iget-object v5, v8,field@0027
[mirs of bb] | aget v5, v5, v4
[mirs of bb] =====startoffset is 26ba  ======
[mirs of bb] | iget-object v5, v8,field@0027
[mirs of bb] | aget v5, v5, v4
[mirs of bb] | div-int/lit8 v6, v2, #int 2 // #02
[mirs of bb] =====startoffset is 26ca  ======
[mirs of bb] | iget-object v5, v8,field@0027
[mirs of bb] | aget v5, v5, v4
[mirs of bb] | rem-int v5, v2, v5
[mirs of bb] =====startoffset is 26fc  ======
[mirs of bb] | iget v0, v1,field@0026
[mirs of bb] | new-array v0, v0, class@0031
[mirs of bb] | iput-object v0, v1,field@0027
[mirs of bb] | const/4 v0, #int 1 // #1
[mirs of bb] =====startoffset is 2744  ======
[mirs of bb] | new-instance v0,class@0027
[mirs of bb] | const-string v1, string@0060
[mirs of bb] =====startoffset is 276e  ======
[mirs of bb] | iput-wide v0, v2,field@0029
[mirs of bb] | iput-wide v0, v2,field@002a
[mirs of bb] | const/4 v0, #int 0 // #0
[mirs of bb] | iput-boolean v0, v2,field@0028
[mirs of bb] =====startoffset is 2796  ======
[mirs of bb] | iget-wide v0, v2,field@002a
[mirs of bb] | iput-wide v0, v2,field@0029
[mirs of bb] =====startoffset is 27c8  ======
[mirs of bb] | move-result-wide v1
[mirs of bb] | iput-wide v1, v5,field@002a
[mirs of bb] =====startoffset is 27ce  ======
[mirs of bb] | iget-wide v1, v5,field@002a
[mirs of bb] | iget-wide v3, v5,field@0029
[mirs of bb] | sub-long/2addr v1, v3
[mirs of bb] =====startoffset is 27f4  ======
[mirs of bb] | const/4 v1, #int 1 // #1
[mirs of bb] | iput-boolean v1, v3,field@0028
[mirs of bb] | new-instance v0,class@002d
[mirs of bb] =====startoffset is 280a  ======
[mirs of bb] | move-result-wide v1
[mirs of bb] | iput-wide v1, v3,field@0029
[mirs of bb] | iget-wide v1, v3,field@0029
[mirs of bb] | iput-wide v1, v3,field@002a
[mirs of bb] =====startoffset is 2834  ======
[mirs of bb] | const/4 v1, #int 0 // #0
[mirs of bb] | iput-boolean v1, v3,field@0028
[mirs of bb] | new-instance v0,class@002d
[mirs of bb] =====startoffset is 284a  ======
[mirs of bb] | move-result-wide v1
[mirs of bb] | iput-wide v1, v3,field@002a
[mirs of bb] =====startoffset is 286a  ======
[mirs of bb] | const/16 v0, #int 50 // #32
[mirs of bb] | iput v0, v1,field@002e
[mirs of bb] =====startoffset is 28b0  ======
[mirs of bb] | const-string v5, string@00a8
[mirs of bb] | new-instance v2,class@0028
[mirs of bb] | const-string v3, string@006a
[mirs of bb] =====startoffset is 28f4  ======
[mirs of bb] | move-result-object v3
[mirs of bb] | iget-object v4, v6,field@002c
[mirs of bb] =====startoffset is 2900  ======
[mirs of bb] | move-result-object v3
[mirs of bb] | iget-object v4, v6,field@002d
[mirs of bb] =====startoffset is 2918  ======
[mirs of bb] | move-result-object v3
[mirs of bb] | const-string v4, string@00a8
[mirs of bb] | mul-int/lit8 v4, v1, #int 65 // #41
[mirs of bb] =====startoffset is 2948  ======
[mirs of bb] | const-string v0, string@00d1
[mirs of bb] | iput-object v0, v1,field@002b
[mirs of bb] | const-string v0, string@00f7
[mirs of bb] | iput-object v0, v1,field@002c
[mirs of bb] | const-string v0, string@00f3
[mirs of bb] | iput-object v0, v1,field@002d
[mirs of bb] | const/4 v0, #int 1 // #1
[mirs of bb] =====startoffset is 299c  ======
[mirs of bb] | new-instance v0,class@0027
[mirs of bb] | const-string v1, string@0066
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
Total arena pages for JIT: 11
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
Total arena pages for JIT: 12
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
Total arena pages for JIT: 13
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
Total arena pages for JIT: 14
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
Total arena pages for JIT: 15
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
Total arena pages for JIT: 16
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
Total arena pages for JIT: 17
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
Total arena pages for JIT: 18
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
Total arena pages for JIT: 19
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
Total arena pages for JIT: 20
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
i'm in debugBB
1312
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
Total arena pages for JIT: 21
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
Total arena pages for JIT: 22
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
Total arena pages for JIT: 23
>>>>>>>>>>>>>>>The function is dvmCompilerDoSSAConversion<<<<<<<<<<<<<<<<<
The function is dvmCompilerMIR2LIR: the MIR opcode is 1
>>>>>>>>>>>>>>>The function is handleFmt12x<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerGetSrc<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is dvmCompilerGetDest<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is allocLive, core reg<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is allocLive, core reg<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is storeValue<<<<<<<<<<<<<<<<<
the Src reg is not phy
>>>>>>>>>>>>>>>The function is allocLive, core reg<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>The function is allocLive, core reg<<<<<<<<<<<<<<<<<
!!!!!The current function is memAlloc4Assemble: malloc buffer size = 8
[code buffer]:79900014
[code buffer]:78900000
[code buffer]:BB-24fc.bin